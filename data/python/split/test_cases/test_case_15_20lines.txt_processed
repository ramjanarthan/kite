^class utf8alphabet(swigwrapper.utf8alphabet):$^    """convenience wrapper for alphabet which calls init in the constructor"""$^    def __init__(self):$^        super(utf8alphabet, self).__init__()$^        err = self.init(b'')$^        if err != 0:$^            raise valueerror('utf8alphabet initialization failed with error code 0x{:x}'.format(err))$^$^    def canencodesingle(self, input):$^        '''$^        returns true if the single character/output class has a corresponding label$^        in the alphabet.$^        '''$^        return super(utf8alphabet, self).canencodesingle(input.encode('utf-8'))$^$^    def canencode(self, input):$^        '''$^        returns true if the entire string can be encoded into labels in this$^        alphabet.$^        '''$