^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextread 0$^$^   pywrapfst.pyx0000$^         fstioerror read failed.$^       $^       return readfilename              $^  $^     staticmethod$^ $^  pyxxdecrefpyxr$^  pyxt0  pyobject pyxf0pywrapfstreadpyxvfilename 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^     staticmethod$^     def readfilename              $^       $^       readfilename$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.fst.read pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^     staticmethod$^     def readfromstringstate              $^       $^       readfromstringstring fsttypenone$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0fst0readfromstringpyobject pyxself pyobject pyxvstate proto$^static char pyxdoc0pywrapfst0fst0readfromstring  n     readfromstringstring fsttypenonenn     reads an fst from a serialized string.nn     argsn       state a string containing the serialized fst.nn     returnsn       an fst object.nn     raisesn       fstioerror read failed.n       fstoperror readtime conversion failed.nn     see also writetostring.n     $^static pymethoddef pyxmdef0pywrapfst0fst0readfromstring  readfromstring pycfunctionpyxpw0pywrapfst0fst0readfromstring metho pyxdoc0pywrapfst0fst0readfromstring$^static pyobject pyxpw0pywrapfst0fst0readfromstringpyobject pyxself pyobject pyxvstate $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreadfromstring wrapper 0$^  pyxr  pyxpf0pywrapfst0fst0readfromstringpyxself pyobject pyxvstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0fst0readfromstringcythonunused pyobject pyxself pyobject pyxvstate $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreadfromstring 0$^$^   pywrapfst.pyx0000$^       see also writetostring.$^       $^       return readfromstringstate              $^  $^  $^ $^  pyxxdecrefpyxr$^  pyxt0  pyobject pyxf0pywrapfstreadfromstringpyxvstate 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^     staticmethod$^     def readfromstringstate              $^       $^       readfromstringstring fsttypenone$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.fst.readfromstring pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return arc at 0xx.formatidself$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0reprpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst0arc0reprpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrepr wrapper 0$^  pyxr  pyxpf0pywrapfst0arcreprstruct pyxobj0pywrapfstarc pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arcreprstruct pyxobj0pywrapfstarc pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrepr 0$^$^   pywrapfst.pyx0000$^  $^    def reprself$^      return arc at 0xx.formatidself              $^  $^    def initself int00 ilabel int00 olabel weight int00 nextstate$^ $^  pyxxdecrefpyxr$^  pyxt0  pyxpyobjectgetattrstrpyxkpsarcat0xx pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxincrefpyobject pyxvself$^  pyxgiverefpyobject pyxvself$^  pytuplesetitempyxt0 0 pyobject pyxvself$^  pyxt0  pyxpyobjectcallpyxbuiltinid pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return arc at 0xx.formatidself$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.repr pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return arc at 0xx.formatidself$^  $^    def initself int00 ilabel int00 olabel weight int00 nextstate              $^      cdef fst.weightclass wc  getweightclassoronebtropical weight$^      self.arc.resetnew fst.arcclassilabel olabel wc nextstate$^ $^$^ python wrapper $^static int pyxpw0pywrapfst0arc0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static int pyxpw0pywrapfst0arc0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  pyxt00basictypesint00 pyxvilabel$^  pyxt00basictypesint00 pyxvolabel$^  pyobject pyxvweight  0$^  pyxt00basictypesint00 pyxvnextstate$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextinit wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsilabelpyxnsolabelpyxnsweightpyxnsnextstate0$^    pyobject values0  0000$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsilabel  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsolabel  0 kwargs$^        else $^          pyxraiseargtupleinvalidinit 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsweight  0 kwargs$^        else $^          pyxraiseargtupleinvalidinit 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsnextstate  0 kwargs$^        else $^          pyxraiseargtupleinvalidinit 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs init  0 pyxerr0 0000 pyxl0error$^      $^     else if pytuplegetsizepyxargs  0 $^      goto pyxl0argtupleerror$^     else $^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^    $^    pyxvilabel  pyxpyintasint00tvalues0 if unlikelypyxvilabel  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^    pyxvolabel  pyxpyintasint00tvalues0 if unlikelypyxvolabel  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^    pyxvweight  values0$^    pyxvnextstate  pyxpyintasint00tvalues0 if unlikelypyxvnextstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidinit 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.init pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst0arc0initstruct pyxobj0pywrapfstarc pyxvself pyxvilabel pyxvolabel pyxvweight pyxvnextstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0arc0initstruct pyxobj0pywrapfstarc pyxvself pyxt00basictypesint00 pyxvilabel pyxt00basictypesint00 pyxvolabel pyobject pyxvweight pyxt00basictypesint00 pyxvnextstate $^  fstscriptweightclass pyxvwc$^  int pyxr$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  fstscriptweightclass pyxt0$^  pyxrefnannysetupcontextinit 0$^$^   pywrapfst.pyx0000$^  $^    def initself int00 ilabel int00 olabel weight int00 nextstate$^      cdef fst.weightclass wc  getweightclassoronebtropical weight              $^      self.arc.resetnew fst.arcclassilabel olabel wc nextstate$^  $^ $^  pyxt0  pyxconvertstringfrompystdinstringpyxnbtropical if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfstgetweightclassoronepyxt0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvwc  pyxt0$^$^   pywrapfst.pyx0000$^    def initself int00 ilabel int00 olabel weight int00 nextstate$^      cdef fst.weightclass wc  getweightclassoronebtropical weight$^      self.arc.resetnew fst.arcclassilabel olabel wc nextstate              $^  $^    cpdef arc copyself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfarc.resetnew fstscriptarcclasspyxvilabel pyxvolabel pyxvwc pyxvnextstate$^$^   pywrapfst.pyx0000$^      return arc at 0xx.formatidself$^  $^    def initself int00 ilabel int00 olabel weight int00 nextstate              $^      cdef fst.weightclass wc  getweightclassoronebtropical weight$^      self.arc.resetnew fst.arcclassilabel olabel wc nextstate$^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.init pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.arc.resetnew fst.arcclassilabel olabel wc nextstate$^  $^    cpdef arc copyself              $^      return arcself.ilabel self.olabel self.weight self.nextstate$^  $^ $^$^static pyobject pyxpw0pywrapfst0arc0copypyobject pyxvself cythonunused pyobject unused proto$^static struct pyxobj0pywrapfstarc pyxf0pywrapfst0arccopystruct pyxobj0pywrapfstarc pyxvself int pyxskipdispatch $^  struct pyxobj0pywrapfstarc pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextcopy 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnscopy if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0arc0copy $^      pyxxdecrefpyobject pyxr$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      if likelypyxt0  pynone  likelypyxtypetestpyxt0 pyxptype0pywrapfstarc pyxerr0 0000 pyxl0error$^      pyxr  struct pyxobj0pywrapfstarc pyxt0$^      pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^  $^    cpdef arc copyself$^      return arcself.ilabel self.olabel self.weight self.nextstate              $^  $^    property ilabel$^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsilabel if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsolabel if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsweight if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsnextstate if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxgiverefpyxt0$^  pytuplesetitempyxt0 0 pyxt0$^  pyxgiverefpyxt0$^  pytuplesetitempyxt0 0 pyxt0$^  pyxgiverefpyxt0$^  pytuplesetitempyxt0 0 pyxt0$^  pyxgiverefpyxt0$^  pytuplesetitempyxt0 0 pyxt0$^  pyxt0  0$^  pyxt0  0$^  pyxt0  0$^  pyxt0  0$^  pyxt0  pyxpyobjectcallpyobject pyxptype0pywrapfstarc pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  struct pyxobj0pywrapfstarc pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.arc.resetnew fst.arcclassilabel olabel wc nextstate$^  $^    cpdef arc copyself              $^      return arcself.ilabel self.olabel self.weight self.nextstate$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.copy pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0copypyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst0arc0copypyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextcopy wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0copystruct pyxobj0pywrapfstarc pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arc0copystruct pyxobj0pywrapfstarc pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextcopy 0$^  pyxxdecrefpyxr$^  pyxt0  pyobject pyxf0pywrapfst0arccopypyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.copy pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    property ilabel$^  $^      def getself              $^        return derefself.arc.ilabel$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0ilabel0getpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst0arc0ilabel0getpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextget wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0ilabelgetstruct pyxobj0pywrapfstarc pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arc0ilabelgetstruct pyxobj0pywrapfstarc pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextget 0$^$^   pywrapfst.pyx0000$^  $^      def getself$^        return derefself.arc.ilabel              $^  $^      def setself int00 value$^ $^  pyxxdecrefpyxr$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxpyintfromint00tpyxvselfarc.ilabel if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    property ilabel$^  $^      def getself              $^        return derefself.arc.ilabel$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.ilabel.get pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^        return derefself.arc.ilabel$^  $^      def setself int00 value              $^        derefself.arc.ilabel  value$^  $^ $^$^ python wrapper $^static int pyxpw0pywrapfst0arc0ilabel0setpyobject pyxvself pyobject pyxargvalue proto$^static int pyxpw0pywrapfst0arc0ilabel0setpyobject pyxvself pyobject pyxargvalue $^  pyxt00basictypesint00 pyxvvalue$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextset wrapper 0$^  assertpyxargvalue $^    pyxvvalue  pyxpyintasint00tpyxargvalue if unlikelypyxvvalue  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.ilabel.set pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst0arc0ilabel0setstruct pyxobj0pywrapfstarc pyxvself pyxt00basictypesint00pyxvvalue$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0arc0ilabel0setstruct pyxobj0pywrapfstarc pyxvself pyxt00basictypesint00 pyxvvalue $^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextset 0$^$^   pywrapfst.pyx0000$^  $^      def setself int00 value$^        derefself.arc.ilabel  value              $^  $^    property olabel$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfarc.ilabel  pyxvvalue$^$^   pywrapfst.pyx0000$^        return derefself.arc.ilabel$^  $^      def setself int00 value              $^        derefself.arc.ilabel  value$^  $^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.ilabel.set pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    property olabel$^  $^      def getself              $^        return derefself.arc.olabel$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0olabel0getpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst0arc0olabel0getpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextget wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0olabelgetstruct pyxobj0pywrapfstarc pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arc0olabelgetstruct pyxobj0pywrapfstarc pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextget 0$^$^   pywrapfst.pyx0000$^  $^      def getself$^        return derefself.arc.olabel              $^  $^      def setself int00 value$^ $^  pyxxdecrefpyxr$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxpyintfromint00tpyxvselfarc.olabel if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    property olabel$^  $^      def getself              $^        return derefself.arc.olabel$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.olabel.get pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^        return derefself.arc.olabel$^  $^      def setself int00 value              $^        derefself.arc.olabel  value$^  $^ $^$^ python wrapper $^static int pyxpw0pywrapfst0arc0olabel0setpyobject pyxvself pyobject pyxargvalue proto$^static int pyxpw0pywrapfst0arc0olabel0setpyobject pyxvself pyobject pyxargvalue $^  pyxt00basictypesint00 pyxvvalue$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextset wrapper 0$^  assertpyxargvalue $^    pyxvvalue  pyxpyintasint00tpyxargvalue if unlikelypyxvvalue  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.olabel.set pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst0arc0olabel0setstruct pyxobj0pywrapfstarc pyxvself pyxt00basictypesint00pyxvvalue$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0arc0olabel0setstruct pyxobj0pywrapfstarc pyxvself pyxt00basictypesint00 pyxvvalue $^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextset 0$^$^   pywrapfst.pyx0000$^  $^      def setself int00 value$^        derefself.arc.olabel  value              $^  $^    property weight$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfarc.olabel  pyxvvalue$^$^   pywrapfst.pyx0000$^        return derefself.arc.olabel$^  $^      def setself int00 value              $^        derefself.arc.olabel  value$^  $^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.olabel.set pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    property weight$^  $^      def getself              $^        cdef weight weight  weight.newweight$^        weight.weight.resetnew fst.weightclassderefself.arc.weight$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0weight0getpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst0arc0weight0getpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextget wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0weightgetstruct pyxobj0pywrapfstarc pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arc0weightgetstruct pyxobj0pywrapfstarc pyxvself $^  struct pyxobj0pywrapfstweight pyxvweight  0$^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextget 0$^$^   pywrapfst.pyx0000$^  $^      def getself$^        cdef weight weight  weight.newweight              $^        weight.weight.resetnew fst.weightclassderefself.arc.weight$^        return weight$^ $^  pyxt0  pyxtpnew0pywrapfstweightpytypeobject pyxptype0pywrapfstweight pyxemptytuple null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  if likelypyxtypetestpyxt0 pyxptype0pywrapfstweight pyxerr0 0000 pyxl0error$^  pyxvweight  struct pyxobj0pywrapfstweight pyxt0$^  pyxt0  0$^$^   pywrapfst.pyx0000$^      def getself$^        cdef weight weight  weight.newweight$^        weight.weight.resetnew fst.weightclassderefself.arc.weight              $^        return weight$^  $^ $^  if unlikelypyobject pyxvweight  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s weight$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxvweightweight.resetnew fstscriptweightclasspyxvselfarc.weight$^$^   pywrapfst.pyx0000$^        cdef weight weight  weight.newweight$^        weight.weight.resetnew fst.weightclassderefself.arc.weight$^        return weight              $^  $^      def setself weight$^ $^  pyxxdecrefpyxr$^  pyxincrefpyobject pyxvweight$^  pyxr  pyobject pyxvweight$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    property weight$^  $^      def getself              $^        cdef weight weight  weight.newweight$^        weight.weight.resetnew fst.weightclassderefself.arc.weight$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.weight.get pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxdecrefpyobject pyxvweight$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^        return weight$^  $^      def setself weight              $^        derefself.arc.weight  getweightclassoronebtropical weight$^  $^ $^$^ python wrapper $^static int pyxpw0pywrapfst0arc0weight0setpyobject pyxvself pyobject pyxvweight proto$^static int pyxpw0pywrapfst0arc0weight0setpyobject pyxvself pyobject pyxvweight $^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextset wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0weight0setstruct pyxobj0pywrapfstarc pyxvself pyobject pyxvweight$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0arc0weight0setstruct pyxobj0pywrapfstarc pyxvself pyobject pyxvweight $^  int pyxr$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  fstscriptweightclass pyxt0$^  pyxrefnannysetupcontextset 0$^$^   pywrapfst.pyx0000$^  $^      def setself weight$^        derefself.arc.weight  getweightclassoronebtropical weight              $^  $^    property nextstate$^ $^  pyxt0  pyxconvertstringfrompystdinstringpyxnbtropical if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfstgetweightclassoronepyxt0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfarc.weight  pyxt0$^$^   pywrapfst.pyx0000$^        return weight$^  $^      def setself weight              $^        derefself.arc.weight  getweightclassoronebtropical weight$^  $^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.weight.set pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    property nextstate$^  $^      def getself              $^        return derefself.arc.nextstate$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0nextstate0getpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst0arc0nextstate0getpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextget wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0nextstategetstruct pyxobj0pywrapfstarc pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arc0nextstategetstruct pyxobj0pywrapfstarc pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextget 0$^$^   pywrapfst.pyx0000$^  $^      def getself$^        return derefself.arc.nextstate              $^  $^      def setself int00 value$^ $^  pyxxdecrefpyxr$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxpyintfromint00tpyxvselfarc.nextstate if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    property nextstate$^  $^      def getself              $^        return derefself.arc.nextstate$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.nextstate.get pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^        return derefself.arc.nextstate$^  $^      def setself int00 value              $^        derefself.arc.nextstate  value$^  $^ $^$^ python wrapper $^static int pyxpw0pywrapfst0arc0nextstate0setpyobject pyxvself pyobject pyxargvalue proto$^static int pyxpw0pywrapfst0arc0nextstate0setpyobject pyxvself pyobject pyxargvalue $^  pyxt00basictypesint00 pyxvvalue$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextset wrapper 0$^  assertpyxargvalue $^    pyxvvalue  pyxpyintasint00tpyxargvalue if unlikelypyxvvalue  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.nextstate.set pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst0arc0nextstate0setstruct pyxobj0pywrapfstarc pyxvself pyxt00basictypesint00pyxvvalue$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0arc0nextstate0setstruct pyxobj0pywrapfstarc pyxvself pyxt00basictypesint00 pyxvvalue $^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextset 0$^$^   pywrapfst.pyx0000$^  $^      def setself int00 value$^        derefself.arc.nextstate  value              $^  $^  $^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfarc.nextstate  pyxvvalue$^$^   pywrapfst.pyx0000$^        return derefself.arc.nextstate$^  $^      def setself int00 value              $^        derefself.arc.nextstate  value$^  $^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxaddtracebackpywrapfst.arc.nextstate.set pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself              $^      raise typeerrorself.arc cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0reducecythonpyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst0arc0reducecythonpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreducecython wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0reducecythonstruct pyxobj0pywrapfstarc pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arc0reducecythoncythonunused struct pyxobj0pywrapfstarc pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreducecython 0$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.arc cannot be converted to a python object for pickling              $^  def setstatecythonself pyxstate$^      raise typeerrorself.arc cannot be converted to a python object for pickling$^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself              $^      raise typeerrorself.arc cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.reducecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself$^      raise typeerrorself.arc cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.arc cannot be converted to a python object for pickling$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0arc0setstatecythonpyobject pyxvself pyobject pyxvpyxstate proto$^static pyobject pyxpw0pywrapfst0arc0setstatecythonpyobject pyxvself pyobject pyxvpyxstate $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetstatecython wrapper 0$^  pyxr  pyxpf0pywrapfst0arc0setstatecythonstruct pyxobj0pywrapfstarc pyxvself pyobject pyxvpyxstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0arc0setstatecythoncythonunused struct pyxobj0pywrapfstarc pyxvself cythonunused pyobject pyxvpyxstate $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetstatecython 0$^$^   tree fragment0$^      raise typeerrorself.arc cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^      raise typeerrorself.arc cannot be converted to a python object for pickling              $^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.arc cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.arc cannot be converted to a python object for pickling$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arc.setstatecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cdef arc initarcconst fst.arcclass arc              $^    cdef weight weight  weight.newweight$^    weight.weight.resetnew fst.weightclassarc.weight$^ $^$^static struct pyxobj0pywrapfstarc pyxf0pywrapfstinitarcfstscriptarcclass const pyxvarc $^  struct pyxobj0pywrapfstweight pyxvweight  0$^  struct pyxobj0pywrapfstarc pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextinitarc 0$^$^   pywrapfst.pyx0000$^  $^  cdef arc initarcconst fst.arcclass arc$^    cdef weight weight  weight.newweight              $^    weight.weight.resetnew fst.weightclassarc.weight$^    return arcarc.ilabel arc.olabel weight arc.nextstate$^ $^  pyxt0  pyxtpnew0pywrapfstweightpytypeobject pyxptype0pywrapfstweight pyxemptytuple null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  if likelypyxtypetestpyxt0 pyxptype0pywrapfstweight pyxerr0 0000 pyxl0error$^  pyxvweight  struct pyxobj0pywrapfstweight pyxt0$^  pyxt0  0$^$^   pywrapfst.pyx0000$^  cdef arc initarcconst fst.arcclass arc$^    cdef weight weight  weight.newweight$^    weight.weight.resetnew fst.weightclassarc.weight              $^    return arcarc.ilabel arc.olabel weight arc.nextstate$^  $^ $^  if unlikelypyobject pyxvweight  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s weight$^    pyxerr0 0000 pyxl0error$^  $^  pyxvweightweight.resetnew fstscriptweightclasspyxvarc.weight$^$^   pywrapfst.pyx0000$^    cdef weight weight  weight.newweight$^    weight.weight.resetnew fst.weightclassarc.weight$^    return arcarc.ilabel arc.olabel weight arc.nextstate              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyxpyintfromint00tpyxvarc.ilabel if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyintfromint00tpyxvarc.olabel if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyintfromint00tpyxvarc.nextstate if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxgiverefpyxt0$^  pytuplesetitempyxt0 0 pyxt0$^  pyxgiverefpyxt0$^  pytuplesetitempyxt0 0 pyxt0$^  pyxincrefpyobject pyxvweight$^  pyxgiverefpyobject pyxvweight$^  pytuplesetitempyxt0 0 pyobject pyxvweight$^  pyxgiverefpyxt0$^  pytuplesetitempyxt0 0 pyxt0$^  pyxt0  0$^  pyxt0  0$^  pyxt0  0$^  pyxt0  pyxpyobjectcallpyobject pyxptype0pywrapfstarc pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  struct pyxobj0pywrapfstarc pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cdef arc initarcconst fst.arcclass arc              $^    cdef weight weight  weight.newweight$^    weight.weight.resetnew fst.weightclassarc.weight$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.initarc pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxdecrefpyobject pyxvweight$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return arciterator at 0xx.formatidself$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator0reprpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst00arciterator0reprpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrepr wrapper 0$^  pyxr  pyxpf0pywrapfst00arciteratorreprstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciteratorreprstruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrepr 0$^$^   pywrapfst.pyx0000$^  $^    def reprself$^      return arciterator at 0xx.formatidself              $^  $^    def initself fst ifst int00 state$^ $^  pyxxdecrefpyxr$^  pyxt0  pyxpyobjectgetattrstrpyxkpsarciteratorat0xx pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxincrefpyobject pyxvself$^  pyxgiverefpyobject pyxvself$^  pytuplesetitempyxt0 0 pyobject pyxvself$^  pyxt0  pyxpyobjectcallpyxbuiltinid pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return arciterator at 0xx.formatidself$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.repr pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return arciterator at 0xx.formatidself$^  $^    def initself fst ifst int00 state              $^      if not ifst.fst.get.validstateidstate$^        raise fstindexerrorstate index out of range$^ $^$^ python wrapper $^static int pyxpw0pywrapfst00arciterator0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static int pyxpw0pywrapfst00arciterator0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  pyxt00basictypesint00 pyxvstate$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextinit wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsstate0$^    pyobject values0  00$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsstate  0 kwargs$^        else $^          pyxraiseargtupleinvalidinit 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs init  0 pyxerr0 0000 pyxl0error$^      $^     else if pytuplegetsizepyxargs  0 $^      goto pyxl0argtupleerror$^     else $^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    pyxvstate  pyxpyintasint00tvalues0 if unlikelypyxvstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidinit 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.arciterator.init pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00arciterator0initstruct pyxobj0pywrapfstarciterator pyxvself pyxvifst pyxvstate$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst00arciterator0initstruct pyxobj0pywrapfstarciterator pyxvself struct pyxobj0pywrapfstfst pyxvifst pyxt00basictypesint00 pyxvstate $^  int pyxr$^  pyxrefnannydeclarations$^  int pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  stdsharedptrfstscriptfstclass  pyxt0$^  pyxrefnannysetupcontextinit 0$^$^   pywrapfst.pyx0000$^  $^    def initself fst ifst int00 state$^      if not ifst.fst.get.validstateidstate              $^        raise fstindexerrorstate index out of range$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxvifstfst.getvalidstateidpyxvstate  0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^    def initself fst ifst int00 state$^      if not ifst.fst.get.validstateidstate$^        raise fstindexerrorstate index out of range              $^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.fst  ifst.fst$^ $^    pyxt0  pyxgetmoduleglobalnamepyxnsfstindexerror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxpyobjectcallpyxt0 pyxtuple00 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxraisepyxt0 0 0 0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^  $^    def initself fst ifst int00 state$^      if not ifst.fst.get.validstateidstate              $^        raise fstindexerrorstate index out of range$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^ $^  $^$^   pywrapfst.pyx0000$^        raise fstindexerrorstate index out of range$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.fst  ifst.fst              $^      self.aiter.resetnew fst.arciteratorclassderefself.fst state$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxvifstfst$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselffst  pyxt0$^$^   pywrapfst.pyx0000$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.fst  ifst.fst$^      self.aiter.resetnew fst.arciteratorclassderefself.fst state              $^  $^     this just registers this class as a possible iterator.$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.resetnew fstscriptarciteratorclasspyxvselffst pyxvstate$^$^   pywrapfst.pyx0000$^      return arciterator at 0xx.formatidself$^  $^    def initself fst ifst int00 state              $^      if not ifst.fst.get.validstateidstate$^        raise fstindexerrorstate index out of range$^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.init pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^     this just registers this class as a possible iterator.$^    def iterself              $^      return self$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator0iterpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst00arciterator0iterpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextiter wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator0iterstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator0iterstruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextiter 0$^$^   pywrapfst.pyx0000$^     this just registers this class as a possible iterator.$^    def iterself$^      return self              $^  $^     magic method used to get a pythonic api out of the c api.$^ $^  pyxxdecrefpyxr$^  pyxincrefpyobject pyxvself$^  pyxr  pyobject pyxvself$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^     this just registers this class as a possible iterator.$^    def iterself              $^      return self$^  $^ $^$^   function exit code $^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^     magic method used to get a pythonic api out of the c api.$^    def nextself              $^      if self.done$^        raise stopiteration$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator0nextpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst00arciterator0nextpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextnext wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator0nextstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator0nextstruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxvresult  null$^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  int pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^$^   pywrapfst.pyx0000$^     magic method used to get a pythonic api out of the c api.$^    def nextself$^      if self.done              $^        raise stopiteration$^      result  self.value$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s done$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  struct pyxvtabstruct0pywrapfstarciterator pyxvselfpyxvtabdonepyxvself 0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^    def nextself$^      if self.done$^        raise stopiteration              $^      result  self.value$^      self.next$^ $^    pyxraisepyxbuiltinstopiteration 0 0 0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^     magic method used to get a pythonic api out of the c api.$^    def nextself$^      if self.done              $^        raise stopiteration$^      result  self.value$^ $^  $^$^   pywrapfst.pyx0000$^      if self.done$^        raise stopiteration$^      result  self.value              $^      self.next$^      return result$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s value$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  struct pyxvtabstruct0pywrapfstarciterator pyxvselfpyxvtabvaluepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxvresult  pyxt0$^  pyxt0  0$^$^   pywrapfst.pyx0000$^        raise stopiteration$^      result  self.value$^      self.next              $^      return result$^  $^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s next$^    pyxerr0 0000 pyxl0error$^  $^  struct pyxvtabstruct0pywrapfstarciterator pyxvselfpyxvtabnextpyxvself 0$^$^   pywrapfst.pyx0000$^      result  self.value$^      self.next$^      return result              $^  $^    cpdef bool doneself$^ $^  pyxxdecrefpyxr$^  pyxincrefpyxvresult$^  pyxr  pyxvresult$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^     magic method used to get a pythonic api out of the c api.$^    def nextself              $^      if self.done$^        raise stopiteration$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.next pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxdecrefpyxvresult$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return result$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^static pyobject pyxpw0pywrapfst00arciterator0donepyobject pyxvself cythonunused pyobject unused proto$^static bool pyxf0pywrapfst00arciteratordonestruct pyxobj0pywrapfstarciterator pyxvself int pyxskipdispatch $^  bool pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  bool pyxt0$^  pyxrefnannysetupcontextdone 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsdone if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator0done $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyobjectistruepyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        true if the iterator is exhausted false otherwise.$^      $^      return self.aiter.get.done              $^  $^    cpdef uint00 flagsself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfaiter.getdone$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return result$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.arciterator.done pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator0donepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00arciterator0done  n    doneselfnn    indicates whether the iterator is exhausted or not.nn    returnsn      true if the iterator is exhausted false otherwise.n    $^static pyobject pyxpw0pywrapfst00arciterator0donepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextdone wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator0donestruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator0donestruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextdone 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyboolfromlongpyxf0pywrapfst00arciteratordonepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.done pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.aiter.get.done$^  $^    cpdef uint00 flagsself              $^      $^      flagsself$^ $^$^static pyobject pyxpw0pywrapfst00arciterator00flagspyobject pyxvself cythonunused pyobject unused proto$^static pyxt00basictypesuint00 pyxf0pywrapfst00arciteratorflagsstruct pyxobj0pywrapfstarciterator pyxvself int pyxskipdispatch $^  pyxt00basictypesuint00 pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxt00basictypesuint00 pyxt0$^  pyxrefnannysetupcontextflags 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsflags if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator00flags $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyintasuint00tpyxt0 if unlikelypyxt0  uint00t0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        the current iterator behavioral flags as an integer.$^      $^      return self.aiter.get.flags              $^  $^    cpdef void nextself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfaiter.getflags$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return self.aiter.get.done$^  $^    cpdef uint00 flagsself              $^      $^      flagsself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.arciterator.flags pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00flagspyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00arciterator00flags  n    flagsselfnn    returns the current iterator behavioral flags.nn    returnsn      the current iterator behavioral flags as an integer.n    $^static pyobject pyxpw0pywrapfst00arciterator00flagspyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextflags wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator00flagsstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00flagsstruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextflags 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyintfromuint00tpyxf0pywrapfst00arciteratorflagspyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.flags pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.aiter.get.flags$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^static pyobject pyxpw0pywrapfst00arciterator00nextpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst00arciteratornextstruct pyxobj0pywrapfstarciterator pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsnext if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator00next $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      advances the iterator.$^      $^      self.aiter.get.next              $^  $^    cpdef sizet positionself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getnext$^$^   pywrapfst.pyx0000$^      return self.aiter.get.flags$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.arciterator.next pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00nextpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00arciterator00next  n    nextselfnn    advances the iterator.n    $^static pyobject pyxpw0pywrapfst00arciterator00nextpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextnext wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator00nextstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00nextstruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00arciteratornextpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.next pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.next$^  $^    cpdef sizet positionself              $^      $^      positionself$^ $^$^static pyobject pyxpw0pywrapfst00arciterator00positionpyobject pyxvself cythonunused pyobject unused proto$^static sizet pyxf0pywrapfst00arciteratorpositionstruct pyxobj0pywrapfstarciterator pyxvself int pyxskipdispatch $^  sizet pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  sizet pyxt0$^  pyxrefnannysetupcontextposition 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsposition if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator00position $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyintassizetpyxt0 if unlikelypyxt0  sizet0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        the iterators position expressed as an integer.$^      $^      return self.aiter.get.position              $^  $^    cpdef void resetself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfaiter.getposition$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.aiter.get.next$^  $^    cpdef sizet positionself              $^      $^      positionself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.arciterator.position pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00positionpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00arciterator00position  n    positionselfnn    returns the position of the iterator.nn    returnsn      the iterators position expressed as an integer.n    $^static pyobject pyxpw0pywrapfst00arciterator00positionpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextposition wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator00positionstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00positionstruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextposition 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyintfromsizetpyxf0pywrapfst00arciteratorpositionpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.position pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.aiter.get.position$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^static pyobject pyxpw0pywrapfst00arciterator00resetpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst00arciteratorresetstruct pyxobj0pywrapfstarciterator pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsreset if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator00reset $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      resets the iterator to the initial position.$^      $^      self.aiter.get.reset              $^  $^    cpdef void seekself sizet a$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getreset$^$^   pywrapfst.pyx0000$^      return self.aiter.get.position$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.arciterator.reset pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00resetpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00arciterator00reset  n    resetselfnn    resets the iterator to the initial position.n    $^static pyobject pyxpw0pywrapfst00arciterator00resetpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreset wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator00resetstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00resetstruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00arciteratorresetpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.reset pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.reset$^  $^    cpdef void seekself sizet a              $^      $^      seekself a$^ $^$^static pyobject pyxpw0pywrapfst00arciterator00seekpyobject pyxvself pyobject pyxarga proto$^static void pyxf0pywrapfst00arciteratorseekstruct pyxobj0pywrapfstarciterator pyxvself sizet pyxva int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextseek 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsseek if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator00seek $^      pyxt0  pyxpyintfromsizetpyxva if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else $^        if cythonfastpycall$^        if pyfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxt0$^          pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^         else$^        endif$^        if cythonfastpyccall$^        if pyxpyfastcfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxt0$^          pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^         else$^        endif$^        $^          pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^          pyxgiverefpyxt0$^          pytuplesetitempyxt0 00 pyxt0$^          pyxt0  0$^          pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^        $^      $^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        a the position to seek to.$^      $^      self.aiter.get.seeka              $^  $^    cpdef void setflagsself uint00 flags uint00 mask$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getseekpyxva$^$^   pywrapfst.pyx0000$^      self.aiter.get.reset$^  $^    cpdef void seekself sizet a              $^      $^      seekself a$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.arciterator.seek pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00seekpyobject pyxvself pyobject pyxarga proto$^static char pyxdoc0pywrapfst00arciterator00seek  n    seekself ann    advance the iterator to a new position.nn    argsn      a the position to seek to.n    $^static pyobject pyxpw0pywrapfst00arciterator00seekpyobject pyxvself pyobject pyxarga $^  sizet pyxva$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextseek wrapper 0$^  assertpyxarga $^    pyxva  pyxpyintassizetpyxarga if unlikelypyxva  sizet0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0error$^  pyxaddtracebackpywrapfst.arciterator.seek pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst00arciterator00seekstruct pyxobj0pywrapfstarciterator pyxvself sizetpyxva$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00seekstruct pyxobj0pywrapfstarciterator pyxvself sizet pyxva $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextseek 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00arciteratorseekpyxvself pyxva 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.seek pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.seeka$^  $^    cpdef void setflagsself uint00 flags uint00 mask              $^      $^      setflagsself flags mask$^ $^$^static pyobject pyxpw0pywrapfst00arciterator00setflagspyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static void pyxf0pywrapfst00arciteratorsetflagsstruct pyxobj0pywrapfstarciterator pyxvself pyxt00basictypesuint00 pyxvflags pyxt00basictypesuint00 pyxvmask int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  int pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetflags 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnssetflags if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator00setflags $^      pyxt0  pyxpyintfromuint00tpyxvflags if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxt0  pyxpyintfromuint00tpyxvmask if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      pyxt0  0$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^          pyxt0  0$^        $^      $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      $^        pyxt0  pytuplenew0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        if pyxt0 $^          pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        $^        pyxgiverefpyxt0$^        pytuplesetitempyxt0 0pyxt0 pyxt0$^        pyxgiverefpyxt0$^        pytuplesetitempyxt0 0pyxt0 pyxt0$^        pyxt0  0$^        pyxt0  0$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        mask a mask to be applied to the flags argument before setting them.$^      $^      self.aiter.get.setflagsflags mask              $^  $^    cpdef object valueself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getsetflagspyxvflags pyxvmask$^$^   pywrapfst.pyx0000$^      self.aiter.get.seeka$^  $^    cpdef void setflagsself uint00 flags uint00 mask              $^      $^      setflagsself flags mask$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.arciterator.setflags pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00setflagspyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00arciterator00setflags  n    setflagsself flags masknn    sets the current iterator behavioral flags.nn    argsn      flags the properties to be set.n      mask a mask to be applied to the flags argument before setting them.n    $^static pyobject pyxpw0pywrapfst00arciterator00setflagspyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  pyxt00basictypesuint00 pyxvflags$^  pyxt00basictypesuint00 pyxvmask$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetflags wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsflagspyxnsmask0$^    pyobject values0  00$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsflags  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsmask  0 kwargs$^        else $^          pyxraiseargtupleinvalidsetflags 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs setflags  0 pyxerr0 0000 pyxl0error$^      $^     else if pytuplegetsizepyxargs  0 $^      goto pyxl0argtupleerror$^     else $^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^    $^    pyxvflags  pyxpyintasuint00tvalues0 if unlikelypyxvflags  uint00t0  pyerroccurred pyxerr0 0000 pyxl0error$^    pyxvmask  pyxpyintasuint00tvalues0 if unlikelypyxvmask  uint00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidsetflags 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.arciterator.setflags pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst00arciterator00setflagsstruct pyxobj0pywrapfstarciterator pyxvself pyxvflags pyxvmask$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00setflagsstruct pyxobj0pywrapfstarciterator pyxvself pyxt00basictypesuint00 pyxvflags pyxt00basictypesuint00 pyxvmask $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetflags 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00arciteratorsetflagspyxvself pyxvflags pyxvmask 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.setflags pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.setflagsflags mask$^  $^    cpdef object valueself              $^      $^      valueself$^ $^$^static pyobject pyxpw0pywrapfst00arciterator00valuepyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxf0pywrapfst00arciteratorvaluestruct pyxobj0pywrapfstarciterator pyxvself int pyxskipdispatch $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextvalue 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsvalue if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00arciterator00value $^      pyxxdecrefpyxr$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      returns the current arc.$^      $^      return initarcself.aiter.get.value              $^  $^  $^ $^  pyxxdecrefpyxr$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyobject pyxf0pywrapfstinitarcpyxvselfaiter.getvalue if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.aiter.get.setflagsflags mask$^  $^    cpdef object valueself              $^      $^      valueself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.value pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00valuepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00arciterator00value  n    valueselfnn    returns the current arc.n    $^static pyobject pyxpw0pywrapfst00arciterator00valuepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextvalue wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator00valuestruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00valuestruct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextvalue 0$^  pyxxdecrefpyxr$^  pyxt0  pyxf0pywrapfst00arciteratorvaluepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.value pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself              $^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00reducecythonpyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst00arciterator00reducecythonpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreducecython wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator00reducecythonstruct pyxobj0pywrapfstarciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00reducecythoncythonunused struct pyxobj0pywrapfstarciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreducecython 0$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling              $^  def setstatecythonself pyxstate$^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself              $^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.reducecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself$^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arciterator00setstatecythonpyobject pyxvself pyobject pyxvpyxstate proto$^static pyobject pyxpw0pywrapfst00arciterator00setstatecythonpyobject pyxvself pyobject pyxvpyxstate $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetstatecython wrapper 0$^  pyxr  pyxpf0pywrapfst00arciterator00setstatecythonstruct pyxobj0pywrapfstarciterator pyxvself pyobject pyxvpyxstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arciterator00setstatecythoncythonunused struct pyxobj0pywrapfstarciterator pyxvself cythonunused pyobject pyxvpyxstate $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetstatecython 0$^$^   tree fragment0$^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling              $^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.aiterself.fst cannot be converted to a python object for pickling$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arciterator.setstatecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return mutablearciterator at 0xx.formatidself$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator0reprpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst00mutablearciterator0reprpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrepr wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciteratorreprstruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciteratorreprstruct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrepr 0$^$^   pywrapfst.pyx0000$^  $^    def reprself$^      return mutablearciterator at 0xx.formatidself              $^  $^    def initself mutablefst ifst int00 state$^ $^  pyxxdecrefpyxr$^  pyxt0  pyxpyobjectgetattrstrpyxkpsmutablearciteratorat0xx pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxincrefpyobject pyxvself$^  pyxgiverefpyobject pyxvself$^  pytuplesetitempyxt0 0 pyobject pyxvself$^  pyxt0  pyxpyobjectcallpyxbuiltinid pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return mutablearciterator at 0xx.formatidself$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.repr pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return mutablearciterator at 0xx.formatidself$^  $^    def initself mutablefst ifst int00 state              $^      if not ifst.fst.get.validstateidstate$^        raise fstindexerrorstate index out of range$^ $^$^ python wrapper $^static int pyxpw0pywrapfst00mutablearciterator0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static int pyxpw0pywrapfst00mutablearciterator0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstmutablefst pyxvifst  0$^  pyxt00basictypesint00 pyxvstate$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextinit wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsstate0$^    pyobject values0  00$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsstate  0 kwargs$^        else $^          pyxraiseargtupleinvalidinit 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs init  0 pyxerr0 0000 pyxl0error$^      $^     else if pytuplegetsizepyxargs  0 $^      goto pyxl0argtupleerror$^     else $^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^    $^    pyxvifst  struct pyxobj0pywrapfstmutablefst values0$^    pyxvstate  pyxpyintasint00tvalues0 if unlikelypyxvstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidinit 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.mutablearciterator.init pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstmutablefst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00mutablearciterator0initstruct pyxobj0pywrapfstmutablearciterator pyxvself pyxvifst pyxvstate$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst00mutablearciterator0initstruct pyxobj0pywrapfstmutablearciterator pyxvself struct pyxobj0pywrapfstmutablefst pyxvifst pyxt00basictypesint00 pyxvstate $^  int pyxr$^  pyxrefnannydeclarations$^  int pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  stdsharedptrfstscriptmutablefstclass  pyxt0$^  pyxrefnannysetupcontextinit 0$^$^   pywrapfst.pyx0000$^  $^    def initself mutablefst ifst int00 state$^      if not ifst.fst.get.validstateidstate              $^        raise fstindexerrorstate index out of range$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxvifstpyxbase.fst.getvalidstateidpyxvstate  0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^    def initself mutablefst ifst int00 state$^      if not ifst.fst.get.validstateidstate$^        raise fstindexerrorstate index out of range              $^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.mfst  ifst.mfst$^ $^    pyxt0  pyxgetmoduleglobalnamepyxnsfstindexerror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxpyobjectcallpyxt0 pyxtuple00 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxraisepyxt0 0 0 0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^  $^    def initself mutablefst ifst int00 state$^      if not ifst.fst.get.validstateidstate              $^        raise fstindexerrorstate index out of range$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^ $^  $^$^   pywrapfst.pyx0000$^        raise fstindexerrorstate index out of range$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.mfst  ifst.mfst              $^      self.aiter.resetnew fst.mutablearciteratorclassifst.mfst.get state$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s mfst$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxvifstmfst$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s mfst$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfmfst  pyxt0$^$^   pywrapfst.pyx0000$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.mfst  ifst.mfst$^      self.aiter.resetnew fst.mutablearciteratorclassifst.mfst.get state              $^  $^    cpdef bool doneself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s mfst$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.resetnew fstscriptmutablearciteratorclasspyxvifstmfst.get pyxvstate$^$^   pywrapfst.pyx0000$^      return mutablearciterator at 0xx.formatidself$^  $^    def initself mutablefst ifst int00 state              $^      if not ifst.fst.get.validstateidstate$^        raise fstindexerrorstate index out of range$^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.init pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.resetnew fst.mutablearciteratorclassifst.mfst.get state$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator0donepyobject pyxvself cythonunused pyobject unused proto$^static bool pyxf0pywrapfst00mutablearciteratordonestruct pyxobj0pywrapfstmutablearciterator pyxvself int pyxskipdispatch $^  bool pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  bool pyxt0$^  pyxrefnannysetupcontextdone 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsdone if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator0done $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyobjectistruepyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        true if the iterator is exhausted false otherwise.$^      $^      return self.aiter.get.done              $^  $^    cpdef uint00 flagsself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfaiter.getdone$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.aiter.resetnew fst.mutablearciteratorclassifst.mfst.get state$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.done pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator0donepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00mutablearciterator0done  n    doneselfnn    indicates whether the iterator is exhausted or not.nn    returnsn      true if the iterator is exhausted false otherwise.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator0donepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextdone wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator0donestruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator0donestruct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextdone 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyboolfromlongpyxf0pywrapfst00mutablearciteratordonepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.done pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.aiter.get.done$^  $^    cpdef uint00 flagsself              $^      $^      flagsself$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator0flagspyobject pyxvself cythonunused pyobject unused proto$^static pyxt00basictypesuint00 pyxf0pywrapfst00mutablearciteratorflagsstruct pyxobj0pywrapfstmutablearciterator pyxvself int pyxskipdispatch $^  pyxt00basictypesuint00 pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxt00basictypesuint00 pyxt0$^  pyxrefnannysetupcontextflags 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsflags if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator0flags $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyintasuint00tpyxt0 if unlikelypyxt0  uint00t0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        the current iterator behavioral flags as an integer.$^      $^      return self.aiter.get.flags              $^  $^    cpdef void nextself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfaiter.getflags$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return self.aiter.get.done$^  $^    cpdef uint00 flagsself              $^      $^      flagsself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.flags pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator0flagspyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00mutablearciterator0flags  n    flagsselfnn    returns the current iterator behavioral flags.nn    returnsn      the current iterator behavioral flags as an integer.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator0flagspyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextflags wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator0flagsstruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator0flagsstruct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextflags 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyintfromuint00tpyxf0pywrapfst00mutablearciteratorflagspyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.flags pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.aiter.get.flags$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator0nextpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst00mutablearciteratornextstruct pyxobj0pywrapfstmutablearciterator pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsnext if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator0next $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      advances the iterator.$^      $^      self.aiter.get.next              $^  $^    cpdef sizet positionself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getnext$^$^   pywrapfst.pyx0000$^      return self.aiter.get.flags$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.next pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator0nextpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00mutablearciterator0next  n    nextselfnn    advances the iterator.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator0nextpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextnext wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator0nextstruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator0nextstruct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00mutablearciteratornextpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.next pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.next$^  $^    cpdef sizet positionself              $^      $^      positionself$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator00positionpyobject pyxvself cythonunused pyobject unused proto$^static sizet pyxf0pywrapfst00mutablearciteratorpositionstruct pyxobj0pywrapfstmutablearciterator pyxvself int pyxskipdispatch $^  sizet pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  sizet pyxt0$^  pyxrefnannysetupcontextposition 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsposition if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator00position $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyintassizetpyxt0 if unlikelypyxt0  sizet0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        the iterators position expressed as an integer.$^      $^      return self.aiter.get.position              $^  $^    cpdef void resetself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfaiter.getposition$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.aiter.get.next$^  $^    cpdef sizet positionself              $^      $^      positionself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.position pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00positionpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00mutablearciterator00position  n    positionselfnn    returns the position of the iterator.nn    returnsn      the iterators position expressed as an integer.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator00positionpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextposition wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator00positionstruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00positionstruct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextposition 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyintfromsizetpyxf0pywrapfst00mutablearciteratorpositionpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.position pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.aiter.get.position$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator00resetpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst00mutablearciteratorresetstruct pyxobj0pywrapfstmutablearciterator pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsreset if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator00reset $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      resets the iterator to the initial position.$^      $^      self.aiter.get.reset              $^  $^    cpdef void seekself sizet a$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getreset$^$^   pywrapfst.pyx0000$^      return self.aiter.get.position$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.reset pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00resetpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00mutablearciterator00reset  n    resetselfnn    resets the iterator to the initial position.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator00resetpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreset wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator00resetstruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00resetstruct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00mutablearciteratorresetpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.reset pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.reset$^  $^    cpdef void seekself sizet a              $^      $^      seekself a$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator00seekpyobject pyxvself pyobject pyxarga proto$^static void pyxf0pywrapfst00mutablearciteratorseekstruct pyxobj0pywrapfstmutablearciterator pyxvself sizet pyxva int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextseek 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsseek if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator00seek $^      pyxt0  pyxpyintfromsizetpyxva if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else $^        if cythonfastpycall$^        if pyfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxt0$^          pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^         else$^        endif$^        if cythonfastpyccall$^        if pyxpyfastcfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxt0$^          pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^         else$^        endif$^        $^          pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^          pyxgiverefpyxt0$^          pytuplesetitempyxt0 00 pyxt0$^          pyxt0  0$^          pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^        $^      $^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        a the position to seek to.$^      $^      self.aiter.get.seeka              $^  $^    cpdef void setflagsself uint00 flags uint00 mask$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getseekpyxva$^$^   pywrapfst.pyx0000$^      self.aiter.get.reset$^  $^    cpdef void seekself sizet a              $^      $^      seekself a$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.seek pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00seekpyobject pyxvself pyobject pyxarga proto$^static char pyxdoc0pywrapfst00mutablearciterator00seek  n    seekself ann    advance the iterator to a new position.nn    argsn      a the position to seek to.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator00seekpyobject pyxvself pyobject pyxarga $^  sizet pyxva$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextseek wrapper 0$^  assertpyxarga $^    pyxva  pyxpyintassizetpyxarga if unlikelypyxva  sizet0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0error$^  pyxaddtracebackpywrapfst.mutablearciterator.seek pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst00mutablearciterator00seekstruct pyxobj0pywrapfstmutablearciterator pyxvself sizetpyxva$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00seekstruct pyxobj0pywrapfstmutablearciterator pyxvself sizet pyxva $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextseek 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00mutablearciteratorseekpyxvself pyxva 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.seek pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.seeka$^  $^    cpdef void setflagsself uint00 flags uint00 mask              $^      $^      setflagsself flags mask$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator00setflagspyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static void pyxf0pywrapfst00mutablearciteratorsetflagsstruct pyxobj0pywrapfstmutablearciterator pyxvself pyxt00basictypesuint00 pyxvflags pyxt00basictypesuint00 pyxvmask int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  int pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetflags 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnssetflags if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator00setflags $^      pyxt0  pyxpyintfromuint00tpyxvflags if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxt0  pyxpyintfromuint00tpyxvmask if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      pyxt0  0$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^          pyxt0  0$^        $^      $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      $^        pyxt0  pytuplenew0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        if pyxt0 $^          pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        $^        pyxgiverefpyxt0$^        pytuplesetitempyxt0 0pyxt0 pyxt0$^        pyxgiverefpyxt0$^        pytuplesetitempyxt0 0pyxt0 pyxt0$^        pyxt0  0$^        pyxt0  0$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        mask a mask to be applied to the flags argument before setting them.$^      $^      self.aiter.get.setflagsflags mask              $^  $^    cpdef void setvalueself arc arc$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getsetflagspyxvflags pyxvmask$^$^   pywrapfst.pyx0000$^      self.aiter.get.seeka$^  $^    cpdef void setflagsself uint00 flags uint00 mask              $^      $^      setflagsself flags mask$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.setflags pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00setflagspyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00mutablearciterator00setflags  n    setflagsself flags masknn    sets the current iterator behavioral flags.nn    argsn      flags the properties to be set.n      mask a mask to be applied to the flags argument before setting them.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator00setflagspyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  pyxt00basictypesuint00 pyxvflags$^  pyxt00basictypesuint00 pyxvmask$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetflags wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsflagspyxnsmask0$^    pyobject values0  00$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsflags  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsmask  0 kwargs$^        else $^          pyxraiseargtupleinvalidsetflags 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs setflags  0 pyxerr0 0000 pyxl0error$^      $^     else if pytuplegetsizepyxargs  0 $^      goto pyxl0argtupleerror$^     else $^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^    $^    pyxvflags  pyxpyintasuint00tvalues0 if unlikelypyxvflags  uint00t0  pyerroccurred pyxerr0 0000 pyxl0error$^    pyxvmask  pyxpyintasuint00tvalues0 if unlikelypyxvmask  uint00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidsetflags 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.mutablearciterator.setflags pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst00mutablearciterator00setflagsstruct pyxobj0pywrapfstmutablearciterator pyxvself pyxvflags pyxvmask$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00setflagsstruct pyxobj0pywrapfstmutablearciterator pyxvself pyxt00basictypesuint00 pyxvflags pyxt00basictypesuint00 pyxvmask $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetflags 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00mutablearciteratorsetflagspyxvself pyxvflags pyxvmask 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.setflags pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.setflagsflags mask$^  $^    cpdef void setvalueself arc arc              $^      $^      setvalueself arc$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator00setvaluepyobject pyxvself pyobject pyxvarc proto$^static void pyxf0pywrapfst00mutablearciteratorsetvaluestruct pyxobj0pywrapfstmutablearciterator pyxvself struct pyxobj0pywrapfstarc pyxvarc int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetvalue 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnssetvalue if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator00setvalue $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyobject pyxvarc if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^       else $^        if cythonfastpycall$^        if pyfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyobject pyxvarc$^          pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^         else$^        endif$^        if cythonfastpyccall$^        if pyxpyfastcfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyobject pyxvarc$^          pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^         else$^        endif$^        $^          pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^          pyxincrefpyobject pyxvarc$^          pyxgiverefpyobject pyxvarc$^          pytuplesetitempyxt0 00 pyobject pyxvarc$^          pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^        $^      $^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        arc the arc to replace the current arc with.$^      $^      self.aiter.get.setvaluederefarc.arc              $^  $^    cpdef object valueself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvarc  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arc$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfaiter.getsetvaluepyxvarcarc$^$^   pywrapfst.pyx0000$^      self.aiter.get.setflagsflags mask$^  $^    cpdef void setvalueself arc arc              $^      $^      setvalueself arc$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.mutablearciterator.setvalue pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00setvaluepyobject pyxvself pyobject pyxvarc proto$^static char pyxdoc0pywrapfst00mutablearciterator00setvalue  n    setvalueself arcnn    replace the current arc with a new arc.nn    argsn      arc the arc to replace the current arc with.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator00setvaluepyobject pyxvself pyobject pyxvarc $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetvalue wrapper 0$^  if unlikelypyxargtypetestpyobject pyxvarc pyxptype0pywrapfstarc 0 arc 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00mutablearciterator00setvaluestruct pyxobj0pywrapfstmutablearciterator pyxvself struct pyxobj0pywrapfstarc pyxvarc$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00setvaluestruct pyxobj0pywrapfstmutablearciterator pyxvself struct pyxobj0pywrapfstarc pyxvarc $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetvalue 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00mutablearciteratorsetvaluepyxvself pyxvarc 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.setvalue pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.aiter.get.setvaluederefarc.arc$^  $^    cpdef object valueself              $^      $^      valueself$^ $^$^static pyobject pyxpw0pywrapfst00mutablearciterator00valuepyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxf0pywrapfst00mutablearciteratorvaluestruct pyxobj0pywrapfstmutablearciterator pyxvself int pyxskipdispatch $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextvalue 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsvalue if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00mutablearciterator00value $^      pyxxdecrefpyxr$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      returns the current arc.$^      $^      return initarcself.aiter.get.value              $^  $^  $^ $^  pyxxdecrefpyxr$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s aiter$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyobject pyxf0pywrapfstinitarcpyxvselfaiter.getvalue if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.aiter.get.setvaluederefarc.arc$^  $^    cpdef object valueself              $^      $^      valueself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.value pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00valuepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00mutablearciterator00value  n    valueselfnn    returns the current arc.n    $^static pyobject pyxpw0pywrapfst00mutablearciterator00valuepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextvalue wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator00valuestruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00valuestruct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextvalue 0$^  pyxxdecrefpyxr$^  pyxt0  pyxf0pywrapfst00mutablearciteratorvaluepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.value pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself              $^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00reducecythonpyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst00mutablearciterator00reducecythonpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreducecython wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator00reducecythonstruct pyxobj0pywrapfstmutablearciterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00reducecythoncythonunused struct pyxobj0pywrapfstmutablearciterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreducecython 0$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling              $^  def setstatecythonself pyxstate$^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself              $^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.reducecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself$^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00mutablearciterator00setstatecythonpyobject pyxvself pyobject pyxvpyxstate proto$^static pyobject pyxpw0pywrapfst00mutablearciterator00setstatecythonpyobject pyxvself pyobject pyxvpyxstate $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetstatecython wrapper 0$^  pyxr  pyxpf0pywrapfst00mutablearciterator00setstatecythonstruct pyxobj0pywrapfstmutablearciterator pyxvself pyobject pyxvpyxstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00mutablearciterator00setstatecythoncythonunused struct pyxobj0pywrapfstmutablearciterator pyxvself cythonunused pyobject pyxvpyxstate $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetstatecython 0$^$^   tree fragment0$^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling              $^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.aiterself.mfst cannot be converted to a python object for pickling$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.mutablearciterator.setstatecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return stateiterator at 0xx.formatidself$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator0reprpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst00stateiterator0reprpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrepr wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiteratorreprstruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiteratorreprstruct pyxobj0pywrapfststateiterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrepr 0$^$^   pywrapfst.pyx0000$^  $^    def reprself$^      return stateiterator at 0xx.formatidself              $^  $^    def initself fst ifst$^ $^  pyxxdecrefpyxr$^  pyxt0  pyxpyobjectgetattrstrpyxkpsstateiteratorat0xx pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxincrefpyobject pyxvself$^  pyxgiverefpyobject pyxvself$^  pytuplesetitempyxt0 0 pyobject pyxvself$^  pyxt0  pyxpyobjectcallpyxbuiltinid pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^    $^  $^    def reprself              $^      return stateiterator at 0xx.formatidself$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.repr pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return stateiterator at 0xx.formatidself$^  $^    def initself fst ifst              $^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.fst  ifst.fst$^ $^$^ python wrapper $^static int pyxpw0pywrapfst00stateiterator0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static int pyxpw0pywrapfst00stateiterator0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextinit wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0$^    pyobject values0  0$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs init  0 pyxerr0 0000 pyxl0error$^      $^     else if pytuplegetsizepyxargs  0 $^      goto pyxl0argtupleerror$^     else $^      values0  pytuplegetitempyxargs 0$^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidinit 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.stateiterator.init pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00stateiterator0initstruct pyxobj0pywrapfststateiterator pyxvself pyxvifst$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst00stateiterator0initstruct pyxobj0pywrapfststateiterator pyxvself struct pyxobj0pywrapfstfst pyxvifst $^  int pyxr$^  pyxrefnannydeclarations$^  stdsharedptrfstscriptfstclass  pyxt0$^  pyxrefnannysetupcontextinit 0$^$^   pywrapfst.pyx0000$^    def initself fst ifst$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.fst  ifst.fst              $^      self.siter.resetnew fst.stateiteratorclassderefself.fst$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxvifstfst$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselffst  pyxt0$^$^   pywrapfst.pyx0000$^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.fst  ifst.fst$^      self.siter.resetnew fst.stateiteratorclassderefself.fst              $^  $^     this just registers this class as a possible iterator.$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s siter$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfsiter.resetnew fstscriptstateiteratorclasspyxvselffst$^$^   pywrapfst.pyx0000$^      return stateiterator at 0xx.formatidself$^  $^    def initself fst ifst              $^       makes copy of the sharedptr potentially extending the fsts lifetime.$^      self.fst  ifst.fst$^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxaddtracebackpywrapfst.stateiterator.init pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^     this just registers this class as a possible iterator.$^    def iterself              $^      return self$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator0iterpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst00stateiterator0iterpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextiter wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator0iterstruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator0iterstruct pyxobj0pywrapfststateiterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextiter 0$^$^   pywrapfst.pyx0000$^     this just registers this class as a possible iterator.$^    def iterself$^      return self              $^  $^     magic method used to get a pythonic api out of the c api.$^ $^  pyxxdecrefpyxr$^  pyxincrefpyobject pyxvself$^  pyxr  pyobject pyxvself$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^     this just registers this class as a possible iterator.$^    def iterself              $^      return self$^  $^ $^$^   function exit code $^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^     magic method used to get a pythonic api out of the c api.$^    def nextself              $^      if self.done$^        raise stopiteration$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator0nextpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst00stateiterator0nextpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextnext wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator0nextstruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator0nextstruct pyxobj0pywrapfststateiterator pyxvself $^  pyxt00basictypesint00 pyxvresult$^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  int pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^$^   pywrapfst.pyx0000$^     magic method used to get a pythonic api out of the c api.$^    def nextself$^      if self.done              $^        raise stopiteration$^      cdef int00 result  self.value$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s done$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  struct pyxvtabstruct0pywrapfststateiterator pyxvselfpyxvtabdonepyxvself 0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^    def nextself$^      if self.done$^        raise stopiteration              $^      cdef int00 result  self.value$^      self.next$^ $^    pyxraisepyxbuiltinstopiteration 0 0 0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^     magic method used to get a pythonic api out of the c api.$^    def nextself$^      if self.done              $^        raise stopiteration$^      cdef int00 result  self.value$^ $^  $^$^   pywrapfst.pyx0000$^      if self.done$^        raise stopiteration$^      cdef int00 result  self.value              $^      self.next$^      return result$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s value$^    pyxerr0 0000 pyxl0error$^  $^  pyxvresult  struct pyxvtabstruct0pywrapfststateiterator pyxvselfpyxvtabvaluepyxvself 0$^$^   pywrapfst.pyx0000$^        raise stopiteration$^      cdef int00 result  self.value$^      self.next              $^      return result$^  $^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s next$^    pyxerr0 0000 pyxl0error$^  $^  struct pyxvtabstruct0pywrapfststateiterator pyxvselfpyxvtabnextpyxvself 0$^$^   pywrapfst.pyx0000$^      cdef int00 result  self.value$^      self.next$^      return result              $^  $^    cpdef bool doneself$^ $^  pyxxdecrefpyxr$^  pyxt0  pyxpyintfromint00tpyxvresult if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^     magic method used to get a pythonic api out of the c api.$^    def nextself              $^      if self.done$^        raise stopiteration$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.next pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return result$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^static pyobject pyxpw0pywrapfst00stateiterator0donepyobject pyxvself cythonunused pyobject unused proto$^static bool pyxf0pywrapfst00stateiteratordonestruct pyxobj0pywrapfststateiterator pyxvself int pyxskipdispatch $^  bool pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  bool pyxt0$^  pyxrefnannysetupcontextdone 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsdone if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00stateiterator0done $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyobjectistruepyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        true if the iterator is exhausted false otherwise.$^      $^      return self.siter.get.done              $^  $^    cpdef void nextself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s siter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfsiter.getdone$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return result$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.stateiterator.done pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator0donepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00stateiterator0done  n    doneselfnn    indicates whether the iterator is exhausted or not.nn    returnsn      true if the iterator is exhausted false otherwise.n    $^static pyobject pyxpw0pywrapfst00stateiterator0donepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextdone wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator0donestruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator0donestruct pyxobj0pywrapfststateiterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextdone 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyboolfromlongpyxf0pywrapfst00stateiteratordonepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.done pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.siter.get.done$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^static pyobject pyxpw0pywrapfst00stateiterator00nextpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst00stateiteratornextstruct pyxobj0pywrapfststateiterator pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsnext if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00stateiterator00next $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      advances the iterator.$^      $^      self.siter.get.next              $^  $^    cpdef void resetself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s siter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfsiter.getnext$^$^   pywrapfst.pyx0000$^      return self.siter.get.done$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.stateiterator.next pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator00nextpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00stateiterator00next  n    nextselfnn    advances the iterator.n    $^static pyobject pyxpw0pywrapfst00stateiterator00nextpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextnext wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator00nextstruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator00nextstruct pyxobj0pywrapfststateiterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00stateiteratornextpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.next pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.siter.get.next$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^static pyobject pyxpw0pywrapfst00stateiterator00resetpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst00stateiteratorresetstruct pyxobj0pywrapfststateiterator pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsreset if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00stateiterator00reset $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      resets the iterator to the initial position.$^      $^      self.siter.get.reset              $^  $^    cpdef int00 valueself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s siter$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfsiter.getreset$^$^   pywrapfst.pyx0000$^      self.siter.get.next$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.stateiterator.reset pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator00resetpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00stateiterator00reset  n    resetselfnn    resets the iterator to the initial position.n    $^static pyobject pyxpw0pywrapfst00stateiterator00resetpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreset wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator00resetstruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator00resetstruct pyxobj0pywrapfststateiterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst00stateiteratorresetpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.reset pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.siter.get.reset$^  $^    cpdef int00 valueself              $^      $^      valueself$^ $^$^static pyobject pyxpw0pywrapfst00stateiterator00valuepyobject pyxvself cythonunused pyobject unused proto$^static pyxt00basictypesint00 pyxf0pywrapfst00stateiteratorvaluestruct pyxobj0pywrapfststateiterator pyxvself int pyxskipdispatch $^  pyxt00basictypesint00 pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxt00basictypesint00 pyxt0$^  pyxrefnannysetupcontextvalue 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsvalue if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst00stateiterator00value $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyintasint00tpyxt0 if unlikelypyxt0  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      returns the current state index.$^      $^      return self.siter.get.value              $^  $^  $^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s siter$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfsiter.getvalue$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.siter.get.reset$^  $^    cpdef int00 valueself              $^      $^      valueself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.stateiterator.value pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator00valuepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst00stateiterator00value  n    valueselfnn    returns the current state index.n    $^static pyobject pyxpw0pywrapfst00stateiterator00valuepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextvalue wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator00valuestruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator00valuestruct pyxobj0pywrapfststateiterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextvalue 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyintfromint00tpyxf0pywrapfst00stateiteratorvaluepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.value pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself              $^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator00reducecythonpyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst00stateiterator00reducecythonpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreducecython wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator00reducecythonstruct pyxobj0pywrapfststateiterator pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator00reducecythoncythonunused struct pyxobj0pywrapfststateiterator pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreducecython 0$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling              $^  def setstatecythonself pyxstate$^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself              $^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.reducecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself$^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00stateiterator00setstatecythonpyobject pyxvself pyobject pyxvpyxstate proto$^static pyobject pyxpw0pywrapfst00stateiterator00setstatecythonpyobject pyxvself pyobject pyxvpyxstate $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetstatecython wrapper 0$^  pyxr  pyxpf0pywrapfst00stateiterator00setstatecythonstruct pyxobj0pywrapfststateiterator pyxvself pyobject pyxvpyxstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00stateiterator00setstatecythoncythonunused struct pyxobj0pywrapfststateiterator pyxvself cythonunused pyobject pyxvpyxstate $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetstatecython 0$^$^   tree fragment0$^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling              $^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.fstself.siter cannot be converted to a python object for pickling$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.stateiterator.setstatecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cdef fst mapfst ifst              $^                 float deltafst.kdelta$^                 maptypebidentity$^ $^$^static struct pyxobj0pywrapfstfst pyxf0pywrapfstmapstruct pyxobj0pywrapfstfst pyxvifst struct pyxoptargs0pywrapfstmap pyxoptionalargs $^  float pyxvdelta  pyxk00$^  pyobject pyxvmaptype  pyobject pyxnbidentity$^  double pyxvpower  double0.$^$^   pywrapfst.pyx0000$^                 maptypebidentity$^                 double power0.$^                 weightnone              $^    cdef fst.maptype maptypeenum$^    if not fst.getmaptypetostringmaptype addrmaptypeenum$^ $^  pyobject pyxvweight  pyobject pynone$^  enum fstscriptmaptype pyxvmaptypeenum$^  fstscriptweightclass pyxvwc$^  struct pyxobj0pywrapfstfst pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  int pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  fstscriptweightclass pyxt0$^  fstscriptweightclass pyxt00$^  pyxrefnannysetupcontextmap 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvmaptype  pyxoptionalargsmaptype$^        if pyxoptionalargspyxn  0 $^          pyxvpower  pyxoptionalargspower$^          if pyxoptionalargspyxn  0 $^            pyxvweight  pyxoptionalargsweight$^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^                 weightnone$^    cdef fst.maptype maptypeenum$^    if not fst.getmaptypetostringmaptype addrmaptypeenum              $^      raise fstargerrorunknown map type r.formatmaptype$^    cdef fst.weightclass wc  getweightclassoroneifst.weighttype$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvmaptype null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  fstscriptgetmaptypepyxt0 pyxvmaptypeenum  0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^    cdef fst.maptype maptypeenum$^    if not fst.getmaptypetostringmaptype addrmaptypeenum$^      raise fstargerrorunknown map type r.formatmaptype              $^    cdef fst.weightclass wc  getweightclassoroneifst.weighttype$^        weight if maptypeenum  fst.timesmapper else$^ $^    pyxt0  pyxgetmoduleglobalnamepyxnsfstargerror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxpyobjectgetattrstrpyxkpsunknownmaptyper pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  null$^    if cythonunpackmethods  likelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxvmaptype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvmaptype$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvmaptype$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      $^        pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        pyxincrefpyxvmaptype$^        pyxgiverefpyxvmaptype$^        pytuplesetitempyxt0 00 pyxvmaptype$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxt0  null$^    if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      $^        pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        pyxgiverefpyxt0$^        pytuplesetitempyxt0 00 pyxt0$^        pyxt0  0$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxraisepyxt0 0 0 0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^                 weightnone$^    cdef fst.maptype maptypeenum$^    if not fst.getmaptypetostringmaptype addrmaptypeenum              $^      raise fstargerrorunknown map type r.formatmaptype$^    cdef fst.weightclass wc  getweightclassoroneifst.weighttype$^ $^  $^$^   pywrapfst.pyx0000$^      raise fstargerrorunknown map type r.formatmaptype$^    cdef fst.weightclass wc  getweightclassoroneifst.weighttype$^        weight if maptypeenum  fst.timesmapper else              $^        getweightclassorzeroifst.weighttype weight$^    return initxfstfst.mapderefifst.fst maptypeenum delta power wc$^ $^  if pyxvmaptypeenum  fstscripttimesmapper  0 $^$^     pywrapfst.pyx0000$^    if not fst.getmaptypetostringmaptype addrmaptypeenum$^      raise fstargerrorunknown map type r.formatmaptype$^    cdef fst.weightclass wc  getweightclassoroneifst.weighttype              $^        weight if maptypeenum  fst.timesmapper else$^        getweightclassorzeroifst.weighttype weight$^ $^    if unlikelypyobject pyxvifst  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s weighttype$^      pyxerr0 0000 pyxl0error$^    $^$^     pywrapfst.pyx0000$^      raise fstargerrorunknown map type r.formatmaptype$^    cdef fst.weightclass wc  getweightclassoroneifst.weighttype$^        weight if maptypeenum  fst.timesmapper else              $^        getweightclassorzeroifst.weighttype weight$^    return initxfstfst.mapderefifst.fst maptypeenum delta power wc$^ $^    pyxt00  pyxf0pywrapfstgetweightclassoronestruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabweighttypepyxvifst 0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^    pyxt0  pyxt00$^   else $^$^     pywrapfst.pyx0000$^    cdef fst.weightclass wc  getweightclassoroneifst.weighttype$^        weight if maptypeenum  fst.timesmapper else$^        getweightclassorzeroifst.weighttype weight              $^    return initxfstfst.mapderefifst.fst maptypeenum delta power wc$^  $^ $^    if unlikelypyobject pyxvifst  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s weighttype$^      pyxerr0 0000 pyxl0error$^    $^    pyxt00  pyxf0pywrapfstgetweightclassorzerostruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabweighttypepyxvifst 0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^    pyxt0  pyxt00$^  $^  pyxvwc  pyxt0$^$^   pywrapfst.pyx0000$^        weight if maptypeenum  fst.timesmapper else$^        getweightclassorzeroifst.weighttype weight$^    return initxfstfst.mapderefifst.fst maptypeenum delta power wc              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyobject pyxf0pywrapfstinitxfstfstscriptmappyxvifstfst pyxvmaptypeenum pyxvdelta pyxvpower pyxvwc if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstfst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cdef fst mapfst ifst              $^                 float deltafst.kdelta$^                 maptypebidentity$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.map pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef fst arcmapfst ifst              $^                    float deltafst.kdelta$^                    maptypebidentity$^ $^$^static pyobject pyxpw0pywrapfst00arcmappyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstfst pyxf0pywrapfstarcmapstruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstarcmap pyxoptionalargs $^  float pyxvdelta  pyxk00$^  pyobject pyxvmaptype  pyobject pyxnbidentity$^  double pyxvpower  double0.$^$^   pywrapfst.pyx0000$^                    maptypebidentity$^                    double power0.$^                    weightnone              $^    $^    arcmapifst delta0.0000000000 maptypeidentity weightnone$^ $^  pyobject pyxvweight  pyobject pynone$^  struct pyxobj0pywrapfstfst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstmap pyxt0$^  pyxrefnannysetupcontextarcmap 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvmaptype  pyxoptionalargsmaptype$^        if pyxoptionalargspyxn  0 $^          pyxvpower  pyxoptionalargspower$^          if pyxoptionalargspyxn  0 $^            pyxvweight  pyxoptionalargsweight$^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    see also statemap.$^    $^    return mapifst delta maptype power weight              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.maptype  pyxvmaptype$^  pyxt0.power  pyxvpower$^  pyxt0.weight  pyxvweight$^  pyxt0  pyobject pyxf0pywrapfstmappyxvifst pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstfst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef fst arcmapfst ifst              $^                    float deltafst.kdelta$^                    maptypebidentity$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arcmap pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00arcmappyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00arcmap  n  arcmapifst delta0.0000000000 maptypeidentity weightnonenn  constructively applies a transform to all arcs and final states.nn  this operation transforms each arc and final state in the input fst usingn  one of the followingnn     identity maps to self.n     inputepsilon replaces all input labels with epsilon.n     invert reciprocates all nonzero weights.n     floatpower raises all weights to a floatingpoint power.n     outputepsilon replaces all output labels with epsilon.n     quantize quantizes weights.n     plus adds a constant to all weights.n     power raises all weights to an integral power.n     rmweight replaces all nonzero weights with 0.n     superfinal redirects final states to a new superfinal state.n     times rightmultiplies a constant to all weights.n     tolog converts weights to the log semiring.n     tolog00 converts weights to the log00 semiring.n     tostandard converts weights to the tropical standard semiring.nn  argsn    ifst the input fst.n    delta comparisonquantization delta ignored unless maptype isn        quantize.n    maptype a string matching a known mapping operation see above.n    power a positive scalar or integer power ignored unless maptype isn        floatpower or power in which case it defaults to 0.n    weight a weight or weight string passed to the arcmapper ignored unlessn        maptype is plus in which case it defaults to semiring zero orn        times in which case it defaults to semiring one.nn  returnsn    an fst with arcs and final states remapped.nn  raisesn    fstargerror unknown map type.nn  see also statemap.n  $^static pyobject pyxpw0pywrapfst00arcmappyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  float pyxvdelta$^  pyobject pyxvmaptype  0$^  double pyxvpower$^  pyobject pyxvweight  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextarcmap wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsdeltapyxnsmaptypepyxnspowerpyxnsweight0$^    pyobject values0  00000$^    values0  pyobject pyxnbidentity$^$^     pywrapfst.pyx0000$^                    maptypebidentity$^                    double power0.$^                    weightnone              $^    $^    arcmapifst delta0.0000000000 maptypeidentity weightnone$^ $^    values0  pyobject pynone$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsmaptype$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnspower$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsweight$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs arcmap  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    pyxvmaptype  values0$^    if values0 $^      pyxvpower  pyxpyfloatasdoublevalues0 if unlikelypyxvpower  double0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvpower  double0.$^    $^    pyxvweight  values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidarcmap 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.arcmap pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00arcmappyxself pyxvifst pyxvdelta pyxvmaptype pyxvpower pyxvweight$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef fst arcmapfst ifst              $^                    float deltafst.kdelta$^                    maptypebidentity$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00arcmapcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst float pyxvdelta pyobject pyxvmaptype double pyxvpower pyobject pyxvweight $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstarcmap pyxt0$^  pyxrefnannysetupcontextarcmap 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.maptype  pyxvmaptype$^  pyxt0.power  pyxvpower$^  pyxt0.weight  pyxvweight$^  pyxt0  pyobject pyxf0pywrapfstarcmappyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.arcmap pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst composefst ifst0              $^                            fst ifst0$^                            composefilterbauto$^ $^$^static pyobject pyxpw0pywrapfst00composepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstcomposestruct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstcompose pyxoptionalargs $^  pyobject pyxvcomposefilter  pyobject pyxnbauto$^$^   pywrapfst.pyx0000$^                            fst ifst0$^                            composefilterbauto$^                            bool connecttrue              $^    $^    composeifst0 ifst0 composefilterauto connecttrue$^ $^  bool pyxvconnect  bool0$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  stduniqueptrfstcomposeoptions  pyxvopts$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  enum fstcomposefilter pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextcompose 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvcomposefilter  pyxoptionalargscomposefilter$^      if pyxoptionalargspyxn  0 $^        pyxvconnect  pyxoptionalargsconnect$^      $^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst0.arctype              $^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect$^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifst0pyxvtabarctypepyxvifst0 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect$^        getcomposefiltertostringcomposefilter              $^    fst.composederefifst0.fst derefifst0.fst tfst.get derefopts$^    return initmutablefsttfst.release$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvcomposefilter null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfstgetcomposefilterpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst0.arctype$^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect              $^        getcomposefiltertostringcomposefilter$^    fst.composederefifst0.fst derefifst0.fst tfst.get derefopts$^ $^  pyxvopts.resetnew fstcomposeoptionspyxvconnect pyxt0$^$^   pywrapfst.pyx0000$^    opts.resetnew fst.composeoptionsconnect$^        getcomposefiltertostringcomposefilter$^    fst.composederefifst0.fst derefifst0.fst tfst.get derefopts              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptcomposepyxvifst0fst pyxvifst0fst pyxvtfst.get pyxvopts$^$^   pywrapfst.pyx0000$^        getcomposefiltertostringcomposefilter$^    fst.composederefifst0.fst derefifst0.fst tfst.get derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst composefst ifst0              $^                            fst ifst0$^                            composefilterbauto$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compose pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00composepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00compose  n  composeifst0 ifst0 composefilterauto connecttruenn  constructively composes two fsts.nn  this operation computes the composition of two fsts. if a transduces stringn  x to y with weight a and b transduces y to z with weight b then theirn  composition transduces string x to z with weight a otimes b. the outputn  labels of the first transducer or the input labels of the second transducern  must be sorted or otherwise support appropriate matchers.nn  argsn    ifst0 the first input fst.n    ifst0 the second input fst.n    composefilter a string matching a known composition filter one ofn        altsequence auto match null sequence trivial.n    connect should output be trimmednn  returnsn    an fst.nn  see also arcsort.n  $^static pyobject pyxpw0pywrapfst00composepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  pyobject pyxvcomposefilter  0$^  bool pyxvconnect$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextcompose wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0pyxnsifst0pyxnscomposefilterpyxnsconnect0$^    pyobject values0  0000$^    values0  pyobject pyxnbauto$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else $^          pyxraiseargtupleinvalidcompose 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnscomposefilter$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsconnect$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs compose  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvcomposefilter  values0$^    if values0 $^      pyxvconnect  pyxpyobjectistruevalues0 if unlikelypyxvconnect  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                            fst ifst0$^                            composefilterbauto$^                            bool connecttrue              $^    $^    composeifst0 ifst0 composefilterauto connecttrue$^ $^      pyxvconnect  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidcompose 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.compose pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00composepyxself pyxvifst0 pyxvifst0 pyxvcomposefilter pyxvconnect$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst composefst ifst0              $^                            fst ifst0$^                            composefilterbauto$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00composecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 pyobject pyxvcomposefilter bool pyxvconnect $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstcompose pyxt0$^  pyxrefnannysetupcontextcompose 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.composefilter  pyxvcomposefilter$^  pyxt0.connect  pyxvconnect$^  pyxt0  pyobject pyxf0pywrapfstcomposepyxvifst0 pyxvifst0 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compose pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef fst convertfst ifst fsttypenone              $^    $^    convertifst fsttypenone$^ $^$^static pyobject pyxpw0pywrapfst00convertpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstfst pyxf0pywrapfstconvertstruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstconvert pyxoptionalargs $^  pyobject pyxvfsttype  pyobject pynone$^  stdstring pyxvfsttypestring$^  stduniqueptrfstscriptfstclass  pyxvtfst$^  struct pyxobj0pywrapfstfst pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  int pyxt0$^  stdstring pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextconvert 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvfsttype  pyxoptionalargsfsttype$^    $^  $^$^   pywrapfst.pyx0000$^      fstoperror conversion failed.$^    $^    cdef string fsttypestring  b if fsttype is none else tostringfsttype              $^    cdef uniqueptrfst.fstclass tfst$^    tfst.resetfst.convertderefifst.fst fsttypestring$^ $^  pyxt0  pyxvfsttype  pynone$^  if pyxt0  0 $^    pyxt0  pyxconvertstringfrompystdinstringpyxkpb00 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^    pyxt0  pyxt0$^   else $^    pyxt0  pyxf0pywrapfsttostringpyxvfsttype null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^    pyxt0  pyxconvertpybytesstringtopystdinstringpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxconvertstringfrompystdinstringpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxt0  pyxt0$^  $^  pyxvfsttypestring  pyxt0$^$^   pywrapfst.pyx0000$^    cdef string fsttypestring  b if fsttype is none else tostringfsttype$^    cdef uniqueptrfst.fstclass tfst$^    tfst.resetfst.convertderefifst.fst fsttypestring              $^     scriptland convert returns a null pointer to signal failure.$^    if tfst.get  null$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetfstscriptconvertpyxvifstfst pyxvfsttypestring$^$^   pywrapfst.pyx0000$^    tfst.resetfst.convertderefifst.fst fsttypestring$^     scriptland convert returns a null pointer to signal failure.$^    if tfst.get  null              $^      raise fstoperrorconversion to r failed.formatfsttype$^    return initxfsttfst.release$^ $^  pyxt0  pyxvtfst.get  null  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^     scriptland convert returns a null pointer to signal failure.$^    if tfst.get  null$^      raise fstoperrorconversion to r failed.formatfsttype              $^    return initxfsttfst.release$^  $^ $^    pyxt0  pyxgetmoduleglobalnamepyxnsfstoperror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxpyobjectgetattrstrpyxkpsconversiontorfailed pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  null$^    if cythonunpackmethods  likelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxvfsttype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvfsttype$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvfsttype$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      $^        pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        pyxincrefpyxvfsttype$^        pyxgiverefpyxvfsttype$^        pytuplesetitempyxt0 00 pyxvfsttype$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxt0  null$^    if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      $^        pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        pyxgiverefpyxt0$^        pytuplesetitempyxt0 00 pyxt0$^        pyxt0  0$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxraisepyxt0 0 0 0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^    tfst.resetfst.convertderefifst.fst fsttypestring$^     scriptland convert returns a null pointer to signal failure.$^    if tfst.get  null              $^      raise fstoperrorconversion to r failed.formatfsttype$^    return initxfsttfst.release$^ $^  $^$^   pywrapfst.pyx0000$^    if tfst.get  null$^      raise fstoperrorconversion to r failed.formatfsttype$^    return initxfsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitxfstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstfst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef fst convertfst ifst fsttypenone              $^    $^    convertifst fsttypenone$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.convert pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00convertpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00convert  n  convertifst fsttypenonenn  constructively converts an fst to a new internal representation.nn  argsn    ifst the input fst.n    fsttype a string indicating the fst type to convert to or none ifn        no conversion is desired.nn  returnsn    an equivalent fst converted to the desired fst type.nn  raisesn    fstoperror conversion failed.n  $^static pyobject pyxpw0pywrapfst00convertpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  pyobject pyxvfsttype  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextconvert wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsfsttype0$^    pyobject values0  00$^    values0  pyobject pynone$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsfsttype$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs convert  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    pyxvfsttype  values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidconvert 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.convert pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00convertpyxself pyxvifst pyxvfsttype$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00convertcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst pyobject pyxvfsttype $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstconvert pyxt0$^  pyxrefnannysetupcontextconvert 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.fsttype  pyxvfsttype$^  pyxt0  pyobject pyxf0pywrapfstconvertpyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.convert pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst determinizefst ifst              $^                                float deltafst.kshortestdelta$^                                dettypebfunctional$^ $^$^static pyobject pyxpw0pywrapfst00determinizepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstdeterminizestruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstdeterminize pyxoptionalargs $^  float pyxvdelta  pyxk00$^  pyobject pyxvdettype  pyobject pyxnbfunctional$^  pyxt00basictypesint00 pyxvnstate  pyxk00$^  pyxt00basictypesint00 pyxvsubsequentiallabel  pyxt00basictypesint000$^$^   pywrapfst.pyx0000$^                                int00 nstatefst.knostateid$^                                int00 subsequentiallabel0$^                                weightnone              $^                                bool incrementsubsequentiallabelfalse$^    $^ $^  pyobject pyxvweight  pyobject pynone$^$^   pywrapfst.pyx0000$^                                int00 subsequentiallabel0$^                                weightnone$^                                bool incrementsubsequentiallabelfalse              $^    $^    determinizeifst delta0e0 dettypefunctional$^ $^  bool pyxvincrementsubsequentiallabel  bool0$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  fstscriptweightclass pyxvwc$^  enum fstdeterminizetype pyxvdeterminizetypeenum$^  stduniqueptrfstscriptdeterminizeoptions  pyxvopts$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  fstscriptweightclass pyxt0$^  stdstring pyxt0$^  int pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextdeterminize 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvdettype  pyxoptionalargsdettype$^        if pyxoptionalargspyxn  0 $^          pyxvnstate  pyxoptionalargsnstate$^          if pyxoptionalargspyxn  0 $^            pyxvsubsequentiallabel  pyxoptionalargssubsequentiallabel$^            if pyxoptionalargspyxn  0 $^              pyxvweight  pyxoptionalargsweight$^              if pyxoptionalargspyxn  0 $^                pyxvincrementsubsequentiallabel  pyxoptionalargsincrementsubsequentiallabel$^              $^            $^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^     threshold is set to semiring zero no pruning if weight unspecified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^     threshold is set to semiring zero no pruning if weight unspecified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype              $^                                                       weight$^    cdef fst.determinizetype determinizetypeenum$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s weighttype$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^     threshold is set to semiring zero no pruning if weight unspecified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype$^                                                       weight              $^    cdef fst.determinizetype determinizetypeenum$^    if not fst.getdeterminizetypetostringdettype$^ $^  pyxt0  pyxf0pywrapfstgetweightclassorzerostruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabweighttypepyxvifst 0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvwc  pyxt0$^$^   pywrapfst.pyx0000$^                                                       weight$^    cdef fst.determinizetype determinizetypeenum$^    if not fst.getdeterminizetypetostringdettype              $^                                  addrdeterminizetypeenum$^      raise fstargerrorunknown determinization type r.formatdettype$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvdettype null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    cdef fst.determinizetype determinizetypeenum$^    if not fst.getdeterminizetypetostringdettype$^                                  addrdeterminizetypeenum              $^      raise fstargerrorunknown determinization type r.formatdettype$^    cdef uniqueptrfst.determinizeoptions opts$^ $^  pyxt0  fstscriptgetdeterminizetypepyxt0 pyxvdeterminizetypeenum  0  0$^$^   pywrapfst.pyx0000$^                                                       weight$^    cdef fst.determinizetype determinizetypeenum$^    if not fst.getdeterminizetypetostringdettype              $^                                  addrdeterminizetypeenum$^      raise fstargerrorunknown determinization type r.formatdettype$^ $^  if pyxt0 $^$^     pywrapfst.pyx0000$^    if not fst.getdeterminizetypetostringdettype$^                                  addrdeterminizetypeenum$^      raise fstargerrorunknown determinization type r.formatdettype              $^    cdef uniqueptrfst.determinizeoptions opts$^    opts.resetnew fst.determinizeoptionsdelta wc nstate subsequentiallabel$^ $^    pyxt0  pyxgetmoduleglobalnamepyxnsfstargerror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxpyobjectgetattrstrpyxkpsunknowndeterminizationtyper pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  null$^    if cythonunpackmethods  likelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxvdettype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvdettype$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvdettype$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      $^        pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        pyxincrefpyxvdettype$^        pyxgiverefpyxvdettype$^        pytuplesetitempyxt0 00 pyxvdettype$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxt0  null$^    if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      $^        pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^        pyxgiverefpyxt0$^        pytuplesetitempyxt0 00 pyxt0$^        pyxt0  0$^        pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxraisepyxt0 0 0 0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^                                                       weight$^    cdef fst.determinizetype determinizetypeenum$^    if not fst.getdeterminizetypetostringdettype              $^                                  addrdeterminizetypeenum$^      raise fstargerrorunknown determinization type r.formatdettype$^ $^  $^$^   pywrapfst.pyx0000$^      raise fstargerrorunknown determinization type r.formatdettype$^    cdef uniqueptrfst.determinizeoptions opts$^    opts.resetnew fst.determinizeoptionsdelta wc nstate subsequentiallabel              $^                                          determinizetypeenum$^                                          incrementsubsequentiallabel$^ $^  pyxvopts.resetnew fstscriptdeterminizeoptionspyxvdelta pyxvwc pyxvnstate pyxvsubsequentiallabel pyxvdeterminizetypeenum pyxvincrementsubsequentiallabel$^$^   pywrapfst.pyx0000$^                                          determinizetypeenum$^                                          incrementsubsequentiallabel$^    fst.determinizederefifst.fst tfst.get derefopts              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptdeterminizepyxvifstfst pyxvtfst.get pyxvopts$^$^   pywrapfst.pyx0000$^                                          incrementsubsequentiallabel$^    fst.determinizederefifst.fst tfst.get derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst determinizefst ifst              $^                                float deltafst.kshortestdelta$^                                dettypebfunctional$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.determinize pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00determinizepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00determinize  n  determinizeifst delta0e0 dettypefunctionaln              nstatenostateid subsequentiallabel0 weightnonen              incrementalsubsequentiallabelfalsenn  constructively determinizes a weighted fst.nn  this operations creates an equivalent fst that has the property that non  state has two transitions with the same input label. for this algorithmn  epsilon transitions are treated as regular symbols cf. rmepsilon.nn  argsn    ifst the input fst.n    delta comparisonquantization delta.n    dettype type of determinization one of functional input transducer isn        functional nonfunctional input transducer is not functional andn        disambiguate input transducer is not functional but only keep the minn        of ambiguous outputs.n    nstate state number threshold.n    subsequentiallabel input label of arc corresponding to residual finaln        output when producing a subsequential transducer.n    weight a weight or weight string indicating the desired weight thresholdn        below which paths are pruned if omitted no paths are pruned.n    incrementsubsequentiallabel increment subsequential when creatingn        several arcs for the residual final output at a given state.nn  returnsn    an equivalent deterministic fst.nn  raisesn    fstargerror unknown determinization type.nn  see also disambiguate rmepsilon.n  $^static pyobject pyxpw0pywrapfst00determinizepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  float pyxvdelta$^  pyobject pyxvdettype  0$^  pyxt00basictypesint00 pyxvnstate$^  pyxt00basictypesint00 pyxvsubsequentiallabel$^  pyobject pyxvweight  0$^  bool pyxvincrementsubsequentiallabel$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextdeterminize wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsdeltapyxnsdettypepyxnsnstatepyxnssubsequentiallabelpyxnsweightpyxnsincrementsubsequentiallabel0$^    pyobject values0  0000000$^    values0  pyobject pyxnbfunctional$^$^     pywrapfst.pyx0000$^                                int00 nstatefst.knostateid$^                                int00 subsequentiallabel0$^                                weightnone              $^                                bool incrementsubsequentiallabelfalse$^    $^ $^    values0  pyobject pynone$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdettype$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnstate$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnssubsequentiallabel$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsweight$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsincrementsubsequentiallabel$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs determinize  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    pyxvdettype  values0$^    if values0 $^      pyxvnstate  pyxpyintasint00tvalues0 if unlikelypyxvnstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnstate  pyxk00$^    $^    if values0 $^      pyxvsubsequentiallabel  pyxpyintasint00tvalues0 if unlikelypyxvsubsequentiallabel  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvsubsequentiallabel  pyxt00basictypesint000$^    $^    pyxvweight  values0$^    if values0 $^      pyxvincrementsubsequentiallabel  pyxpyobjectistruevalues0 if unlikelypyxvincrementsubsequentiallabel  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                                int00 subsequentiallabel0$^                                weightnone$^                                bool incrementsubsequentiallabelfalse              $^    $^    determinizeifst delta0e0 dettypefunctional$^ $^      pyxvincrementsubsequentiallabel  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvaliddeterminize 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.determinize pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00determinizepyxself pyxvifst pyxvdelta pyxvdettype pyxvnstate pyxvsubsequentiallabel pyxvweight pyxvincrementsubsequentiallabel$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst determinizefst ifst              $^                                float deltafst.kshortestdelta$^                                dettypebfunctional$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00determinizecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst float pyxvdelta pyobject pyxvdettype pyxt00basictypesint00 pyxvnstate pyxt00basictypesint00 pyxvsubsequentiallabel pyobject pyxvweight bool pyxvincrementsubsequentiallabel $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstdeterminize pyxt0$^  pyxrefnannysetupcontextdeterminize 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.dettype  pyxvdettype$^  pyxt0.nstate  pyxvnstate$^  pyxt0.subsequentiallabel  pyxvsubsequentiallabel$^  pyxt0.weight  pyxvweight$^  pyxt0.incrementsubsequentiallabel  pyxvincrementsubsequentiallabel$^  pyxt0  pyobject pyxf0pywrapfstdeterminizepyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.determinize pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst differencefst ifst0              $^                               fst ifst0$^                               composefilterbauto$^ $^$^static pyobject pyxpw0pywrapfst00differencepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstdifferencestruct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstdifference pyxoptionalargs $^  pyobject pyxvcomposefilter  pyobject pyxnbauto$^$^   pywrapfst.pyx0000$^                               fst ifst0$^                               composefilterbauto$^                               bool connecttrue              $^    $^    differenceifst0 ifst0 composefilterauto connecttrue$^ $^  bool pyxvconnect  bool0$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  stduniqueptrfstcomposeoptions  pyxvopts$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  enum fstcomposefilter pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextdifference 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvcomposefilter  pyxoptionalargscomposefilter$^      if pyxoptionalargspyxn  0 $^        pyxvconnect  pyxoptionalargsconnect$^      $^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst0.arctype              $^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect getcomposefilter$^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifst0pyxvtabarctypepyxvifst0 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect getcomposefilter$^        tostringcomposefilter              $^    fst.differencederefifst0.fst derefifst0.fst tfst.get derefopts$^    return initmutablefsttfst.release$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvcomposefilter null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst0.arctype$^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect getcomposefilter              $^        tostringcomposefilter$^    fst.differencederefifst0.fst derefifst0.fst tfst.get derefopts$^ $^  pyxt0  pyxf0pywrapfstgetcomposefilterpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvopts.resetnew fstcomposeoptionspyxvconnect pyxt0$^$^   pywrapfst.pyx0000$^    opts.resetnew fst.composeoptionsconnect getcomposefilter$^        tostringcomposefilter$^    fst.differencederefifst0.fst derefifst0.fst tfst.get derefopts              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptdifferencepyxvifst0fst pyxvifst0fst pyxvtfst.get pyxvopts$^$^   pywrapfst.pyx0000$^        tostringcomposefilter$^    fst.differencederefifst0.fst derefifst0.fst tfst.get derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst differencefst ifst0              $^                               fst ifst0$^                               composefilterbauto$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.difference pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00differencepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00difference  n  differenceifst0 ifst0 composefilterauto connecttruenn  constructively computes the difference of two fsts.nn  this operation computes the difference between two fsas. only strings that aren  in the first automaton but not in second are retained in the result. the firstn  argument must be an acceptor the second argument must be an unweightedn  epsilonfree deterministic acceptor. the output labels of the firstn  transducer or the input labels of the second transducer must be sorted orn  otherwise support appropriate matchers.nn  argsn    ifst0 the first input fst.n    ifst0 the second input fst.n    composefilter a string matching a known composition filter one ofn        altsequence auto match null sequence trivial.n    connect should the output fst be trimmednn  returnsn    an fst representing the difference of the fsts.n  $^static pyobject pyxpw0pywrapfst00differencepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  pyobject pyxvcomposefilter  0$^  bool pyxvconnect$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextdifference wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0pyxnsifst0pyxnscomposefilterpyxnsconnect0$^    pyobject values0  0000$^    values0  pyobject pyxnbauto$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else $^          pyxraiseargtupleinvaliddifference 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnscomposefilter$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsconnect$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs difference  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvcomposefilter  values0$^    if values0 $^      pyxvconnect  pyxpyobjectistruevalues0 if unlikelypyxvconnect  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                               fst ifst0$^                               composefilterbauto$^                               bool connecttrue              $^    $^    differenceifst0 ifst0 composefilterauto connecttrue$^ $^      pyxvconnect  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvaliddifference 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.difference pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00differencepyxself pyxvifst0 pyxvifst0 pyxvcomposefilter pyxvconnect$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst differencefst ifst0              $^                               fst ifst0$^                               composefilterbauto$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00differencecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 pyobject pyxvcomposefilter bool pyxvconnect $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstdifference pyxt0$^  pyxrefnannysetupcontextdifference 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.composefilter  pyxvcomposefilter$^  pyxt0.connect  pyxvconnect$^  pyxt0  pyobject pyxf0pywrapfstdifferencepyxvifst0 pyxvifst0 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.difference pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst disambiguatefst ifst              $^                                 float deltafst.kdelta$^                                 int00 nstatefst.knostateid$^ $^$^static pyobject pyxpw0pywrapfst00disambiguatepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstdisambiguatestruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstdisambiguate pyxoptionalargs $^  float pyxvdelta  pyxk00$^  pyxt00basictypesint00 pyxvnstate  pyxk00$^  pyxt00basictypesint00 pyxvsubsequentiallabel  pyxt00basictypesint000$^$^   pywrapfst.pyx0000$^                                 int00 nstatefst.knostateid$^                                 int00 subsequentiallabel0$^                                 weightnone              $^    $^    disambiguateifst delta0.0000000000 nstatenostateid$^ $^  pyobject pyxvweight  pyobject pynone$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  fstscriptweightclass pyxvwc$^  stduniqueptrfstscriptdisambiguateoptions  pyxvopts$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  fstscriptweightclass pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextdisambiguate 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvnstate  pyxoptionalargsnstate$^        if pyxoptionalargspyxn  0 $^          pyxvsubsequentiallabel  pyxoptionalargssubsequentiallabel$^          if pyxoptionalargspyxn  0 $^            pyxvweight  pyxoptionalargsweight$^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^     threshold is set to semiring zero no pruning if no weight is specified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^     threshold is set to semiring zero no pruning if no weight is specified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype              $^                                                       weight$^    cdef uniqueptrfst.disambiguateoptions opts$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s weighttype$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^     threshold is set to semiring zero no pruning if no weight is specified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype$^                                                       weight              $^    cdef uniqueptrfst.disambiguateoptions opts$^    opts.resetnew fst.disambiguateoptionsdelta wc nstate$^ $^  pyxt0  pyxf0pywrapfstgetweightclassorzerostruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabweighttypepyxvifst 0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvwc  pyxt0$^$^   pywrapfst.pyx0000$^                                                       weight$^    cdef uniqueptrfst.disambiguateoptions opts$^    opts.resetnew fst.disambiguateoptionsdelta wc nstate              $^                                           subsequentiallabel$^    fst.disambiguatederefifst.fst tfst.get derefopts$^ $^  pyxvopts.resetnew fstscriptdisambiguateoptionspyxvdelta pyxvwc pyxvnstate pyxvsubsequentiallabel$^$^   pywrapfst.pyx0000$^    opts.resetnew fst.disambiguateoptionsdelta wc nstate$^                                           subsequentiallabel$^    fst.disambiguatederefifst.fst tfst.get derefopts              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptdisambiguatepyxvifstfst pyxvtfst.get pyxvopts$^$^   pywrapfst.pyx0000$^                                           subsequentiallabel$^    fst.disambiguatederefifst.fst tfst.get derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst disambiguatefst ifst              $^                                 float deltafst.kdelta$^                                 int00 nstatefst.knostateid$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.disambiguate pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00disambiguatepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00disambiguate  n  disambiguateifst delta0.0000000000 nstatenostateidn               subsequentiallabel0 weightnonenn  constructively disambiguates a weighted transducer.nn  this operation disambiguates a weighted transducer. the result will be ann  equivalent fst that has the property that no two successful paths have then  same input labeling. for this algorithm epsilon transitions are treated asn  regular symbols cf. rmepsilon.nn  argsn    ifst the input fst.n    delta comparisonquantization delta.n    nstate state number threshold.n    subsequentiallabel input label of arc corresponding to residual finaln        output when producing a subsequential transducer.n    weight a weight or weight string indicating the desired weight thresholdn        below which paths are pruned if omitted no paths are pruned.nn  returnsn    an equivalent disambiguated fst.nn  see also determinize rmepsilon.n  $^static pyobject pyxpw0pywrapfst00disambiguatepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  float pyxvdelta$^  pyxt00basictypesint00 pyxvnstate$^  pyxt00basictypesint00 pyxvsubsequentiallabel$^  pyobject pyxvweight  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextdisambiguate wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsdeltapyxnsnstatepyxnssubsequentiallabelpyxnsweight0$^    pyobject values0  00000$^$^     pywrapfst.pyx0000$^                                 int00 nstatefst.knostateid$^                                 int00 subsequentiallabel0$^                                 weightnone              $^    $^    disambiguateifst delta0.0000000000 nstatenostateid$^ $^    values0  pyobject pynone$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnstate$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnssubsequentiallabel$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsweight$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs disambiguate  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    if values0 $^      pyxvnstate  pyxpyintasint00tvalues0 if unlikelypyxvnstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnstate  pyxk00$^    $^    if values0 $^      pyxvsubsequentiallabel  pyxpyintasint00tvalues0 if unlikelypyxvsubsequentiallabel  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvsubsequentiallabel  pyxt00basictypesint000$^    $^    pyxvweight  values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvaliddisambiguate 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.disambiguate pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00disambiguatepyxself pyxvifst pyxvdelta pyxvnstate pyxvsubsequentiallabel pyxvweight$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst disambiguatefst ifst              $^                                 float deltafst.kdelta$^                                 int00 nstatefst.knostateid$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00disambiguatecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst float pyxvdelta pyxt00basictypesint00 pyxvnstate pyxt00basictypesint00 pyxvsubsequentiallabel pyobject pyxvweight $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstdisambiguate pyxt0$^  pyxrefnannysetupcontextdisambiguate 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.nstate  pyxvnstate$^  pyxt0.subsequentiallabel  pyxvsubsequentiallabel$^  pyxt0.weight  pyxvweight$^  pyxt0  pyobject pyxf0pywrapfstdisambiguatepyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.disambiguate pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst epsnormalizefst ifst bool epsnormoutputfalse              $^    $^    epsnormalizeifst epsnormoutputfalse$^ $^$^static pyobject pyxpw0pywrapfst00epsnormalizepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstepsnormalizestruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstepsnormalize pyxoptionalargs $^  bool pyxvepsnormoutput  bool0$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  enum fstepsnormalizetype pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextepsnormalize 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvepsnormoutput  pyxoptionalargsepsnormoutput$^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^    fst.epsnormalizederefifst.fst tfst.get fst.epsnormoutput if$^                                                   epsnormoutput else$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.epsnormalizederefifst.fst tfst.get fst.epsnormoutput if              $^                                                   epsnormoutput else$^                                                   fst.epsnorminput$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.epsnormalizederefifst.fst tfst.get fst.epsnormoutput if$^                                                   epsnormoutput else              $^                                                   fst.epsnorminput$^    return initmutablefsttfst.release$^ $^  if pyxvepsnormoutput  0 $^$^     pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.epsnormalizederefifst.fst tfst.get fst.epsnormoutput if              $^                                                   epsnormoutput else$^                                                   fst.epsnorminput$^ $^    pyxt0  fstepsnormoutput$^   else $^$^     pywrapfst.pyx0000$^    fst.epsnormalizederefifst.fst tfst.get fst.epsnormoutput if$^                                                   epsnormoutput else$^                                                   fst.epsnorminput              $^    return initmutablefsttfst.release$^  $^ $^    pyxt0  fstepsnorminput$^  $^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.epsnormalizederefifst.fst tfst.get fst.epsnormoutput if              $^                                                   epsnormoutput else$^                                                   fst.epsnorminput$^ $^  fstscriptepsnormalizepyxvifstfst pyxvtfst.get pyxt0$^$^   pywrapfst.pyx0000$^                                                   epsnormoutput else$^                                                   fst.epsnorminput$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst epsnormalizefst ifst bool epsnormoutputfalse              $^    $^    epsnormalizeifst epsnormoutputfalse$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.epsnormalize pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00epsnormalizepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00epsnormalize  n  epsnormalizeifst epsnormoutputfalsenn  constructively epsilonnormalizes an fst.nn  this operation creates an equivalent fst that is epsilonnormalized. ann  acceptor is epsilonnormalized if it it is epsilonremoved cf. rmepsilon.n  a transducer is input epsilonnormalized if in addition along any path alln  arcs with epsilon input labels follow all arcs with nonepsilon input labels.n  output epsilonnormalized is defined similarly. the input fst must ben  functional.nn  argsn    ifst the input fst.n    epsnormoutput should the fst be output epsilonnormalizednn  returnsn    an equivalent epsilonnormalized fst.nn  see also rmepsilon.n  $^static pyobject pyxpw0pywrapfst00epsnormalizepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  bool pyxvepsnormoutput$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextepsnormalize wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsepsnormoutput0$^    pyobject values0  00$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsepsnormoutput$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs epsnormalize  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvepsnormoutput  pyxpyobjectistruevalues0 if unlikelypyxvepsnormoutput  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvepsnormoutput  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidepsnormalize 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.epsnormalize pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00epsnormalizepyxself pyxvifst pyxvepsnormoutput$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00epsnormalizecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst bool pyxvepsnormoutput $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstepsnormalize pyxt0$^  pyxrefnannysetupcontextepsnormalize 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.epsnormoutput  pyxvepsnormoutput$^  pyxt0  pyobject pyxf0pywrapfstepsnormalizepyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.epsnormalize pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef bool equalfst ifst0 fst ifst0 float deltafst.kdelta              $^    $^    equalifst0 ifst0 delta0.0000000000$^ $^$^static pyobject pyxpw0pywrapfst00equalpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static bool pyxf0pywrapfstequalstruct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstequal pyxoptionalargs $^  float pyxvdelta  pyxk00$^  bool pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextequal 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^    $^  $^$^   pywrapfst.pyx0000$^    see also equivalent isomorphic randequivalent.$^    $^    return fst.equalderefifst0.fst derefifst0.fst delta              $^  $^  $^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  fstscriptequalpyxvifst0fst pyxvifst0fst pyxvdelta$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef bool equalfst ifst0 fst ifst0 float deltafst.kdelta              $^    $^    equalifst0 ifst0 delta0.0000000000$^ $^$^   function exit code $^  pyxl0error$^  pyxwriteunraisablepywrapfst.equal pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00equalpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00equal  n  equalifst0 ifst0 delta0.0000000000nn  are two fsts equalnn  this function tests whether two fsts have the same states with the samen  numbering and the same transitions with the same labels and weights in then  same order.nn  argsn    ifst0 the first input fst.n    ifst0 the second input fst.n    delta comparisonquantization delta.nn  returnsn    true if the fsts satisfy the above condition else false.nn  see also equivalent isomorphic randequivalent.n  $^static pyobject pyxpw0pywrapfst00equalpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  float pyxvdelta$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextequal wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0pyxnsifst0pyxnsdelta0$^    pyobject values0  000$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else $^          pyxraiseargtupleinvalidequal 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs equal  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidequal 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.equal pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00equalpyxself pyxvifst0 pyxvifst0 pyxvdelta$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00equalcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 float pyxvdelta $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  bool pyxt0$^  struct pyxoptargs0pywrapfstequal pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextequal 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0  pyxf0pywrapfstequalpyxvifst0 pyxvifst0 0 pyxt0 $^  pyxt0  pyxpyboolfromlongpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.equal pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef bool equivalentfst ifst0 fst ifst0 float deltafst.kdelta except               $^    $^    equivalentifst0 ifst0 delta0.0000000000$^ $^$^static pyobject pyxpw0pywrapfst00equivalentpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static bool pyxf0pywrapfstequivalentstruct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstequivalent pyxoptionalargs $^  float pyxvdelta  pyxk00$^  bool pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextequivalent 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^    $^  $^$^   pywrapfst.pyx0000$^    see also equal isomorphic randequivalent.$^    $^    return fst.equivalentderefifst0.fst derefifst0.fst delta              $^  $^  $^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  fstscriptequivalentpyxvifst0fst pyxvifst0fst pyxvdelta$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef bool equivalentfst ifst0 fst ifst0 float deltafst.kdelta except               $^    $^    equivalentifst0 ifst0 delta0.0000000000$^ $^$^   function exit code $^  pyxl0error$^  pyxaddtracebackpywrapfst.equivalent pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00equivalentpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00equivalent  n  equivalentifst0 ifst0 delta0.0000000000nn  are the two acceptors equivalentnn  this operation tests whether two epsilonfree deterministic weightedn  acceptors are equivalent that is if they accept the same strings with then  same weights.nn  argsn    ifst0 the first input fst.n    ifst0 the second input fst.n    delta comparisonquantization delta.nn  returnsn    true if the fsts satisfy the above condition else false.nn  see also equal isomorphic randequivalent.n  $^static pyobject pyxpw0pywrapfst00equivalentpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  float pyxvdelta$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextequivalent wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0pyxnsifst0pyxnsdelta0$^    pyobject values0  000$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else $^          pyxraiseargtupleinvalidequivalent 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs equivalent  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidequivalent 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.equivalent pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00equivalentpyxself pyxvifst0 pyxvifst0 pyxvdelta$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00equivalentcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 float pyxvdelta $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  bool pyxt0$^  struct pyxoptargs0pywrapfstequivalent pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextequivalent 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0  pyxf0pywrapfstequivalentpyxvifst0 pyxvifst0 0 pyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxpyboolfromlongpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.equivalent pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst intersectfst ifst0              $^                              fst ifst0$^                              composefilterbauto$^ $^$^static pyobject pyxpw0pywrapfst00intersectpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstintersectstruct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstintersect pyxoptionalargs $^  pyobject pyxvcomposefilter  pyobject pyxnbauto$^$^   pywrapfst.pyx0000$^                              fst ifst0$^                              composefilterbauto$^                              bool connecttrue              $^    $^    intersectifst0 ifst0 composefilterauto connecttrue$^ $^  bool pyxvconnect  bool0$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  stduniqueptrfstcomposeoptions  pyxvopts$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  enum fstcomposefilter pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextintersect 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvcomposefilter  pyxoptionalargscomposefilter$^      if pyxoptionalargspyxn  0 $^        pyxvconnect  pyxoptionalargsconnect$^      $^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst0.arctype              $^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect$^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifst0pyxvtabarctypepyxvifst0 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect$^          getcomposefiltertostringcomposefilter              $^    fst.intersectderefifst0.fst derefifst0.fst tfst.get derefopts$^    return initmutablefsttfst.release$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvcomposefilter null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfstgetcomposefilterpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst0.arctype$^    cdef uniqueptrfst.composeoptions opts$^    opts.resetnew fst.composeoptionsconnect              $^          getcomposefiltertostringcomposefilter$^    fst.intersectderefifst0.fst derefifst0.fst tfst.get derefopts$^ $^  pyxvopts.resetnew fstcomposeoptionspyxvconnect pyxt0$^$^   pywrapfst.pyx0000$^    opts.resetnew fst.composeoptionsconnect$^          getcomposefiltertostringcomposefilter$^    fst.intersectderefifst0.fst derefifst0.fst tfst.get derefopts              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptintersectpyxvifst0fst pyxvifst0fst pyxvtfst.get pyxvopts$^$^   pywrapfst.pyx0000$^          getcomposefiltertostringcomposefilter$^    fst.intersectderefifst0.fst derefifst0.fst tfst.get derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst intersectfst ifst0              $^                              fst ifst0$^                              composefilterbauto$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.intersect pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00intersectpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00intersect  n  intersectifst0 ifst0 composefilterauto connecttruenn  constructively intersects two fsts.nn  this operation computes the intersection hadamard product of two fsts.n  only strings that are in both automata are retained in the result. the twon  arguments must be acceptors. one of the arguments must be labelsorted orn  otherwise support appropriate matchers.nn  argsn    ifst0 the first input fst.n    ifst0 the second input fst.n    composefilter a string matching a known composition filter one ofn        altsequence auto match null sequence trivial.n    connect should output be trimmednn  returnsn    an intersected fst.n  $^static pyobject pyxpw0pywrapfst00intersectpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  pyobject pyxvcomposefilter  0$^  bool pyxvconnect$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextintersect wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0pyxnsifst0pyxnscomposefilterpyxnsconnect0$^    pyobject values0  0000$^    values0  pyobject pyxnbauto$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else $^          pyxraiseargtupleinvalidintersect 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnscomposefilter$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsconnect$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs intersect  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvcomposefilter  values0$^    if values0 $^      pyxvconnect  pyxpyobjectistruevalues0 if unlikelypyxvconnect  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                              fst ifst0$^                              composefilterbauto$^                              bool connecttrue              $^    $^    intersectifst0 ifst0 composefilterauto connecttrue$^ $^      pyxvconnect  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidintersect 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.intersect pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00intersectpyxself pyxvifst0 pyxvifst0 pyxvcomposefilter pyxvconnect$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst intersectfst ifst0              $^                              fst ifst0$^                              composefilterbauto$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00intersectcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 pyobject pyxvcomposefilter bool pyxvconnect $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstintersect pyxt0$^  pyxrefnannysetupcontextintersect 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.composefilter  pyxvcomposefilter$^  pyxt0.connect  pyxvconnect$^  pyxt0  pyobject pyxf0pywrapfstintersectpyxvifst0 pyxvifst0 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.intersect pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef bool isomorphicfst ifst0 fst ifst0 float deltafst.kdelta              $^    $^    isomorphicifst0 ifst0 delta0.0000000000$^ $^$^static pyobject pyxpw0pywrapfst00isomorphicpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static bool pyxf0pywrapfstisomorphicstruct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstisomorphic pyxoptionalargs $^  float pyxvdelta  pyxk00$^  bool pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextisomorphic 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^    $^  $^$^   pywrapfst.pyx0000$^    see also equal equivalent randequivalent.$^    $^    return fst.isomorphicderefifst0.fst derefifst0.fst delta              $^  $^  $^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  fstscriptisomorphicpyxvifst0fst pyxvifst0fst pyxvdelta$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef bool isomorphicfst ifst0 fst ifst0 float deltafst.kdelta              $^    $^    isomorphicifst0 ifst0 delta0.0000000000$^ $^$^   function exit code $^  pyxl0error$^  pyxwriteunraisablepywrapfst.isomorphic pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00isomorphicpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00isomorphic  n  isomorphicifst0 ifst0 delta0.0000000000nn  are the two acceptors isomorphicnn  this operation determines if two transducers with a certain requiredn  determinism have the same states irrespective of numbering and the samen  transitions with the same labels and weights irrespective of ordering. inn  other words fsts a b are isomorphic if and only if the states of a can ben  renumbered and the transitions leaving each state reordered so the two aren  equal according to the definition given in equal.nn  argsn    ifst0 the first input fst.n    ifst0 the second input fst.n    delta comparisonquantization delta.nn  returnsn    true if the two transducers satisfy the above condition else false.nn  see also equal equivalent randequivalent.n  $^static pyobject pyxpw0pywrapfst00isomorphicpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  float pyxvdelta$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextisomorphic wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0pyxnsifst0pyxnsdelta0$^    pyobject values0  000$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else $^          pyxraiseargtupleinvalidisomorphic 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs isomorphic  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidisomorphic 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.isomorphic pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00isomorphicpyxself pyxvifst0 pyxvifst0 pyxvdelta$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00isomorphiccythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 float pyxvdelta $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  bool pyxt0$^  struct pyxoptargs0pywrapfstisomorphic pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextisomorphic 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0  pyxf0pywrapfstisomorphicpyxvifst0 pyxvifst0 0 pyxt0 $^  pyxt0  pyxpyboolfromlongpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.isomorphic pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst prunefst ifst              $^                          float deltafst.kdelta$^                          int00 nstatefst.knostateid$^ $^$^static pyobject pyxpw0pywrapfst00prunepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstprunestruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstprune pyxoptionalargs $^  float pyxvdelta  pyxk00$^  pyxt00basictypesint00 pyxvnstate  pyxk00$^$^   pywrapfst.pyx0000$^                          float deltafst.kdelta$^                          int00 nstatefst.knostateid$^                          weightnone              $^    $^    pruneifst delta0.0000000000 nstatenostateid weightnone$^ $^  pyobject pyxvweight  pyobject pynone$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  fstscriptweightclass pyxvwc$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  fstscriptweightclass pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextprune 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvnstate  pyxoptionalargsnstate$^        if pyxoptionalargspyxn  0 $^          pyxvweight  pyxoptionalargsweight$^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype weight$^    fst.prunederefifst.fst tfst.get wc nstate delta$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype weight              $^    fst.prunederefifst.fst tfst.get wc nstate delta$^    return initmutablefsttfst.release$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s weighttype$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxf0pywrapfstgetweightclassorzerostruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabweighttypepyxvifst 0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvwc  pyxt0$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype weight$^    fst.prunederefifst.fst tfst.get wc nstate delta              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptprunepyxvifstfst pyxvtfst.get pyxvwc pyxvnstate pyxvdelta$^$^   pywrapfst.pyx0000$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype weight$^    fst.prunederefifst.fst tfst.get wc nstate delta$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst prunefst ifst              $^                          float deltafst.kdelta$^                          int00 nstatefst.knostateid$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.prune pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00prunepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00prune  n  pruneifst delta0.0000000000 nstatenostateid weightnonenn  constructively removes paths with weights below a certain threshold.nn  this operation deletes states and arcs in the input fst that do not belongn  to a successful path whose weight is no more w.r.t the natural semiringn  order than the threshold t otimestimes the weight of the shortest path inn  the input fst. weights must be commutative and have the path property.nn  argsn    ifst the input fst.n    delta comparisonquantization delta.n    nstate state number threshold.n    weight a weight or weight string indicating the desired weight thresholdn        below which paths are pruned if omitted no paths are pruned.nn  returnsn    a pruned fst.nn  see also the destructive variant.n  $^static pyobject pyxpw0pywrapfst00prunepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  float pyxvdelta$^  pyxt00basictypesint00 pyxvnstate$^  pyobject pyxvweight  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextprune wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsdeltapyxnsnstatepyxnsweight0$^    pyobject values0  0000$^$^     pywrapfst.pyx0000$^                          float deltafst.kdelta$^                          int00 nstatefst.knostateid$^                          weightnone              $^    $^    pruneifst delta0.0000000000 nstatenostateid weightnone$^ $^    values0  pyobject pynone$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnstate$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsweight$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs prune  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    if values0 $^      pyxvnstate  pyxpyintasint00tvalues0 if unlikelypyxvnstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnstate  pyxk00$^    $^    pyxvweight  values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidprune 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.prune pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00prunepyxself pyxvifst pyxvdelta pyxvnstate pyxvweight$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst prunefst ifst              $^                          float deltafst.kdelta$^                          int00 nstatefst.knostateid$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00prunecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst float pyxvdelta pyxt00basictypesint00 pyxvnstate pyobject pyxvweight $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstprune pyxt0$^  pyxrefnannysetupcontextprune 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.nstate  pyxvnstate$^  pyxt0.weight  pyxvweight$^  pyxt0  pyobject pyxf0pywrapfstprunepyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.prune pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst pushfst ifst              $^                         float deltafst.kdelta$^                         bool pushweightsfalse$^ $^$^static pyobject pyxpw0pywrapfst00pushpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstpushstruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstpush pyxoptionalargs $^  float pyxvdelta  pyxk00$^$^   pywrapfst.pyx0000$^  cpdef mutablefst pushfst ifst$^                         float deltafst.kdelta$^                         bool pushweightsfalse              $^                         bool pushlabelsfalse$^                         bool removecommonaffixfalse$^ $^  bool pyxvpushweights  bool0$^$^   pywrapfst.pyx0000$^                         float deltafst.kdelta$^                         bool pushweightsfalse$^                         bool pushlabelsfalse              $^                         bool removecommonaffixfalse$^                         bool removetotalweightfalse$^ $^  bool pyxvpushlabels  bool0$^$^   pywrapfst.pyx0000$^                         bool pushweightsfalse$^                         bool pushlabelsfalse$^                         bool removecommonaffixfalse              $^                         bool removetotalweightfalse$^                         bool tofinalfalse$^ $^  bool pyxvremovecommonaffix  bool0$^$^   pywrapfst.pyx0000$^                         bool pushlabelsfalse$^                         bool removecommonaffixfalse$^                         bool removetotalweightfalse              $^                         bool tofinalfalse$^    $^ $^  bool pyxvremovetotalweight  bool0$^$^   pywrapfst.pyx0000$^                         bool removecommonaffixfalse$^                         bool removetotalweightfalse$^                         bool tofinalfalse              $^    $^    pushifst delta0.0000000000 pushweightsfalse pushlabelsfalse$^ $^  bool pyxvtofinal  bool0$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  pyxt00basictypesuint00 pyxvflags$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextpush 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvpushweights  pyxoptionalargspushweights$^        if pyxoptionalargspyxn  0 $^          pyxvpushlabels  pyxoptionalargspushlabels$^          if pyxoptionalargspyxn  0 $^            pyxvremovecommonaffix  pyxoptionalargsremovecommonaffix$^            if pyxoptionalargspyxn  0 $^              pyxvremovetotalweight  pyxoptionalargsremovetotalweight$^              if pyxoptionalargspyxn  0 $^                pyxvtofinal  pyxoptionalargstofinal$^              $^            $^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^     this is copied almost verbatim from nlpfstbinfstpush.cc.$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^    cdef uint00 flags  fst.getpushflagspushweights pushlabels$^                                         removecommonaffix removetotalweight$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    cdef uint00 flags  fst.getpushflagspushweights pushlabels              $^                                         removecommonaffix removetotalweight$^    fst.pushderefifst.fst tfst.get flags fst.getreweighttypetofinal$^ $^  pyxvflags  fstscriptgetpushflagspyxvpushweights pyxvpushlabels pyxvremovecommonaffix pyxvremovetotalweight$^$^   pywrapfst.pyx0000$^    cdef uint00 flags  fst.getpushflagspushweights pushlabels$^                                         removecommonaffix removetotalweight$^    fst.pushderefifst.fst tfst.get flags fst.getreweighttypetofinal              $^             delta$^    return initmutablefsttfst.release$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^                                         removecommonaffix removetotalweight$^    fst.pushderefifst.fst tfst.get flags fst.getreweighttypetofinal$^             delta              $^    return initmutablefsttfst.release$^  $^ $^  fstscriptpushpyxvifstfst pyxvtfst.get pyxvflags fstscriptgetreweighttypepyxvtofinal pyxvdelta$^$^   pywrapfst.pyx0000$^    fst.pushderefifst.fst tfst.get flags fst.getreweighttypetofinal$^             delta$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst pushfst ifst              $^                         float deltafst.kdelta$^                         bool pushweightsfalse$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.push pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00pushpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00push  n  pushifst delta0.0000000000 pushweightsfalse pushlabelsfalsen       removecommonaffixfalse removetotalweightfalse tofinalfalsenn  constructively pushes weightslabels towards initial or final states.nn  this operation produces an equivalent transducer by pushing the weightsn  andor the labels towards the initial state or toward the final states.nn  when pushing weights towards the initial state the sum of the weight of then  outgoing transitions and final weight at any noninitial state is equal to 0n  in the resulting machine. when pushing weights towards the final states then  sum of the weight of the incoming transitions at any state is equal to 0.n  weights need to be left distributive when pushing towards the initial staten  and right distributive when pushing towards the final states.nn  pushing labels towards the initial state consists in minimizing at everyn  state the length of the longest common prefix of the output labels of then  outgoing paths. pushing labels towards the final states consists inn  minimizing at every state the length of the longest common suffix of then  output labels of the incoming paths.nn  argsn    ifst the input fst.n    delta comparisonquantization delta.n    pushweights should weights be pushedn    pushlabels should labels be pushedn    removecommonaffix if pushing labels should common prefixsuffix ben        removedn    removetotalweight if pushing weights should total weight be removedn    tofinal push towards final statesnn  returnsn    an equivalent pushed fst.nn  see also the destructive variant.n  $^static pyobject pyxpw0pywrapfst00pushpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  float pyxvdelta$^  bool pyxvpushweights$^  bool pyxvpushlabels$^  bool pyxvremovecommonaffix$^  bool pyxvremovetotalweight$^  bool pyxvtofinal$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextpush wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsdeltapyxnspushweightspyxnspushlabelspyxnsremovecommonaffixpyxnsremovetotalweightpyxnstofinal0$^    pyobject values0  0000000$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnspushweights$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnspushlabels$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsremovecommonaffix$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsremovetotalweight$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnstofinal$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs push  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    if values0 $^      pyxvpushweights  pyxpyobjectistruevalues0 if unlikelypyxvpushweights  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^  cpdef mutablefst pushfst ifst$^                         float deltafst.kdelta$^                         bool pushweightsfalse              $^                         bool pushlabelsfalse$^                         bool removecommonaffixfalse$^ $^      pyxvpushweights  bool0$^    $^    if values0 $^      pyxvpushlabels  pyxpyobjectistruevalues0 if unlikelypyxvpushlabels  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                         float deltafst.kdelta$^                         bool pushweightsfalse$^                         bool pushlabelsfalse              $^                         bool removecommonaffixfalse$^                         bool removetotalweightfalse$^ $^      pyxvpushlabels  bool0$^    $^    if values0 $^      pyxvremovecommonaffix  pyxpyobjectistruevalues0 if unlikelypyxvremovecommonaffix  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                         bool pushweightsfalse$^                         bool pushlabelsfalse$^                         bool removecommonaffixfalse              $^                         bool removetotalweightfalse$^                         bool tofinalfalse$^ $^      pyxvremovecommonaffix  bool0$^    $^    if values0 $^      pyxvremovetotalweight  pyxpyobjectistruevalues0 if unlikelypyxvremovetotalweight  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                         bool pushlabelsfalse$^                         bool removecommonaffixfalse$^                         bool removetotalweightfalse              $^                         bool tofinalfalse$^    $^ $^      pyxvremovetotalweight  bool0$^    $^    if values0 $^      pyxvtofinal  pyxpyobjectistruevalues0 if unlikelypyxvtofinal  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                         bool removecommonaffixfalse$^                         bool removetotalweightfalse$^                         bool tofinalfalse              $^    $^    pushifst delta0.0000000000 pushweightsfalse pushlabelsfalse$^ $^      pyxvtofinal  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidpush 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.push pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00pushpyxself pyxvifst pyxvdelta pyxvpushweights pyxvpushlabels pyxvremovecommonaffix pyxvremovetotalweight pyxvtofinal$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst pushfst ifst              $^                         float deltafst.kdelta$^                         bool pushweightsfalse$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00pushcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst float pyxvdelta bool pyxvpushweights bool pyxvpushlabels bool pyxvremovecommonaffix bool pyxvremovetotalweight bool pyxvtofinal $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstpush pyxt0$^  pyxrefnannysetupcontextpush 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.pushweights  pyxvpushweights$^  pyxt0.pushlabels  pyxvpushlabels$^  pyxt0.removecommonaffix  pyxvremovecommonaffix$^  pyxt0.removetotalweight  pyxvremovetotalweight$^  pyxt0.tofinal  pyxvtofinal$^  pyxt0  pyobject pyxf0pywrapfstpushpyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.push pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef bool randequivalentfst ifst0              $^                            fst ifst0$^                            int00 npath0$^ $^$^static pyobject pyxpw0pywrapfst00randequivalentpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static bool pyxf0pywrapfstrandequivalentstruct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstrandequivalent pyxoptionalargs $^  pyxt00basictypesint00 pyxvnpath  pyxt00basictypesint000$^  float pyxvdelta  pyxk00$^  timet pyxvseed  timet0$^  pyobject pyxvselect  pyobject pyxnbuniform$^  pyxt00basictypesint00 pyxvmaxlength  pyxk00$^  enum fstscriptrandarcselection pyxvras$^  stduniqueptrfstrandgenoptionsenum fstscriptrandarcselection   pyxvopts$^  bool pyxr$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  enum fstscriptrandarcselection pyxt0$^  int pyxt0$^  pyxrefnannysetupcontextrandequivalent 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvnpath  pyxoptionalargsnpath$^      if pyxoptionalargspyxn  0 $^        pyxvdelta  pyxoptionalargsdelta$^        if pyxoptionalargspyxn  0 $^          pyxvseed  pyxoptionalargsseed$^          if pyxoptionalargspyxn  0 $^            pyxvselect  pyxoptionalargsselect$^            if pyxoptionalargspyxn  0 $^              pyxvmaxlength  pyxoptionalargsmaxlength$^            $^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    see also equal equivalent isomorphic randgen.$^    $^    cdef fst.randarcselection ras  getrandarcselectiontostringselect              $^    cdef uniqueptrfst.randgenoptionsfst.randarcselection opts$^     the three trailing options will be ignored by randequivalent.$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvselect null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfstgetrandarcselectionpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvras  pyxt0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.randgenoptionsfst.randarcselection opts$^     the three trailing options will be ignored by randequivalent.$^    opts.resetnew fst.randgenoptionsfst.randarcselectionras maxlength              $^                                                            0 false false$^    if seed  0$^ $^  pyxvopts.resetnew fstrandgenoptionsenum fstscriptrandarcselection pyxvras pyxvmaxlength 0 0 0$^$^   pywrapfst.pyx0000$^    opts.resetnew fst.randgenoptionsfst.randarcselectionras maxlength$^                                                            0 false false$^    if seed  0              $^      seed  timenull  getpid$^    return fst.randequivalentderefifst0.fst derefifst0.fst npath delta$^ $^  pyxt0  pyxvseed  0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^                                                            0 false false$^    if seed  0$^      seed  timenull  getpid              $^    return fst.randequivalentderefifst0.fst derefifst0.fst npath delta$^                             seed derefopts$^ $^    pyxvseed  timenull  getpid$^$^     pywrapfst.pyx0000$^    opts.resetnew fst.randgenoptionsfst.randarcselectionras maxlength$^                                                            0 false false$^    if seed  0              $^      seed  timenull  getpid$^    return fst.randequivalentderefifst0.fst derefifst0.fst npath delta$^ $^  $^$^   pywrapfst.pyx0000$^    if seed  0$^      seed  timenull  getpid$^    return fst.randequivalentderefifst0.fst derefifst0.fst npath delta              $^                             seed derefopts$^  $^ $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvifst0  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^      seed  timenull  getpid$^    return fst.randequivalentderefifst0.fst derefifst0.fst npath delta$^                             seed derefopts              $^  $^  $^ $^  pyxr  fstscriptrandequivalentpyxvifst0fst pyxvifst0fst pyxvnpath pyxvdelta pyxvseed pyxvopts$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef bool randequivalentfst ifst0              $^                            fst ifst0$^                            int00 npath0$^ $^$^   function exit code $^  pyxl0error$^  pyxaddtracebackpywrapfst.randequivalent pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00randequivalentpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00randequivalent  n  randequivalentifst0 ifst0 npath0 delta0.0000000000 seed0n                 selectuniform maxlength0000000000nn  are two acceptors stochastically equivalentnn  this operation tests whether two fsts are equivalent by randomly generatingn  paths alternatively in each of the two fsts. for each randomly generated pathn  the algorithm computes for each of the two fsts the sum of the weights of alln  the successful paths sharing the same input and output labels as the randomlyn  generated path and checks that these two values are within delta.nn  argsn    ifst0 the first input fst.n    ifst0 the second input fst.n    npath the number of random paths to generate.n    delta comparisonquantization delta.n    seed an optional seed value for random path generation if zero then        current time and process id is used.n    select a string matching a known random arc selection type one ofn        uniform logprob fastlogprob.n    maxlength the maximum length of each random path.nn  returnsn    true if the two transducers satisfy the above condition else false.nn  see also equal equivalent isomorphic randgen.n  $^static pyobject pyxpw0pywrapfst00randequivalentpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  struct pyxobj0pywrapfstfst pyxvifst0  0$^  pyxt00basictypesint00 pyxvnpath$^  float pyxvdelta$^  timet pyxvseed$^  pyobject pyxvselect  0$^  pyxt00basictypesint00 pyxvmaxlength$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrandequivalent wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifst0pyxnsifst0pyxnsnpathpyxnsdeltapyxnsseedpyxnsselectpyxnsmaxlength0$^    pyobject values0  0000000$^    values0  pyobject pyxnbuniform$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst0  0 kwargs$^        else $^          pyxraiseargtupleinvalidrandequivalent 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnpath$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsseed$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsselect$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsmaxlength$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs randequivalent  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    pyxvifst0  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvnpath  pyxpyintasint00tvalues0 if unlikelypyxvnpath  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnpath  pyxt00basictypesint000$^    $^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    if values0 $^      pyxvseed  pyxpyintastimetvalues0 if unlikelypyxvseed  timet0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvseed  timet0$^    $^    pyxvselect  values0$^    if values0 $^      pyxvmaxlength  pyxpyintasint00tvalues0 if unlikelypyxvmaxlength  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvmaxlength  pyxk00$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidrandequivalent 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.randequivalent pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvifst0 pyxptype0pywrapfstfst 0 ifst0 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00randequivalentpyxself pyxvifst0 pyxvifst0 pyxvnpath pyxvdelta pyxvseed pyxvselect pyxvmaxlength$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00randequivalentcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst0 struct pyxobj0pywrapfstfst pyxvifst0 pyxt00basictypesint00 pyxvnpath float pyxvdelta timet pyxvseed pyobject pyxvselect pyxt00basictypesint00 pyxvmaxlength $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  bool pyxt0$^  struct pyxoptargs0pywrapfstrandequivalent pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrandequivalent 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.npath  pyxvnpath$^  pyxt0.delta  pyxvdelta$^  pyxt0.seed  pyxvseed$^  pyxt0.select  pyxvselect$^  pyxt0.maxlength  pyxvmaxlength$^  pyxt0  pyxf0pywrapfstrandequivalentpyxvifst0 pyxvifst0 0 pyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxpyboolfromlongpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.randequivalent pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst randgenfst ifst              $^                            int00 npath0$^                            timet seed0$^ $^$^static pyobject pyxpw0pywrapfst00randgenpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstrandgenstruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstrandgen pyxoptionalargs $^  pyxt00basictypesint00 pyxvnpath  pyxt00basictypesint000$^  timet pyxvseed  timet0$^  pyobject pyxvselect  pyobject pyxnbuniform$^  pyxt00basictypesint00 pyxvmaxlength  pyxk00$^$^   pywrapfst.pyx0000$^                            selectbuniform$^                            int00 maxlengthint00max$^                            bool weightedfalse              $^                            bool removetotalweightfalse$^    $^ $^  bool pyxvweighted  bool0$^$^   pywrapfst.pyx0000$^                            int00 maxlengthint00max$^                            bool weightedfalse$^                            bool removetotalweightfalse              $^    $^    randgenifst npath0 seed0 selectuniform maxlength0000000000$^ $^  bool pyxvremovetotalweight  bool0$^  enum fstscriptrandarcselection pyxvras$^  stduniqueptrfstrandgenoptionsenum fstscriptrandarcselection   pyxvopts$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  enum fstscriptrandarcselection pyxt0$^  int pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrandgen 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvnpath  pyxoptionalargsnpath$^      if pyxoptionalargspyxn  0 $^        pyxvseed  pyxoptionalargsseed$^        if pyxoptionalargspyxn  0 $^          pyxvselect  pyxoptionalargsselect$^          if pyxoptionalargspyxn  0 $^            pyxvmaxlength  pyxoptionalargsmaxlength$^            if pyxoptionalargspyxn  0 $^              pyxvweighted  pyxoptionalargsweighted$^              if pyxoptionalargspyxn  0 $^                pyxvremovetotalweight  pyxoptionalargsremovetotalweight$^              $^            $^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    see also randequivalent.$^    $^    cdef fst.randarcselection ras  getrandarcselectiontostringselect              $^    cdef uniqueptrfst.randgenoptionsfst.randarcselection opts$^    opts.resetnew fst.randgenoptionsfst.randarcselectionras maxlength$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvselect null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfstgetrandarcselectionpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvras  pyxt0$^$^   pywrapfst.pyx0000$^    cdef fst.randarcselection ras  getrandarcselectiontostringselect$^    cdef uniqueptrfst.randgenoptionsfst.randarcselection opts$^    opts.resetnew fst.randgenoptionsfst.randarcselectionras maxlength              $^                                                            npath weighted$^                                                            removetotalweight$^ $^  pyxvopts.resetnew fstrandgenoptionsenum fstscriptrandarcselection pyxvras pyxvmaxlength pyxvnpath pyxvweighted pyxvremovetotalweight$^$^   pywrapfst.pyx0000$^                                                            removetotalweight$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^    if seed  0$^      seed  timenull  getpid$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    if seed  0              $^      seed  timenull  getpid$^    fst.randgenderefifst.fst tfst.get seed derefopts$^ $^  pyxt0  pyxvseed  0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    if seed  0$^      seed  timenull  getpid              $^    fst.randgenderefifst.fst tfst.get seed derefopts$^    return initmutablefsttfst.release$^ $^    pyxvseed  timenull  getpid$^$^     pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    if seed  0              $^      seed  timenull  getpid$^    fst.randgenderefifst.fst tfst.get seed derefopts$^ $^  $^$^   pywrapfst.pyx0000$^    if seed  0$^      seed  timenull  getpid$^    fst.randgenderefifst.fst tfst.get seed derefopts              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptrandgenpyxvifstfst pyxvtfst.get pyxvseed pyxvopts$^$^   pywrapfst.pyx0000$^      seed  timenull  getpid$^    fst.randgenderefifst.fst tfst.get seed derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst randgenfst ifst              $^                            int00 npath0$^                            timet seed0$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.randgen pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00randgenpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00randgen  n  randgenifst npath0 seed0 selectuniform maxlength0000000000n          weightfalse removetotalweightfalsenn  randomly generate successful paths in an fst.nn  this operation randomly generates a set of successful paths in the input fst.n  this relies on a mechanism for selecting arcs specified using the selectn  argument. the default selector uniform randomly selects a transitionn  using a uniform distribution. the logprob selector randomly selects an  transition w.r.t. the weights treated as negative log probabilities aftern  normalizing for the total weight leaving the state. in all cases finality isn  treated as a transition to a superfinal state.nn  argsn    ifst the input fst.n    npath the number of random paths to generate.n    seed an optional seed value for random path generation if zero then        current time and process id is used.n    select a string matching a known random arc selection type one ofn        uniform logprob fastlogprob.n    maxlength the maximum length of each random path.n    weighted should the output be weighted by path countn    removetotalweight should the total weight be removed ignored whenn        weighted is falsenn  returnsn    an fst containing one or more random paths.nn  see also randequivalent.n  $^static pyobject pyxpw0pywrapfst00randgenpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  pyxt00basictypesint00 pyxvnpath$^  timet pyxvseed$^  pyobject pyxvselect  0$^  pyxt00basictypesint00 pyxvmaxlength$^  bool pyxvweighted$^  bool pyxvremovetotalweight$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrandgen wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsnpathpyxnsseedpyxnsselectpyxnsmaxlengthpyxnsweightedpyxnsremovetotalweight0$^    pyobject values0  0000000$^    values0  pyobject pyxnbuniform$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnpath$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsseed$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsselect$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsmaxlength$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsweighted$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsremovetotalweight$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs randgen  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvnpath  pyxpyintasint00tvalues0 if unlikelypyxvnpath  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnpath  pyxt00basictypesint000$^    $^    if values0 $^      pyxvseed  pyxpyintastimetvalues0 if unlikelypyxvseed  timet0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvseed  timet0$^    $^    pyxvselect  values0$^    if values0 $^      pyxvmaxlength  pyxpyintasint00tvalues0 if unlikelypyxvmaxlength  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvmaxlength  pyxk00$^    $^    if values0 $^      pyxvweighted  pyxpyobjectistruevalues0 if unlikelypyxvweighted  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                            selectbuniform$^                            int00 maxlengthint00max$^                            bool weightedfalse              $^                            bool removetotalweightfalse$^    $^ $^      pyxvweighted  bool0$^    $^    if values0 $^      pyxvremovetotalweight  pyxpyobjectistruevalues0 if unlikelypyxvremovetotalweight  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                            int00 maxlengthint00max$^                            bool weightedfalse$^                            bool removetotalweightfalse              $^    $^    randgenifst npath0 seed0 selectuniform maxlength0000000000$^ $^      pyxvremovetotalweight  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidrandgen 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.randgen pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00randgenpyxself pyxvifst pyxvnpath pyxvseed pyxvselect pyxvmaxlength pyxvweighted pyxvremovetotalweight$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst randgenfst ifst              $^                            int00 npath0$^                            timet seed0$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00randgencythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst pyxt00basictypesint00 pyxvnpath timet pyxvseed pyobject pyxvselect pyxt00basictypesint00 pyxvmaxlength bool pyxvweighted bool pyxvremovetotalweight $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstrandgen pyxt0$^  pyxrefnannysetupcontextrandgen 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.npath  pyxvnpath$^  pyxt0.seed  pyxvseed$^  pyxt0.select  pyxvselect$^  pyxt0.maxlength  pyxvmaxlength$^  pyxt0.removetotalweight  pyxvweighted$^  pyxt0.weighted  pyxvremovetotalweight$^  pyxt0  pyobject pyxf0pywrapfstrandgenpyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.randgen pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst replacepairs              $^                            callarclabelingbinput$^                            returnarclabelingbneither$^ $^$^static pyobject pyxpw0pywrapfst00replacepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstreplacepyobject pyxvpairs cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstreplace pyxoptionalargs $^  pyobject pyxvcallarclabeling  pyobject pyxnbinput$^  pyobject pyxvreturnarclabeling  pyobject pyxnbneither$^$^   pywrapfst.pyx0000$^                            callarclabelingbinput$^                            returnarclabelingbneither$^                            bool epsilononreplacefalse              $^                            int00 returnlabel0$^    $^ $^  bool pyxvepsilononreplace  bool0$^  pyxt00basictypesint00 pyxvreturnlabel  pyxt00basictypesint000$^  stdvectorpyxt0fstlabelfstclasspair  pyxvpairs$^  pyxt00basictypesint00 pyxvrootlabel$^  pyxt00basictypesint00 pyxvlabel$^  struct pyxobj0pywrapfstfst pyxvifst  0$^  pyobject pyxvit  null$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  enum fstreplacelabeltype pyxvcal$^  enum fstreplacelabeltype pyxvral$^  stduniqueptrfstscriptreplaceoptions  pyxvopts$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0pyobject $^  pyxt00basictypesint00 pyxt0$^  pyxt0fstlabelfstclasspair pyxt0$^  pyssizet pyxt0$^  pyobject pyxt0pyobject $^  pyobject pyxt00  null$^  stdstring pyxt00$^  enum fstreplacelabeltype pyxt00$^  pyxrefnannysetupcontextreplace 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvcallarclabeling  pyxoptionalargscallarclabeling$^      if pyxoptionalargspyxn  0 $^        pyxvreturnarclabeling  pyxoptionalargsreturnarclabeling$^        if pyxoptionalargspyxn  0 $^          pyxvepsilononreplace  pyxoptionalargsepsilononreplace$^          if pyxoptionalargspyxn  0 $^            pyxvreturnlabel  pyxoptionalargsreturnlabel$^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    cdef int00 label$^    cdef fst ifst$^    it  iterpairs              $^    rootlabel ifst  nextit$^    pairs.pushbackfst.labelfstclasspairrootlabel ifst.fst.get$^ $^  pyxt0  pyobjectgetiterpyxvpairs if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxvit  pyxt0$^  pyxt0  0$^$^   pywrapfst.pyx0000$^    cdef fst ifst$^    it  iterpairs$^    rootlabel ifst  nextit              $^    pairs.pushbackfst.labelfstclasspairrootlabel ifst.fst.get$^    cdef uniqueptrfst.vectorfstclass tfst$^ $^  pyxt0  pyxpyiternextpyxvit if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  if likelypytuplecheckexactpyxt0  pylistcheckexactpyxt0 $^    pyobject sequence  pyxt0$^    if cythoncompilinginpypy$^    pyssizet size  pysizesequence$^    else$^    pyssizet size  pysequencesizesequence$^    endif$^    if unlikelysize  0 $^      if size  0 pyxraisetoomanyvalueserror0$^      else if size  0 pyxraiseneedmorevalueserrorsize$^      pyxerr0 0000 pyxl0error$^    $^    if cythonassumesafemacros  cythonavoidborrowedrefs$^    if likelypytuplecheckexactsequence $^      pyxt0  pytuplegetitemsequence 0 $^      pyxt0  pytuplegetitemsequence 0 $^     else $^      pyxt0  pylistgetitemsequence 0 $^      pyxt0  pylistgetitemsequence 0 $^    $^    pyxincrefpyxt0$^    pyxincrefpyxt0$^    else$^    pyxt0  pysequenceitemsequence 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pysequenceitemsequence 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    endif$^    pyxdecrefpyxt0 pyxt0  0$^   else $^    pyssizet index  0$^    pyxt0  pyobjectgetiterpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxt0  pytypepyxt0tpiternext$^    index  0 pyxt0  pyxt0pyxt0 if unlikelypyxt0 goto pyxl0unpackingfailed$^    pyxgotrefpyxt0$^    index  0 pyxt0  pyxt0pyxt0 if unlikelypyxt0 goto pyxl0unpackingfailed$^    pyxgotrefpyxt0$^    if pyxiternextunpackendcheckpyxt0pyxt0 0  0 pyxerr0 0000 pyxl0error$^    pyxt0  null$^    pyxdecrefpyxt0 pyxt0  0$^    goto pyxl0unpackingdone$^    pyxl0unpackingfailed$^    pyxdecrefpyxt0 pyxt0  0$^    pyxt0  null$^    if pyxiterfinish  0 pyxraiseneedmorevalueserrorindex$^    pyxerr0 0000 pyxl0error$^    pyxl0unpackingdone$^  $^  pyxt0  pyxpyintasint00tpyxt0 if unlikelypyxt0  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^  pyxdecrefpyxt0 pyxt0  0$^  if likelypyxt0  pynone  likelypyxtypetestpyxt0 pyxptype0pywrapfstfst pyxerr0 0000 pyxl0error$^  pyxvrootlabel  pyxt0$^  pyxvifst  struct pyxobj0pywrapfstfst pyxt0$^  pyxt0  0$^$^   pywrapfst.pyx0000$^    it  iterpairs$^    rootlabel ifst  nextit$^    pairs.pushbackfst.labelfstclasspairrootlabel ifst.fst.get              $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  try $^    pyxt0  pyxt0fstlabelfstclasspairpyxvrootlabel pyxvifstfst.get$^   catch... $^    pyxcppexn0pyerr$^    pyxerr0 0000 pyxl0error$^  $^  try $^    pyxvpairs.pushbackpyxt0$^   catch... $^    pyxcppexn0pyerr$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^    pairs.pushbackfst.labelfstclasspairrootlabel ifst.fst.get$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^    for label ifst in it$^      pairs.pushbackfst.labelfstclasspairlabel ifst.fst.get$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    for label ifst in it              $^      pairs.pushbackfst.labelfstclasspairlabel ifst.fst.get$^    cdef fst.replacelabeltype cal  getreplacelabeltype$^ $^  if likelypylistcheckexactpyxvit  pytuplecheckexactpyxvit $^    pyxt0  pyxvit pyxincrefpyxt0 pyxt0  0$^    pyxt0  null$^   else $^    pyxt0  0 pyxt0  pyobjectgetiterpyxvit if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pytypepyxt0tpiternext if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  $^  for  $^    if likelypyxt0 $^      if likelypylistcheckexactpyxt0 $^        if pyxt0  pylistgetsizepyxt0 break$^        if cythonassumesafemacros  cythonavoidborrowedrefs$^        pyxt0  pylistgetitempyxt0 pyxt0 pyxincrefpyxt0 pyxt0 if unlikely0  0 pyxerr0 0000 pyxl0error$^        else$^        pyxt0  pysequenceitempyxt0 pyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        endif$^       else $^        if pyxt0  pytuplegetsizepyxt0 break$^        if cythonassumesafemacros  cythonavoidborrowedrefs$^        pyxt0  pytuplegetitempyxt0 pyxt0 pyxincrefpyxt0 pyxt0 if unlikely0  0 pyxerr0 0000 pyxl0error$^        else$^        pyxt0  pysequenceitempyxt0 pyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        endif$^      $^     else $^      pyxt0  pyxt0pyxt0$^      if unlikelypyxt0 $^        pyobject exctype  pyerroccurred$^        if exctype $^          if likelypyxpyerrgivenexceptionmatchesexctype pyexcstopiteration pyerrclear$^          else pyxerr0 0000 pyxl0error$^        $^        break$^      $^      pyxgotrefpyxt0$^    $^    if likelypytuplecheckexactpyxt0  pylistcheckexactpyxt0 $^      pyobject sequence  pyxt0$^      if cythoncompilinginpypy$^      pyssizet size  pysizesequence$^      else$^      pyssizet size  pysequencesizesequence$^      endif$^      if unlikelysize  0 $^        if size  0 pyxraisetoomanyvalueserror0$^        else if size  0 pyxraiseneedmorevalueserrorsize$^        pyxerr0 0000 pyxl0error$^      $^      if cythonassumesafemacros  cythonavoidborrowedrefs$^      if likelypytuplecheckexactsequence $^        pyxt0  pytuplegetitemsequence 0 $^        pyxt0  pytuplegetitemsequence 0 $^       else $^        pyxt0  pylistgetitemsequence 0 $^        pyxt0  pylistgetitemsequence 0 $^      $^      pyxincrefpyxt0$^      pyxincrefpyxt0$^      else$^      pyxt0  pysequenceitemsequence 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxt0  pysequenceitemsequence 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      endif$^      pyxdecrefpyxt0 pyxt0  0$^     else $^      pyssizet index  0$^      pyxt00  pyobjectgetiterpyxt0 if unlikelypyxt00 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt00$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pytypepyxt00tpiternext$^      index  0 pyxt0  pyxt0pyxt00 if unlikelypyxt0 goto pyxl0unpackingfailed$^      pyxgotrefpyxt0$^      index  0 pyxt0  pyxt0pyxt00 if unlikelypyxt0 goto pyxl0unpackingfailed$^      pyxgotrefpyxt0$^      if pyxiternextunpackendcheckpyxt0pyxt00 0  0 pyxerr0 0000 pyxl0error$^      pyxt0  null$^      pyxdecrefpyxt00 pyxt00  0$^      goto pyxl0unpackingdone$^      pyxl0unpackingfailed$^      pyxdecrefpyxt00 pyxt00  0$^      pyxt0  null$^      if pyxiterfinish  0 pyxraiseneedmorevalueserrorindex$^      pyxerr0 0000 pyxl0error$^      pyxl0unpackingdone$^    $^    pyxt0  pyxpyintasint00tpyxt0 if unlikelypyxt0  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    if likelypyxt0  pynone  likelypyxtypetestpyxt0 pyxptype0pywrapfstfst pyxerr0 0000 pyxl0error$^    pyxvlabel  pyxt0$^    pyxdecrefsetpyxvifst struct pyxobj0pywrapfstfst pyxt0$^    pyxt0  0$^$^     pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    for label ifst in it$^      pairs.pushbackfst.labelfstclasspairlabel ifst.fst.get              $^    cdef fst.replacelabeltype cal  getreplacelabeltype$^        tostringcallarclabeling epsilononreplace$^ $^    if unlikelypyobject pyxvifst  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^      pyxerr0 0000 pyxl0error$^    $^    try $^      pyxt0  pyxt0fstlabelfstclasspairpyxvlabel pyxvifstfst.get$^     catch... $^      pyxcppexn0pyerr$^      pyxerr0 0000 pyxl0error$^    $^    try $^      pyxvpairs.pushbackpyxt0$^     catch... $^      pyxcppexn0pyerr$^      pyxerr0 0000 pyxl0error$^    $^$^     pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    for label ifst in it              $^      pairs.pushbackfst.labelfstclasspairlabel ifst.fst.get$^    cdef fst.replacelabeltype cal  getreplacelabeltype$^ $^  $^  pyxdecrefpyxt0 pyxt0  0$^$^   pywrapfst.pyx0000$^      pairs.pushbackfst.labelfstclasspairlabel ifst.fst.get$^    cdef fst.replacelabeltype cal  getreplacelabeltype$^        tostringcallarclabeling epsilononreplace              $^    cdef fst.replacelabeltype ral  getreplacelabeltype$^        tostringreturnarclabeling epsilononreplace$^ $^  pyxt00  pyxf0pywrapfsttostringpyxvcallarclabeling null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    for label ifst in it$^      pairs.pushbackfst.labelfstclasspairlabel ifst.fst.get$^    cdef fst.replacelabeltype cal  getreplacelabeltype              $^        tostringcallarclabeling epsilononreplace$^    cdef fst.replacelabeltype ral  getreplacelabeltype$^ $^  pyxt00  pyxf0pywrapfstgetreplacelabeltypepyxt00 pyxvepsilononreplace if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvcal  pyxt00$^$^   pywrapfst.pyx0000$^        tostringcallarclabeling epsilononreplace$^    cdef fst.replacelabeltype ral  getreplacelabeltype$^        tostringreturnarclabeling epsilononreplace              $^    cdef uniqueptrfst.replaceoptions opts$^    opts.resetnew fst.replaceoptionsrootlabel cal ral returnlabel$^ $^  pyxt00  pyxf0pywrapfsttostringpyxvreturnarclabeling null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    cdef fst.replacelabeltype cal  getreplacelabeltype$^        tostringcallarclabeling epsilononreplace$^    cdef fst.replacelabeltype ral  getreplacelabeltype              $^        tostringreturnarclabeling epsilononreplace$^    cdef uniqueptrfst.replaceoptions opts$^ $^  pyxt00  pyxf0pywrapfstgetreplacelabeltypepyxt00 pyxvepsilononreplace if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvral  pyxt00$^$^   pywrapfst.pyx0000$^        tostringreturnarclabeling epsilononreplace$^    cdef uniqueptrfst.replaceoptions opts$^    opts.resetnew fst.replaceoptionsrootlabel cal ral returnlabel              $^    fst.replacepairs tfst.get derefopts$^    return initmutablefsttfst.release$^ $^  pyxvopts.resetnew fstscriptreplaceoptionspyxvrootlabel pyxvcal pyxvral pyxvreturnlabel$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.replaceoptions opts$^    opts.resetnew fst.replaceoptionsrootlabel cal ral returnlabel$^    fst.replacepairs tfst.get derefopts              $^    return initmutablefsttfst.release$^  $^ $^  fstscriptreplacepyxvpairs pyxvtfst.get pyxvopts$^$^   pywrapfst.pyx0000$^    opts.resetnew fst.replaceoptionsrootlabel cal ral returnlabel$^    fst.replacepairs tfst.get derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst replacepairs              $^                            callarclabelingbinput$^                            returnarclabelingbneither$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt00$^  pyxaddtracebackpywrapfst.replace pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxdecrefpyobject pyxvifst$^  pyxxdecrefpyxvit$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00replacepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00replace  n  replacepairs callarclabelinginput returnarclabelingneithern          epsilononreplacefalse returnlabel0nn  recursively replaces arcs in the fst with other fsts.nn  this operation performs the dynamic replacement of arcs in one fst withn  another fst allowing the definition of fsts analogous to rtns. it takes asn  input a set of pairs of a set of pairs formed by a nonterminal label andn  its corresponding fst and a label identifying the root fst in that set.n  the resulting fst is obtained by taking the root fst and recursively replacingn  each arc having a nonterminal as output label by its corresponding fst. moren  precisely an arc from state s to state d with nonterminal output label n inn  this fst is replaced by redirecting this call arc to the initial state of an  copy f of the fst for n and adding return arcs from each final state of fn  to d. optional arguments control how the call and return arcs are labeled byn  default the only nonepsilon label is placed on the call arc.nn  argsnn    pairs an iterable of nonterminal label fst pairs where the former is ann        unsigned integer and the latter is an fst instance.n    callarclabeling a string indicating which call arc labels should ben        nonepsilon. one of input default output both neither.n        this value is set to neither if epsilononreplace is true.n    returnarclabeling a string indicating which return arc labels should ben        nonepsilon. one of input output both neither default.n        this value is set to neither if epsilononreplace is true.n    epsilononreplace should call and return arcs be epsilon arcs if truen        this effectively overrides callarclabeling and returnarclabelingn        setting both to neither.n    returnlabel the integer label for return arcs.nn  returnsn    an fst resulting from expanding the input rtn.n  $^static pyobject pyxpw0pywrapfst00replacepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  pyobject pyxvpairs  0$^  pyobject pyxvcallarclabeling  0$^  pyobject pyxvreturnarclabeling  0$^  bool pyxvepsilononreplace$^  pyxt00basictypesint00 pyxvreturnlabel$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreplace wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnspairspyxnscallarclabelingpyxnsreturnarclabelingpyxnsepsilononreplacepyxnsreturnlabel0$^    pyobject values0  00000$^    values0  pyobject pyxnbinput$^    values0  pyobject pyxnbneither$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnspairs  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnscallarclabeling$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsreturnarclabeling$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsepsilononreplace$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsreturnlabel$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs replace  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvpairs  values0$^    pyxvcallarclabeling  values0$^    pyxvreturnarclabeling  values0$^    if values0 $^      pyxvepsilononreplace  pyxpyobjectistruevalues0 if unlikelypyxvepsilononreplace  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                            callarclabelingbinput$^                            returnarclabelingbneither$^                            bool epsilononreplacefalse              $^                            int00 returnlabel0$^    $^ $^      pyxvepsilononreplace  bool0$^    $^    if values0 $^      pyxvreturnlabel  pyxpyintasint00tvalues0 if unlikelypyxvreturnlabel  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvreturnlabel  pyxt00basictypesint000$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidreplace 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.replace pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst00replacepyxself pyxvpairs pyxvcallarclabeling pyxvreturnarclabeling pyxvepsilononreplace pyxvreturnlabel$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst replacepairs              $^                            callarclabelingbinput$^                            returnarclabelingbneither$^ $^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00replacecythonunused pyobject pyxself pyobject pyxvpairs pyobject pyxvcallarclabeling pyobject pyxvreturnarclabeling bool pyxvepsilononreplace pyxt00basictypesint00 pyxvreturnlabel $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstreplace pyxt0$^  pyxrefnannysetupcontextreplace 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.callarclabeling  pyxvcallarclabeling$^  pyxt0.returnarclabeling  pyxvreturnarclabeling$^  pyxt0.epsilononreplace  pyxvepsilononreplace$^  pyxt0.returnlabel  pyxvreturnlabel$^  pyxt0  pyobject pyxf0pywrapfstreplacepyxvpairs 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.replace pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst reversefst ifst bool requiresuperinitialtrue              $^    $^    reverseifst requiresuperinitialtrue$^ $^$^static pyobject pyxpw0pywrapfst00reversepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstreversestruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstreverse pyxoptionalargs $^  bool pyxvrequiresuperinitial  bool0$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreverse 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvrequiresuperinitial  pyxoptionalargsrequiresuperinitial$^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^    fst.reversederefifst.fst tfst.get requiresuperinitial$^    return initmutablefsttfst.release$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.reversederefifst.fst tfst.get requiresuperinitial              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptreversepyxvifstfst pyxvtfst.get pyxvrequiresuperinitial$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.reversederefifst.fst tfst.get requiresuperinitial$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst reversefst ifst bool requiresuperinitialtrue              $^    $^    reverseifst requiresuperinitialtrue$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.reverse pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00reversepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00reverse  n  reverseifst requiresuperinitialtruenn  constructively reverses an fsts transduction.nn  this operation reverses an fst. if a transduces string x to y with weight an  then the reverse of a transduces the reverse of x to the reverse of y withn  weight a.reverse. typically a  a.reverse and arc  revarc e.g.n  tropicalweight and logweight. in general e.g. when the weights only form an  left or right semiring the output arc type must match the input arc type.nn  argsn    ifst the input fst.n    requiresuperinitial should a superinitial state be creatednn  returnsn    a reversed fst.n  $^static pyobject pyxpw0pywrapfst00reversepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  bool pyxvrequiresuperinitial$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreverse wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsrequiresuperinitial0$^    pyobject values0  00$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsrequiresuperinitial$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs reverse  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvrequiresuperinitial  pyxpyobjectistruevalues0 if unlikelypyxvrequiresuperinitial  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvrequiresuperinitial  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidreverse 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.reverse pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00reversepyxself pyxvifst pyxvrequiresuperinitial$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00reversecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst bool pyxvrequiresuperinitial $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstreverse pyxt0$^  pyxrefnannysetupcontextreverse 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.requiresuperinitial  pyxvrequiresuperinitial$^  pyxt0  pyobject pyxf0pywrapfstreversepyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.reverse pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cdef vectorfst.weightclass shortestdistancefst ifst              $^                                                  float deltafst.kshortestdelta$^                                                  int00 nstatefst.knostateid$^ $^$^static stdvectorfstscriptweightclass  pyxf0pywrapfstshortestdistancestruct pyxobj0pywrapfstfst pyxvifst struct pyxoptargs0pywrapfstshortestdistance pyxoptionalargs $^  float pyxvdelta  pyxk00$^  pyxt00basictypesint00 pyxvnstate  pyxk00$^  pyobject pyxvqueuetype  pyobject pyxnbauto$^$^   pywrapfst.pyx0000$^                                                  int00 nstatefst.knostateid$^                                                  queuetypebauto$^                                                  bool reversefalse except               $^    cdef uniqueptrvectorfst.weightclass distance$^    distance.resetnew vectorfst.weightclass$^ $^  bool pyxvreverse  bool0$^  stduniqueptrstdvectorfstscriptweightclass   pyxvdistance$^  stduniqueptrfstscriptshortestdistanceoptions  pyxvopts$^  stdvectorfstscriptweightclass  pyxr$^  pyxrefnannydeclarations$^  stdvectorfstscriptweightclass  pyxt0$^  int pyxt0$^  stdstring pyxt0$^  enum fstqueuetype pyxt0$^  pyxrefnannysetupcontextshortestdistance 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvnstate  pyxoptionalargsnstate$^        if pyxoptionalargspyxn  0 $^          pyxvqueuetype  pyxoptionalargsqueuetype$^          if pyxoptionalargspyxn  0 $^            pyxvreverse  pyxoptionalargsreverse$^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^                                                  bool reversefalse except $^    cdef uniqueptrvectorfst.weightclass distance$^    distance.resetnew vectorfst.weightclass              $^     for scoping reasons these have to be declared here even though they may$^     not be used in all cases.$^ $^  try $^    pyxt0  new stdvectorfstscriptweightclass $^   catch... $^    pyxcppexn0pyerr$^    pyxerr0 0000 pyxl0error$^  $^  pyxvdistance.resetpyxt0$^$^   pywrapfst.pyx0000$^     not be used in all cases.$^    cdef uniqueptrfst.shortestdistanceoptions opts$^    if reverse              $^       only the simpler signature supports shortest distance to final states$^       nstate and queuetype arguments are ignored.$^ $^  pyxt0  pyxvreverse  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^       only the simpler signature supports shortest distance to final states$^       nstate and queuetype arguments are ignored.$^      fst.shortestdistancederefifst.fst distance.get true delta              $^    else$^      opts.resetnew fst.shortestdistanceoptions$^ $^    if unlikelypyobject pyxvifst  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^      pyxerr0 0000 pyxl0error$^    $^    fstscriptshortestdistancepyxvifstfst pyxvdistance.get 0 pyxvdelta$^$^     pywrapfst.pyx0000$^     not be used in all cases.$^    cdef uniqueptrfst.shortestdistanceoptions opts$^    if reverse              $^       only the simpler signature supports shortest distance to final states$^       nstate and queuetype arguments are ignored.$^ $^    goto pyxl0$^  $^$^   pywrapfst.pyx0000$^      fst.shortestdistancederefifst.fst distance.get true delta$^    else$^      opts.resetnew fst.shortestdistanceoptions              $^          getqueuetypetostringqueuetype fst.anyarcfilter nstate$^          delta$^ $^  else $^$^     pywrapfst.pyx0000$^    else$^      opts.resetnew fst.shortestdistanceoptions$^          getqueuetypetostringqueuetype fst.anyarcfilter nstate              $^          delta$^      fst.shortestdistancederefifst.fst distance.get derefopts$^ $^    pyxt0  pyxf0pywrapfsttostringpyxvqueuetype null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^    pyxt0  pyxf0pywrapfstgetqueuetypepyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^      fst.shortestdistancederefifst.fst distance.get true delta$^    else$^      opts.resetnew fst.shortestdistanceoptions              $^          getqueuetypetostringqueuetype fst.anyarcfilter nstate$^          delta$^ $^    pyxvopts.resetnew fstscriptshortestdistanceoptionspyxt0 fstscriptanyarcfilter pyxvnstate pyxvdelta$^$^     pywrapfst.pyx0000$^          getqueuetypetostringqueuetype fst.anyarcfilter nstate$^          delta$^      fst.shortestdistancederefifst.fst distance.get derefopts              $^    return distance.release$^  $^ $^    if unlikelypyobject pyxvifst  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^      pyxerr0 0000 pyxl0error$^    $^    fstscriptshortestdistancepyxvifstfst pyxvdistance.get pyxvopts$^  $^  pyxl0$^$^   pywrapfst.pyx0000$^          delta$^      fst.shortestdistancederefifst.fst distance.get derefopts$^    return distance.release              $^  $^  $^ $^  pyxr  pyxvdistance.release$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cdef vectorfst.weightclass shortestdistancefst ifst              $^                                                  float deltafst.kshortestdelta$^                                                  int00 nstatefst.knostateid$^ $^$^   function exit code $^  pyxl0error$^  pyxaddtracebackpywrapfst.shortestdistance pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  def shortestdistancefst ifst              $^                       float deltafst.kshortestdelta$^                       int00 nstatefst.knostateid$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst00shortestdistancepyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00shortestdistance  n  shortestdistanceifst delta0e0 nstatenostateidn                   queuetypeauto reversefalsenn  compute the shortest distance from the initial or final state.nn  this operation computes the shortest distance from the initial state whenn  reverse is false or from every state to the final state when reverse isn  true. the shortest distance from p to q is the otimessum of the weights ofn  all the paths between p and q. the weights must be right if reverse isn  false or left if reverse is true distributive and kclosed i.e. 0n  otimes x otimes x0 otimes ... otimes xk  0  0 otimes x otimes x0n  otimes ... otimes xk e.g. tropicalweight.nn  argsn    ifst the input fst.n    delta comparisonquantization delta.n    nstate state number threshold ignored if reverse is true.n    queuetype a string matching a known queue type one of auto fifon        lifo shortest state top ignored if reverse is true.n    reverse should the reverse distance from each state to the final staten        be computednn  returnsn    a list of weight objects representing the shortest distance for each state.n  $^static pymethoddef pyxmdef0pywrapfst00shortestdistance  shortestdistance pycfunctionpyxpw0pywrapfst00shortestdistance methvarargsmethkeywords pyxdoc0pywrapfst00shortestdistance$^static pyobject pyxpw0pywrapfst00shortestdistancepyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  float pyxvdelta$^  pyxt00basictypesint00 pyxvnstate$^  pyobject pyxvqueuetype  0$^  bool pyxvreverse$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextshortestdistance wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsdeltapyxnsnstatepyxnsqueuetypepyxnsreverse0$^    pyobject values0  00000$^    values0  pyobject pyxnbauto$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnstate$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsqueuetype$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsreverse$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs shortestdistance  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    if values0 $^      pyxvnstate  pyxpyintasint00tvalues0 if unlikelypyxvnstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnstate  pyxk00$^    $^    pyxvqueuetype  values0$^    if values0 $^      pyxvreverse  pyxpyobjectistruevalues0 if unlikelypyxvreverse  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                       int00 nstatefst.knostateid$^                       queuetypebauto$^                       bool reversefalse              $^    $^    shortestdistanceifst delta0e0 nstatenostateid$^ $^      pyxvreverse  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidshortestdistance 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.shortestdistance pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00shortestdistancepyxself pyxvifst pyxvdelta pyxvnstate pyxvqueuetype pyxvreverse$^$^   pywrapfst.pyx0000$^  $^  $^  def shortestdistancefst ifst              $^                       float deltafst.kshortestdelta$^                       int00 nstatefst.knostateid$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00shortestdistancecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst float pyxvdelta pyxt00basictypesint00 pyxvnstate pyobject pyxvqueuetype bool pyxvreverse $^  stduniqueptrstdvectorfstscriptweightclass   pyxvdistance$^  stdstring pyxvweighttype$^  fstscriptweightclass pyxvweight$^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  stdvectorfstscriptweightclass  pyxt0$^  struct pyxoptargs0pywrapfstshortestdistance pyxt0$^  pyobject pyxt0  null$^  stdvectorfstscriptweightclass iterator pyxt0$^  fstscriptweightclass pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextshortestdistance 0$^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrvectorfst.weightclass distance$^    distance.resetshortestdistanceifst delta nstate queuetype reverse              $^    cdef string weighttype  ifst.weighttype$^    return weightweighttype weight.tostring for weight in derefdistance$^ $^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.nstate  pyxvnstate$^  pyxt0.queuetype  pyxvqueuetype$^  pyxt0.reverse  pyxvreverse$^  pyxt0  pyxf0pywrapfstshortestdistancepyxvifst pyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvdistance.resetpyxt0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrvectorfst.weightclass distance$^    distance.resetshortestdistanceifst delta nstate queuetype reverse$^    cdef string weighttype  ifst.weighttype              $^    return weightweighttype weight.tostring for weight in derefdistance$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s weighttype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvweighttype  struct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabweighttypepyxvifst 0$^$^   pywrapfst.pyx0000$^    distance.resetshortestdistanceifst delta nstate queuetype reverse$^    cdef string weighttype  ifst.weighttype$^    return weightweighttype weight.tostring for weight in derefdistance              $^  $^  $^ $^  pyxxdecrefpyxr$^  pyxt0  pylistnew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxvdistance$^  pyxt0  pyxt0begin$^  for  $^    if pyxt0  pyxt0end break$^    pyxt0  pyxt0$^    pyxt0$^    pyxvweight  pyxt0$^    pyxt0  pyxconvertpybytesstringtopystdinstringpyxvweighttype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxconvertpybytesstringtopystdinstringpyxvweight.tostring if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxgiverefpyxt0$^    pytuplesetitempyxt0 0 pyxt0$^    pyxgiverefpyxt0$^    pytuplesetitempyxt0 0 pyxt0$^    pyxt0  0$^    pyxt0  0$^    pyxt0  pyxpyobjectcallpyobject pyxptype0pywrapfstweight pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    if unlikelypyxlistcompappendpyxt0 pyobjectpyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^  $^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  def shortestdistancefst ifst              $^                       float deltafst.kshortestdelta$^                       int00 nstatefst.knostateid$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.shortestdistance pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst shortestpathfst ifst              $^                                 float deltafst.kshortestdelta$^                                 int00 nshortest0$^ $^$^static pyobject pyxpw0pywrapfst00shortestpathpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstshortestpathstruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch struct pyxoptargs0pywrapfstshortestpath pyxoptionalargs $^  float pyxvdelta  pyxk00$^  pyxt00basictypesint00 pyxvnshortest  pyxt00basictypesint000$^  pyxt00basictypesint00 pyxvnstate  pyxk00$^  pyobject pyxvqueuetype  pyobject pyxnbauto$^$^   pywrapfst.pyx0000$^                                 int00 nstatefst.knostateid$^                                 queuetypebauto$^                                 bool uniquefalse              $^                                 weightnone$^    $^ $^  bool pyxvunique  bool0$^$^   pywrapfst.pyx0000$^                                 queuetypebauto$^                                 bool uniquefalse$^                                 weightnone              $^    $^    shortestpathifst delta0e0 nshortest0 nstatenostateid$^ $^  pyobject pyxvweight  pyobject pynone$^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  fstscriptweightclass pyxvwc$^  stduniqueptrfstscriptshortestpathoptions  pyxvopts$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  fstscriptweightclass pyxt0$^  stdstring pyxt0$^  enum fstqueuetype pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextshortestpath 0$^  if pyxoptionalargs $^    if pyxoptionalargspyxn  0 $^      pyxvdelta  pyxoptionalargsdelta$^      if pyxoptionalargspyxn  0 $^        pyxvnshortest  pyxoptionalargsnshortest$^        if pyxoptionalargspyxn  0 $^          pyxvnstate  pyxoptionalargsnstate$^          if pyxoptionalargspyxn  0 $^            pyxvqueuetype  pyxoptionalargsqueuetype$^            if pyxoptionalargspyxn  0 $^              pyxvunique  pyxoptionalargsunique$^              if pyxoptionalargspyxn  0 $^                pyxvweight  pyxoptionalargsweight$^              $^            $^          $^        $^      $^    $^  $^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^     threshold is set to semiring zero no pruning if no weight is specified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype weight$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^     threshold is set to semiring zero no pruning if no weight is specified.$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype weight              $^    cdef uniqueptrfst.shortestpathoptions opts$^    opts.resetnew fst.shortestpathoptionsgetqueuetypetostringqueuetype$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s weighttype$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxf0pywrapfstgetweightclassorzerostruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabweighttypepyxvifst 0 pyxvweight if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvwc  pyxt0$^$^   pywrapfst.pyx0000$^    cdef fst.weightclass wc  getweightclassorzeroifst.weighttype weight$^    cdef uniqueptrfst.shortestpathoptions opts$^    opts.resetnew fst.shortestpathoptionsgetqueuetypetostringqueuetype              $^                                           nshortest unique delta wc nstate$^    fst.shortestpathderefifst.fst tfst.get derefopts$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvqueuetype null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfstgetqueuetypepyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.shortestpathoptions opts$^    opts.resetnew fst.shortestpathoptionsgetqueuetypetostringqueuetype$^                                           nshortest unique delta wc nstate              $^    fst.shortestpathderefifst.fst tfst.get derefopts$^    return initmutablefsttfst.release$^ $^  pyxvopts.resetnew fstscriptshortestpathoptionspyxt0 pyxvnshortest pyxvunique pyxvdelta pyxvwc pyxvnstate$^$^   pywrapfst.pyx0000$^    opts.resetnew fst.shortestpathoptionsgetqueuetypetostringqueuetype$^                                           nshortest unique delta wc nstate$^    fst.shortestpathderefifst.fst tfst.get derefopts              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptshortestpathpyxvifstfst pyxvtfst.get pyxvopts$^$^   pywrapfst.pyx0000$^                                           nshortest unique delta wc nstate$^    fst.shortestpathderefifst.fst tfst.get derefopts$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst shortestpathfst ifst              $^                                 float deltafst.kshortestdelta$^                                 int00 nshortest0$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.shortestpath pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00shortestpathpyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00shortestpath  n  shortestpathifst delta0e0 nshortest0 nstatenostateidn               queuetypeauto uniquefalse weightnonenn  construct an fst containing the shortest paths in the input fst.nn  this operation produces an fst containing the nshortest paths in the inputn  fst. the nshortest paths are the nlowest weight paths w.r.t. the naturaln  semiring order. the single path that can be read from the ith of at most nn  transitions leaving the initial state of the resulting fst is the ithn  shortest path. the weights need to be right distributive and have the pathn  property. they also need to be left distributive as well for nshortest withn  n  0 e.g. tropicalweight.nn  argsn    ifst the input fst.n    delta comparisonquantization delta.n    nshortest the number of paths to return.n    nstate state number threshold.n    queuetype a string matching a known queue type one of auto fifon        lifo shortest state top.n    unique should the resulting fst only contain distinct paths requiresn        the input fst to be an acceptor epsilons are treated as if they aren        regular symbols.n    weight a weight or weight string indicating the desired weight thresholdn        below which paths are pruned if omitted no paths are pruned.nn  returnsn    an fst containing the nshortest paths.n  $^static pyobject pyxpw0pywrapfst00shortestpathpyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  float pyxvdelta$^  pyxt00basictypesint00 pyxvnshortest$^  pyxt00basictypesint00 pyxvnstate$^  pyobject pyxvqueuetype  0$^  bool pyxvunique$^  pyobject pyxvweight  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextshortestpath wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsdeltapyxnsnshortestpyxnsnstatepyxnsqueuetypepyxnsuniquepyxnsweight0$^    pyobject values0  0000000$^    values0  pyobject pyxnbauto$^$^     pywrapfst.pyx0000$^                                 queuetypebauto$^                                 bool uniquefalse$^                                 weightnone              $^    $^    shortestpathifst delta0e0 nshortest0 nstatenostateid$^ $^    values0  pyobject pynone$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsdelta$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnshortest$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsnstate$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsqueuetype$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsunique$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsweight$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs shortestpath  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    if values0 $^      pyxvdelta  pyxpyfloatasfloatvalues0 if unlikelypyxvdelta  float0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvdelta  pyxk00$^    $^    if values0 $^      pyxvnshortest  pyxpyintasint00tvalues0 if unlikelypyxvnshortest  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnshortest  pyxt00basictypesint000$^    $^    if values0 $^      pyxvnstate  pyxpyintasint00tvalues0 if unlikelypyxvnstate  int00t0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvnstate  pyxk00$^    $^    pyxvqueuetype  values0$^    if values0 $^      pyxvunique  pyxpyobjectistruevalues0 if unlikelypyxvunique  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                                 int00 nstatefst.knostateid$^                                 queuetypebauto$^                                 bool uniquefalse              $^                                 weightnone$^    $^ $^      pyxvunique  bool0$^    $^    pyxvweight  values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidshortestpath 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.shortestpath pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00shortestpathpyxself pyxvifst pyxvdelta pyxvnshortest pyxvnstate pyxvqueuetype pyxvunique pyxvweight$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst shortestpathfst ifst              $^                                 float deltafst.kshortestdelta$^                                 int00 nshortest0$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00shortestpathcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst float pyxvdelta pyxt00basictypesint00 pyxvnshortest pyxt00basictypesint00 pyxvnstate pyobject pyxvqueuetype bool pyxvunique pyobject pyxvweight $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstshortestpath pyxt0$^  pyxrefnannysetupcontextshortestpath 0$^  pyxxdecrefpyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  pyxvdelta$^  pyxt0.nshortest  pyxvnshortest$^  pyxt0.nstate  pyxvnstate$^  pyxt0.queuetype  pyxvqueuetype$^  pyxt0.unique  pyxvunique$^  pyxt0.weight  pyxvweight$^  pyxt0  pyobject pyxf0pywrapfstshortestpathpyxvifst 0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.shortestpath pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef fst statemapfst ifst maptype              $^    $^    statemapifst maptype$^ $^$^static pyobject pyxpw0pywrapfst00statemappyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static struct pyxobj0pywrapfstfst pyxf0pywrapfststatemapstruct pyxobj0pywrapfstfst pyxvifst pyobject pyxvmaptype cythonunused int pyxskipdispatch $^  struct pyxobj0pywrapfstfst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  struct pyxoptargs0pywrapfstmap pyxt0$^  pyxrefnannysetupcontextstatemap 0$^$^   pywrapfst.pyx0000$^    see also arcmap.$^    $^    return mapifst fst.kdelta maptype 0. none              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0.pyxn  0$^  pyxt0.delta  fstkdelta$^  pyxt0.maptype  pyxvmaptype$^  pyxt0.power  0.$^  pyxt0.weight  pynone$^  pyxt0  pyobject pyxf0pywrapfstmappyxvifst pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstfst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef fst statemapfst ifst maptype              $^    $^    statemapifst maptype$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.statemap pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00statemappyobject pyxself pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst00statemap  n  statemapifst maptypenn  constructively applies a transform to all states.nn  this operation transforms each state according to the requested map type.n  note that currently only one statemapping operation is supported.nn  argsn    ifst the input fst.n    maptype a string matching a known mapping operation one of arcsumn        sum weights of identicallylabeled multiarcs arcunique deletesn        nonunique identicallylabeled multiarcs.nn  returnsn    an fst with states remapped.nn  raisesn    fstargerror unknown map type.nn  see also arcmap.n  $^static pyobject pyxpw0pywrapfst00statemappyobject pyxself pyobject pyxargs pyobject pyxkwds $^  struct pyxobj0pywrapfstfst pyxvifst  0$^  pyobject pyxvmaptype  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextstatemap wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsifstpyxnsmaptype0$^    pyobject values0  00$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsifst  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsmaptype  0 kwargs$^        else $^          pyxraiseargtupleinvalidstatemap 0 0 0 0 pyxerr0 0000 pyxl0error$^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs statemap  0 pyxerr0 0000 pyxl0error$^      $^     else if pytuplegetsizepyxargs  0 $^      goto pyxl0argtupleerror$^     else $^      values0  pytuplegetitempyxargs 0$^      values0  pytuplegetitempyxargs 0$^    $^    pyxvifst  struct pyxobj0pywrapfstfst values0$^    pyxvmaptype  values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidstatemap 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.statemap pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00statemappyxself pyxvifst pyxvmaptype$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00statemapcythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst pyobject pyxvmaptype $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextstatemap 0$^  pyxxdecrefpyxr$^  pyxt0  pyobject pyxf0pywrapfststatemappyxvifst pyxvmaptype 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.statemap pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst synchronizefst ifst              $^    $^    synchronizeifst$^ $^$^static pyobject pyxpw0pywrapfst00synchronizepyobject pyxself pyobject pyxvifst proto$^static struct pyxobj0pywrapfstmutablefst pyxf0pywrapfstsynchronizestruct pyxobj0pywrapfstfst pyxvifst cythonunused int pyxskipdispatch $^  stduniqueptrfstscriptvectorfstclass  pyxvtfst$^  struct pyxobj0pywrapfstmutablefst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsynchronize 0$^$^   pywrapfst.pyx0000$^    $^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype              $^    fst.synchronizederefifst.fst tfst.get$^    return initmutablefsttfst.release$^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvtfst.resetnew fstscriptvectorfstclassstruct pyxvtabstruct0pywrapfstfst pyxvifstpyxvtabarctypepyxvifst 0$^$^   pywrapfst.pyx0000$^    cdef uniqueptrfst.vectorfstclass tfst$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.synchronizederefifst.fst tfst.get              $^    return initmutablefsttfst.release$^  $^ $^  if unlikelypyobject pyxvifst  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fst$^    pyxerr0 0000 pyxl0error$^  $^  fstscriptsynchronizepyxvifstfst pyxvtfst.get$^$^   pywrapfst.pyx0000$^    tfst.resetnew fst.vectorfstclassifst.arctype$^    fst.synchronizederefifst.fst tfst.get$^    return initmutablefsttfst.release              $^  $^  $^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitmutablefstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstmutablefst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^  $^  cpdef mutablefst synchronizefst ifst              $^    $^    synchronizeifst$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.synchronize pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst00synchronizepyobject pyxself pyobject pyxvifst proto$^static char pyxdoc0pywrapfst00synchronize  n  synchronizeifstnn  constructively synchronizes an fst.nn  this operation synchronizes a transducer. the result will be an equivalentn  fst that has the property that during the traversal of a path the delay isn  either zero or strictly increasing where the delay is the difference betweenn  the number of nonepsilon output labels and input labels along the path. forn  the algorithm to terminate the input transducer must have bounded delayn  i.e. the delay of every cycle must be zero.nn  argsn    ifst the input fst.nn  returnsn    an equivalent synchronized fst.n  $^static pyobject pyxpw0pywrapfst00synchronizepyobject pyxself pyobject pyxvifst $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsynchronize wrapper 0$^  if unlikelypyxargtypetestpyobject pyxvifst pyxptype0pywrapfstfst 0 ifst 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst00synchronizepyxself struct pyxobj0pywrapfstfst pyxvifst$^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  null$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst00synchronizecythonunused pyobject pyxself struct pyxobj0pywrapfstfst pyxvifst $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsynchronize 0$^  pyxxdecrefpyxr$^  pyxt0  pyobject pyxf0pywrapfstsynchronizepyxvifst 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.synchronize pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    $^  $^    def cinitself              $^                  string fsttypebvector$^                  string arctypebstandard$^ $^$^ python wrapper $^static int pyxpw0pywrapfst0compiler0cinitpyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static int pyxpw0pywrapfst0compiler0cinitpyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  stdstring pyxvfsttype$^  stdstring pyxvarctype$^  struct pyxobj0pywrapfstsymboltable pyxvisymbols  0$^  struct pyxobj0pywrapfstsymboltable pyxvosymbols  0$^  struct pyxobj0pywrapfstsymboltable pyxvssymbols  0$^  bool pyxvacceptor$^  bool pyxvkeepisymbols$^  bool pyxvkeeposymbols$^  bool pyxvkeepstatenumbering$^  bool pyxvallownegativelabels$^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextcinit wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsfsttypepyxnsarctypepyxnsisymbolspyxnsosymbolspyxnsssymbolspyxnsacceptorpyxnskeepisymbolspyxnskeeposymbolspyxnskeepstatenumberingpyxnsallownegativelabels0$^    pyobject values00  0000000000$^$^     pywrapfst.pyx0000$^                  string fsttypebvector$^                  string arctypebstandard$^                  symboltable isymbolsnone              $^                  symboltable osymbolsnone$^                  symboltable ssymbolsnone$^ $^    values0  pyobject struct pyxobj0pywrapfstsymboltable pynone$^$^     pywrapfst.pyx0000$^                  string arctypebstandard$^                  symboltable isymbolsnone$^                  symboltable osymbolsnone              $^                  symboltable ssymbolsnone$^                  bool acceptorfalse$^ $^    values0  pyobject struct pyxobj0pywrapfstsymboltable pynone$^$^     pywrapfst.pyx0000$^                  symboltable isymbolsnone$^                  symboltable osymbolsnone$^                  symboltable ssymbolsnone              $^                  bool acceptorfalse$^                  bool keepisymbolsfalse$^ $^    values0  pyobject struct pyxobj0pywrapfstsymboltable pynone$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case 00 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsfsttype$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsarctype$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsisymbols$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsosymbols$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsssymbols$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsacceptor$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnskeepisymbols$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnskeeposymbols$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnskeepstatenumbering$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsallownegativelabels$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs cinit  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case 00 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^    $^    if values0 $^      pyxvfsttype  pyxconvertstringfrompystdinstringvalues0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvfsttype  pyxk00$^    $^    if values0 $^      pyxvarctype  pyxconvertstringfrompystdinstringvalues0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^     else $^      pyxvarctype  pyxk00$^    $^    pyxvisymbols  struct pyxobj0pywrapfstsymboltable values0$^    pyxvosymbols  struct pyxobj0pywrapfstsymboltable values0$^    pyxvssymbols  struct pyxobj0pywrapfstsymboltable values0$^    if values0 $^      pyxvacceptor  pyxpyobjectistruevalues0 if unlikelypyxvacceptor  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                  symboltable osymbolsnone$^                  symboltable ssymbolsnone$^                  bool acceptorfalse              $^                  bool keepisymbolsfalse$^                  bool keeposymbolsfalse$^ $^      pyxvacceptor  bool0$^    $^    if values0 $^      pyxvkeepisymbols  pyxpyobjectistruevalues0 if unlikelypyxvkeepisymbols  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                  symboltable ssymbolsnone$^                  bool acceptorfalse$^                  bool keepisymbolsfalse              $^                  bool keeposymbolsfalse$^                  bool keepstatenumberingfalse$^ $^      pyxvkeepisymbols  bool0$^    $^    if values0 $^      pyxvkeeposymbols  pyxpyobjectistruevalues0 if unlikelypyxvkeeposymbols  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                  bool acceptorfalse$^                  bool keepisymbolsfalse$^                  bool keeposymbolsfalse              $^                  bool keepstatenumberingfalse$^                  bool allownegativelabelsfalse$^ $^      pyxvkeeposymbols  bool0$^    $^    if values0 $^      pyxvkeepstatenumbering  pyxpyobjectistruevalues0 if unlikelypyxvkeepstatenumbering  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                  bool keepisymbolsfalse$^                  bool keeposymbolsfalse$^                  bool keepstatenumberingfalse              $^                  bool allownegativelabelsfalse$^      self.sstrm.resetnew stringstream$^ $^      pyxvkeepstatenumbering  bool0$^    $^    if values0 $^      pyxvallownegativelabels  pyxpyobjectistruevalues0 if unlikelypyxvallownegativelabels  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^     else $^$^       pywrapfst.pyx0000$^                  bool keeposymbolsfalse$^                  bool keepstatenumberingfalse$^                  bool allownegativelabelsfalse              $^      self.sstrm.resetnew stringstream$^      self.fsttype  tostringfsttype$^ $^      pyxvallownegativelabels  bool0$^    $^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidcinit 0 0 00 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.compiler.cinit pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return 0$^  pyxl0argumentunpackingdone$^  if unlikelypyxargtypetestpyobject pyxvisymbols pyxptype0pywrapfstsymboltable 0 isymbols 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvosymbols pyxptype0pywrapfstsymboltable 0 osymbols 0 pyxerr0 0000 pyxl0error$^  if unlikelypyxargtypetestpyobject pyxvssymbols pyxptype0pywrapfstsymboltable 0 ssymbols 0 pyxerr0 0000 pyxl0error$^  pyxr  pyxpf0pywrapfst0compilercinitstruct pyxobj0pywrapfstcompiler pyxvself pyxvfsttype pyxvarctype pyxvisymbols pyxvosymbols pyxvssymbols pyxvacceptor pyxvkeepisymbols pyxvkeeposymbols pyxvkeepstatenumbering pyxvallownegativelabels$^$^   pywrapfst.pyx0000$^    $^  $^    def cinitself              $^                  string fsttypebvector$^                  string arctypebstandard$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0compilercinitstruct pyxobj0pywrapfstcompiler pyxvself stdstring pyxvfsttype stdstring pyxvarctype struct pyxobj0pywrapfstsymboltable pyxvisymbols struct pyxobj0pywrapfstsymboltable pyxvosymbols struct pyxobj0pywrapfstsymboltable pyxvssymbols bool pyxvacceptor bool pyxvkeepisymbols bool pyxvkeeposymbols bool pyxvkeepstatenumbering bool pyxvallownegativelabels $^  int pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  stdstring pyxt0$^  int pyxt0$^  int pyxt0$^  fstsymboltable pyxt0$^  pyxrefnannysetupcontextcinit 0$^$^   pywrapfst.pyx0000$^                  bool keepstatenumberingfalse$^                  bool allownegativelabelsfalse$^      self.sstrm.resetnew stringstream              $^      self.fsttype  tostringfsttype$^      self.arctype  tostringarctype$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s sstrm$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfsstrm.resetnew stdstringstream$^$^   pywrapfst.pyx0000$^                  bool allownegativelabelsfalse$^      self.sstrm.resetnew stringstream$^      self.fsttype  tostringfsttype              $^      self.arctype  tostringarctype$^      self.isymbols  null$^ $^  pyxt0  pyxconvertpybytesstringtopystdinstringpyxvfsttype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxf0pywrapfsttostringpyxt0 null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxdecrefpyxt0 pyxt0  0$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fsttype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselffsttype  pyxt0$^$^   pywrapfst.pyx0000$^      self.sstrm.resetnew stringstream$^      self.fsttype  tostringfsttype$^      self.arctype  tostringarctype              $^      self.isymbols  null$^      if isymbols is not none$^ $^  pyxt0  pyxconvertpybytesstringtopystdinstringpyxvarctype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxf0pywrapfsttostringpyxt0 null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxdecrefpyxt0 pyxt0  0$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfarctype  pyxt0$^$^   pywrapfst.pyx0000$^      self.fsttype  tostringfsttype$^      self.arctype  tostringarctype$^      self.isymbols  null              $^      if isymbols is not none$^        self.isymbols  isymbols.table$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s isymbols$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfisymbols  null$^$^   pywrapfst.pyx0000$^      self.arctype  tostringarctype$^      self.isymbols  null$^      if isymbols is not none              $^        self.isymbols  isymbols.table$^      self.osymbols  null$^ $^  pyxt0  pyobject pyxvisymbols  pynone$^  pyxt0  pyxt0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^      self.isymbols  null$^      if isymbols is not none$^        self.isymbols  isymbols.table              $^      self.osymbols  null$^      if osymbols is not none$^ $^    if unlikelypyobject pyxvisymbols  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s table$^      pyxerr0 0000 pyxl0error$^    $^    pyxt0  pyxvisymbolspyxbase.pyxbase.table$^    if unlikelypyobject pyxvself  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s isymbols$^      pyxerr0 0000 pyxl0error$^    $^    pyxvselfisymbols  pyxt0$^$^     pywrapfst.pyx0000$^      self.arctype  tostringarctype$^      self.isymbols  null$^      if isymbols is not none              $^        self.isymbols  isymbols.table$^      self.osymbols  null$^ $^  $^$^   pywrapfst.pyx0000$^      if isymbols is not none$^        self.isymbols  isymbols.table$^      self.osymbols  null              $^      if osymbols is not none$^        self.osymbols  osymbols.table$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s osymbols$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfosymbols  null$^$^   pywrapfst.pyx0000$^        self.isymbols  isymbols.table$^      self.osymbols  null$^      if osymbols is not none              $^        self.osymbols  osymbols.table$^      self.ssymbols  null$^ $^  pyxt0  pyobject pyxvosymbols  pynone$^  pyxt0  pyxt0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^      self.osymbols  null$^      if osymbols is not none$^        self.osymbols  osymbols.table              $^      self.ssymbols  null$^      if ssymbols is not none$^ $^    if unlikelypyobject pyxvosymbols  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s table$^      pyxerr0 0000 pyxl0error$^    $^    pyxt0  pyxvosymbolspyxbase.pyxbase.table$^    if unlikelypyobject pyxvself  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s osymbols$^      pyxerr0 0000 pyxl0error$^    $^    pyxvselfosymbols  pyxt0$^$^     pywrapfst.pyx0000$^        self.isymbols  isymbols.table$^      self.osymbols  null$^      if osymbols is not none              $^        self.osymbols  osymbols.table$^      self.ssymbols  null$^ $^  $^$^   pywrapfst.pyx0000$^      if osymbols is not none$^        self.osymbols  osymbols.table$^      self.ssymbols  null              $^      if ssymbols is not none$^        self.ssymbols  ssymbols.table$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s ssymbols$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfssymbols  null$^$^   pywrapfst.pyx0000$^        self.osymbols  osymbols.table$^      self.ssymbols  null$^      if ssymbols is not none              $^        self.ssymbols  ssymbols.table$^      self.acceptor  acceptor$^ $^  pyxt0  pyobject pyxvssymbols  pynone$^  pyxt0  pyxt0  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^      self.ssymbols  null$^      if ssymbols is not none$^        self.ssymbols  ssymbols.table              $^      self.acceptor  acceptor$^      self.keepisymbols  keepisymbols$^ $^    if unlikelypyobject pyxvssymbols  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s table$^      pyxerr0 0000 pyxl0error$^    $^    pyxt0  pyxvssymbolspyxbase.pyxbase.table$^    if unlikelypyobject pyxvself  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s ssymbols$^      pyxerr0 0000 pyxl0error$^    $^    pyxvselfssymbols  pyxt0$^$^     pywrapfst.pyx0000$^        self.osymbols  osymbols.table$^      self.ssymbols  null$^      if ssymbols is not none              $^        self.ssymbols  ssymbols.table$^      self.acceptor  acceptor$^ $^  $^$^   pywrapfst.pyx0000$^      if ssymbols is not none$^        self.ssymbols  ssymbols.table$^      self.acceptor  acceptor              $^      self.keepisymbols  keepisymbols$^      self.keeposymbols  keeposymbols$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s acceptor$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfacceptor  pyxvacceptor$^$^   pywrapfst.pyx0000$^        self.ssymbols  ssymbols.table$^      self.acceptor  acceptor$^      self.keepisymbols  keepisymbols              $^      self.keeposymbols  keeposymbols$^      self.keepstatenumbering  keepstatenumbering$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s keepisymbols$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfkeepisymbols  pyxvkeepisymbols$^$^   pywrapfst.pyx0000$^      self.acceptor  acceptor$^      self.keepisymbols  keepisymbols$^      self.keeposymbols  keeposymbols              $^      self.keepstatenumbering  keepstatenumbering$^      self.allownegativelabels  allownegativelabels$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s keeposymbols$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfkeeposymbols  pyxvkeeposymbols$^$^   pywrapfst.pyx0000$^      self.keepisymbols  keepisymbols$^      self.keeposymbols  keeposymbols$^      self.keepstatenumbering  keepstatenumbering              $^      self.allownegativelabels  allownegativelabels$^  $^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s keepstatenumbering$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfkeepstatenumbering  pyxvkeepstatenumbering$^$^   pywrapfst.pyx0000$^      self.keeposymbols  keeposymbols$^      self.keepstatenumbering  keepstatenumbering$^      self.allownegativelabels  allownegativelabels              $^  $^    cpdef fst compileself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s allownegativelabels$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfallownegativelabels  pyxvallownegativelabels$^$^   pywrapfst.pyx0000$^    $^  $^    def cinitself              $^                  string fsttypebvector$^                  string arctypebstandard$^ $^$^   function exit code $^  pyxr  0$^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compiler.cinit pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.allownegativelabels  allownegativelabels$^  $^    cpdef fst compileself              $^      $^      compile$^ $^$^static pyobject pyxpw0pywrapfst0compiler0compilepyobject pyxvself cythonunused pyobject unused proto$^static struct pyxobj0pywrapfstfst pyxf0pywrapfst0compilercompilestruct pyxobj0pywrapfstcompiler pyxvself int pyxskipdispatch $^  stduniqueptrfstscriptfstclass  pyxvtfst$^  struct pyxobj0pywrapfstfst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  stdstring pyxt0$^  int pyxt0$^  pyxrefnannysetupcontextcompile 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnscompile if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0compiler0compile $^      pyxxdecrefpyobject pyxr$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      if likelypyxt0  pynone  likelypyxtypetestpyxt0 pyxptype0pywrapfstfst pyxerr0 0000 pyxl0error$^      pyxr  struct pyxobj0pywrapfstfst pyxt0$^      pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      $^      cdef uniqueptrfst.fstclass tfst$^      tfst.resetfst.compilefstinternalderefself.sstrm              $^          bpywrapfst self.fsttype self.arctype self.isymbols$^          self.osymbols self.ssymbols self.acceptor self.keepisymbols$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s sstrm$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^      cdef uniqueptrfst.fstclass tfst$^      tfst.resetfst.compilefstinternalderefself.sstrm$^          bpywrapfst self.fsttype self.arctype self.isymbols              $^          self.osymbols self.ssymbols self.acceptor self.keepisymbols$^          self.keeposymbols self.keepstatenumbering$^ $^  pyxt0  pyxconvertstringfrompystdinstringpyxkpbpywrapfst if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fsttype$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s arctype$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s isymbols$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^      tfst.resetfst.compilefstinternalderefself.sstrm$^          bpywrapfst self.fsttype self.arctype self.isymbols$^          self.osymbols self.ssymbols self.acceptor self.keepisymbols              $^          self.keeposymbols self.keepstatenumbering$^          self.allownegativelabels$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s osymbols$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s ssymbols$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s acceptor$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s keepisymbols$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^          bpywrapfst self.fsttype self.arctype self.isymbols$^          self.osymbols self.ssymbols self.acceptor self.keepisymbols$^          self.keeposymbols self.keepstatenumbering              $^          self.allownegativelabels$^      self.sstrm.resetnew stringstream$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s keeposymbols$^    pyxerr0 0000 pyxl0error$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s keepstatenumbering$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^          self.osymbols self.ssymbols self.acceptor self.keepisymbols$^          self.keeposymbols self.keepstatenumbering$^          self.allownegativelabels              $^      self.sstrm.resetnew stringstream$^      if tfst.get  null$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s allownegativelabels$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^      $^      cdef uniqueptrfst.fstclass tfst$^      tfst.resetfst.compilefstinternalderefself.sstrm              $^          bpywrapfst self.fsttype self.arctype self.isymbols$^          self.osymbols self.ssymbols self.acceptor self.keepisymbols$^ $^  pyxvtfst.resetfstscriptcompilefstinternalpyxvselfsstrm pyxt0 pyxvselffsttype pyxvselfarctype pyxvselfisymbols pyxvselfosymbols pyxvselfssymbols pyxvselfacceptor pyxvselfkeepisymbols pyxvselfkeeposymbols pyxvselfkeepstatenumbering pyxvselfallownegativelabels$^$^   pywrapfst.pyx0000$^          self.keeposymbols self.keepstatenumbering$^          self.allownegativelabels$^      self.sstrm.resetnew stringstream              $^      if tfst.get  null$^        raise fstoperrorcompilation failed$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s sstrm$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfsstrm.resetnew stdstringstream$^$^   pywrapfst.pyx0000$^          self.allownegativelabels$^      self.sstrm.resetnew stringstream$^      if tfst.get  null              $^        raise fstoperrorcompilation failed$^      return initxfsttfst.release$^ $^  pyxt0  pyxvtfst.get  null  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^      self.sstrm.resetnew stringstream$^      if tfst.get  null$^        raise fstoperrorcompilation failed              $^      return initxfsttfst.release$^  $^ $^    pyxt0  pyxgetmoduleglobalnamepyxnsfstoperror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxpyobjectcallpyxt0 pyxtuple00 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxraisepyxt0 0 0 0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^          self.allownegativelabels$^      self.sstrm.resetnew stringstream$^      if tfst.get  null              $^        raise fstoperrorcompilation failed$^      return initxfsttfst.release$^ $^  $^$^   pywrapfst.pyx0000$^      if tfst.get  null$^        raise fstoperrorcompilation failed$^      return initxfsttfst.release              $^  $^    cpdef void writeself expression$^ $^  pyxxdecrefpyobject pyxr$^  pyxt0  pyobject pyxf0pywrapfstinitxfstpyxvtfst.release if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstfst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      self.allownegativelabels  allownegativelabels$^  $^    cpdef fst compileself              $^      $^      compile$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compiler.compile pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0compiler0compilepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0compiler0compile  n    compilenn    compiles the fst in the compiler string buffer.nn    this method compiles the fst and returns the resulting machine.nn    returnsn      the fst described by the compiler string buffer.nn    raisesn      fstoperror compilation failed.n    $^static pyobject pyxpw0pywrapfst0compiler0compilepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextcompile wrapper 0$^  pyxr  pyxpf0pywrapfst0compiler0compilestruct pyxobj0pywrapfstcompiler pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0compiler0compilestruct pyxobj0pywrapfstcompiler pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextcompile 0$^  pyxxdecrefpyxr$^  pyxt0  pyobject pyxf0pywrapfst0compilercompilepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compiler.compile pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return initxfsttfst.release$^  $^    cpdef void writeself expression              $^      $^      writeexpression$^ $^$^static pyobject pyxpw0pywrapfst0compiler0writepyobject pyxvself pyobject pyxvexpression proto$^static void pyxf0pywrapfst0compilerwritestruct pyxobj0pywrapfstcompiler pyxvself pyobject pyxvexpression int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  stdstring pyxt0$^  pyxrefnannysetupcontextwrite 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnswrite if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0compiler0write $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxvexpression if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^       else $^        if cythonfastpycall$^        if pyfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxvexpression$^          pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^         else$^        endif$^        if cythonfastpyccall$^        if pyxpyfastcfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxvexpression$^          pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^         else$^        endif$^        $^          pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^          pyxincrefpyxvexpression$^          pyxgiverefpyxvexpression$^          pytuplesetitempyxt0 00 pyxvexpression$^          pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^        $^      $^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        expression a string expression to add to compiler string buffer.$^      $^      derefself.sstrm  tostringexpression              $^  $^  $^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s sstrm$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxf0pywrapfsttostringpyxvexpression null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvselfsstrm  pyxt0$^$^   pywrapfst.pyx0000$^      return initxfsttfst.release$^  $^    cpdef void writeself expression              $^      $^      writeexpression$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.compiler.write pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0compiler0writepyobject pyxvself pyobject pyxvexpression proto$^static char pyxdoc0pywrapfst0compiler0write  n    writeexpressionnn    writes a string into the compiler string buffer.nn    this method adds a line to the compiler string buffer. it is normallyn    invoked using the right shift operator like sonn        compiler  fst.compilern        print  compiler 0 0 00 00n        print  compiler 0nn    argsn      expression a string expression to add to compiler string buffer.n    $^static pyobject pyxpw0pywrapfst0compiler0writepyobject pyxvself pyobject pyxvexpression $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextwrite wrapper 0$^  pyxr  pyxpf0pywrapfst0compiler0writestruct pyxobj0pywrapfstcompiler pyxvself pyobject pyxvexpression$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0compiler0writestruct pyxobj0pywrapfstcompiler pyxvself pyobject pyxvexpression $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextwrite 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst0compilerwritepyxvself pyxvexpression 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compiler.write pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself              $^      raise typeerrorno default reduce due to nontrivial cinit$^  def setstatecythonself pyxstate$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0compiler0reducecythonpyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst0compiler0reducecythonpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreducecython wrapper 0$^  pyxr  pyxpf0pywrapfst0compiler0reducecythonstruct pyxobj0pywrapfstcompiler pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0compiler0reducecythoncythonunused struct pyxobj0pywrapfstcompiler pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreducecython 0$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorno default reduce due to nontrivial cinit              $^  def setstatecythonself pyxstate$^      raise typeerrorno default reduce due to nontrivial cinit$^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself              $^      raise typeerrorno default reduce due to nontrivial cinit$^  def setstatecythonself pyxstate$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compiler.reducecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself$^      raise typeerrorno default reduce due to nontrivial cinit$^  def setstatecythonself pyxstate              $^      raise typeerrorno default reduce due to nontrivial cinit$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0compiler0setstatecythonpyobject pyxvself pyobject pyxvpyxstate proto$^static pyobject pyxpw0pywrapfst0compiler0setstatecythonpyobject pyxvself pyobject pyxvpyxstate $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetstatecython wrapper 0$^  pyxr  pyxpf0pywrapfst0compiler0setstatecythonstruct pyxobj0pywrapfstcompiler pyxvself pyobject pyxvpyxstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0compiler0setstatecythoncythonunused struct pyxobj0pywrapfstcompiler pyxvself cythonunused pyobject pyxvpyxstate $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetstatecython 0$^$^   tree fragment0$^      raise typeerrorno default reduce due to nontrivial cinit$^  def setstatecythonself pyxstate$^      raise typeerrorno default reduce due to nontrivial cinit              $^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorno default reduce due to nontrivial cinit$^  def setstatecythonself pyxstate              $^      raise typeerrorno default reduce due to nontrivial cinit$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.compiler.setstatecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    $^  $^    def initself              $^      raise fstdeletedconstructorerror$^          cannot construct .formatself.class.name$^ $^$^ python wrapper $^static int pyxpw0pywrapfst0farreader0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static int pyxpw0pywrapfst0farreader0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextinit wrapper 0$^  if unlikelypytuplegetsizepyxargs  0 $^    pyxraiseargtupleinvalidinit 0 0 0 pytuplegetsizepyxargs return 0$^  if unlikelypyxkwds  unlikelypydictsizepyxkwds  0  unlikelypyxcheckkeywordstringspyxkwds init 0 return 0$^  pyxr  pyxpf0pywrapfst0farreaderinitstruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0farreaderinitstruct pyxobj0pywrapfstfarreader pyxvself $^  int pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextinit 0$^$^   pywrapfst.pyx0000$^  $^    def initself$^      raise fstdeletedconstructorerror              $^          cannot construct .formatself.class.name$^  $^ $^  pyxt0  pyxgetmoduleglobalnamepyxnsfstdeletedconstructorerror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^$^   pywrapfst.pyx0000$^    def initself$^      raise fstdeletedconstructorerror$^          cannot construct .formatself.class.name              $^  $^    def reprself$^ $^  pyxt0  pyxpyobjectgetattrstrpyxkpscannotconstruct pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsclass if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyobjectgetattrstrpyxt0 pyxnsname if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    $^  $^    def initself              $^      raise fstdeletedconstructorerror$^          cannot construct .formatself.class.name$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.init pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^          cannot construct .formatself.class.name$^  $^    def reprself              $^      return  farreader at 0xx.formatself.fartype idself$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader0reprpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst0farreader0reprpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrepr wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader0reprstruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader0reprstruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  int pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrepr 0$^$^   pywrapfst.pyx0000$^  $^    def reprself$^      return  farreader at 0xx.formatself.fartype idself              $^  $^    classmethod$^ $^  pyxxdecrefpyxr$^  pyxt0  pyxpyobjectgetattrstrpyxkpsfarreaderat0xx pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fartype$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxconvertpybytesstringtopystdinstringstruct pyxvtabstruct0pywrapfstfarreader pyxvselfpyxvtabfartypepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxincrefpyobject pyxvself$^  pyxgiverefpyobject pyxvself$^  pytuplesetitempyxt0 0 pyobject pyxvself$^  pyxt0  pyxpyobjectcallpyxbuiltinid pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  pyxt0  0$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^      pyxt0  0$^    $^  $^  if cythonfastpycall$^  if pyfunctioncheckpyxt0 $^    pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^    pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxdecrefpyxt0 pyxt0  0$^   else$^  endif$^  if cythonfastpyccall$^  if pyxpyfastcfunctioncheckpyxt0 $^    pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^    pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxdecrefpyxt0 pyxt0  0$^   else$^  endif$^  $^    pyxt0  pytuplenew0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pyxt0 $^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^    $^    pyxgiverefpyxt0$^    pytuplesetitempyxt0 0pyxt0 pyxt0$^    pyxgiverefpyxt0$^    pytuplesetitempyxt0 0pyxt0 pyxt0$^    pyxt0  0$^    pyxt0  0$^    pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^          cannot construct .formatself.class.name$^  $^    def reprself              $^      return  farreader at 0xx.formatself.fartype idself$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.repr pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^    classmethod$^    def opencls filenames              $^      $^      farreader.openfilenames$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader0openpyobject pyxvcls pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst0farreader0open  n    farreader.openfilenamesnn    creates a farreader object.nn    this class method creates a farreader given the string location of one orn    more far files on disk.nn    argsn      filenames the string location of one or more input far files.nn    returnsn      a new farreader instance.nn    raisesn      fstioerror read failed.n    $^static pyobject pyxpw0pywrapfst0farreader0openpyobject pyxvcls pyobject pyxargs pyobject pyxkwds $^  pyobject pyxvfilenames  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextopen wrapper 0$^  if unlikelypyxkwds  unlikelypydictsizepyxkwds  0  unlikelypyxcheckkeywordstringspyxkwds open 0 return null$^  pyxincrefpyxargs$^  pyxvfilenames  pyxargs$^  pyxr  pyxpf0pywrapfst0farreader0openpytypeobjectpyxvcls pyxvfilenames$^$^   function exit code $^  pyxxdecrefpyxvfilenames$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader0opencythonunused pytypeobject pyxvcls pyobject pyxvfilenames $^  stduniqueptrfstscriptfarreaderclass  pyxvtfar$^  struct pyxobj0pywrapfstfarreader pyxvresult  0$^  pyobject pyxvfilename  null$^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyssizet pyxt0$^  pyobject pyxt0  null$^  stdstring pyxt0$^  stdvectorstdstring  pyxt0$^  int pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt00  null$^  pyxrefnannysetupcontextopen 0$^  pyxincrefpyxvfilenames$^$^   pywrapfst.pyx0000$^        fstioerror read failed.$^      $^      filenames  tostringfilename for filename in filenames              $^      cdef uniqueptrfst.farreaderclass tfar$^      tfar.resetfst.farreaderclass.openfilenames$^ $^  pyxt0  pylistnew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxvfilenames pyxincrefpyxt0 pyxt0  0$^  for  $^    if pyxt0  pytuplegetsizepyxt0 break$^    if cythonassumesafemacros  cythonavoidborrowedrefs$^    pyxt0  pytuplegetitempyxt0 pyxt0 pyxincrefpyxt0 pyxt0 if unlikely0  0 pyxerr0 0000 pyxl0error$^    else$^    pyxt0  pysequenceitempyxt0 pyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    endif$^    pyxxdecrefsetpyxvfilename pyxt0$^    pyxt0  0$^    pyxt0  pyxf0pywrapfsttostringpyxvfilename null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^    pyxt0  pyxconvertpybytesstringtopystdinstringpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if unlikelypyxlistcompappendpyxt0 pyobjectpyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxdecrefsetpyxvfilenames pyxt0$^  pyxt0  0$^$^   pywrapfst.pyx0000$^      filenames  tostringfilename for filename in filenames$^      cdef uniqueptrfst.farreaderclass tfar$^      tfar.resetfst.farreaderclass.openfilenames              $^      if tfar.get  null$^        raise fstioerrorread failed r.formatfilenames$^ $^  pyxt0  pyxconvertvectorfrompystd0a0astringpyxvfilenames if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvtfar.resetfstscriptfarreaderclassopenpyxt0$^$^   pywrapfst.pyx0000$^      cdef uniqueptrfst.farreaderclass tfar$^      tfar.resetfst.farreaderclass.openfilenames$^      if tfar.get  null              $^        raise fstioerrorread failed r.formatfilenames$^      cdef farreader result  farreader.newfarreader$^ $^  pyxt0  pyxvtfar.get  null  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$^      tfar.resetfst.farreaderclass.openfilenames$^      if tfar.get  null$^        raise fstioerrorread failed r.formatfilenames              $^      cdef farreader result  farreader.newfarreader$^      result.reader.resettfar.release$^ $^    pyxt0  pyxgetmoduleglobalnamepyxnsfstioerror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  pyxpyobjectgetattrstrpyxkpsreadfailedr pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxt0  null$^    if cythonunpackmethods  likelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxvfilenames if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvfilenames$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxvfilenames$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^       else$^      endif$^      $^        pyxt00  pytuplenew00 if unlikelypyxt00 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt00$^        pyxgiverefpyxt0 pytuplesetitempyxt00 0 pyxt0 pyxt0  null$^        pyxincrefpyxvfilenames$^        pyxgiverefpyxvfilenames$^        pytuplesetitempyxt00 00 pyxvfilenames$^        pyxt0  pyxpyobjectcallpyxt0 pyxt00 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt00 pyxt00  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxt0  null$^    if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^      pyxt0  pymethodgetselfpyxt0$^      if likelypyxt0 $^        pyobject function  pymethodgetfunctionpyxt0$^        pyxincrefpyxt0$^        pyxincreffunction$^        pyxdecrefsetpyxt0 function$^      $^    $^    if pyxt0 $^      pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^     else $^      if cythonfastpycall$^      if pyfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      if cythonfastpyccall$^      if pyxpyfastcfunctioncheckpyxt0 $^        pyobject pyxtemp0  pyxt0 pyxt0$^        pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxxdecrefpyxt0 pyxt0  0$^        pyxgotrefpyxt0$^        pyxdecrefpyxt0 pyxt0  0$^       else$^      endif$^      $^        pyxt00  pytuplenew00 if unlikelypyxt00 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt00$^        pyxgiverefpyxt0 pytuplesetitempyxt00 0 pyxt0 pyxt0  null$^        pyxgiverefpyxt0$^        pytuplesetitempyxt00 00 pyxt0$^        pyxt0  0$^        pyxt0  pyxpyobjectcallpyxt0 pyxt00 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^        pyxdecrefpyxt00 pyxt00  0$^      $^    $^    pyxdecrefpyxt0 pyxt0  0$^    pyxraisepyxt0 0 0 0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxerr0 0000 pyxl0error$^$^     pywrapfst.pyx0000$^      cdef uniqueptrfst.farreaderclass tfar$^      tfar.resetfst.farreaderclass.openfilenames$^      if tfar.get  null              $^        raise fstioerrorread failed r.formatfilenames$^      cdef farreader result  farreader.newfarreader$^ $^  $^$^   pywrapfst.pyx0000$^      if tfar.get  null$^        raise fstioerrorread failed r.formatfilenames$^      cdef farreader result  farreader.newfarreader              $^      result.reader.resettfar.release$^      return result$^ $^  pyxt0  pyxtpnew0pywrapfstfarreaderpytypeobject pyxptype0pywrapfstfarreader pyxemptytuple null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  if likelypyxtypetestpyxt0 pyxptype0pywrapfstfarreader pyxerr0 0000 pyxl0error$^  pyxvresult  struct pyxobj0pywrapfstfarreader pyxt0$^  pyxt0  0$^$^   pywrapfst.pyx0000$^        raise fstioerrorread failed r.formatfilenames$^      cdef farreader result  farreader.newfarreader$^      result.reader.resettfar.release              $^      return result$^  $^ $^  if unlikelypyobject pyxvresult  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxvresultreader.resetpyxvtfar.release$^$^   pywrapfst.pyx0000$^      cdef farreader result  farreader.newfarreader$^      result.reader.resettfar.release$^      return result              $^  $^    cpdef string arctypeself$^ $^  pyxxdecrefpyxr$^  pyxincrefpyobject pyxvresult$^  pyxr  pyobject pyxvresult$^  goto pyxl0$^$^   pywrapfst.pyx0000$^  $^    classmethod$^    def opencls filenames              $^      $^      farreader.openfilenames$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt00$^  pyxaddtracebackpywrapfst.farreader.open pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxdecrefpyxvfilenames$^  pyxxdecrefpyobject pyxvresult$^  pyxxdecrefpyxvfilename$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return result$^  $^    cpdef string arctypeself              $^      $^      arctypeself$^ $^$^static pyobject pyxpw0pywrapfst0farreader0arctypepyobject pyxvself cythonunused pyobject unused proto$^static stdstring pyxf0pywrapfst0farreaderarctypestruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  stdstring pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  stdstring pyxt0$^  pyxrefnannysetupcontextarctype 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsarctype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader0arctype $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxconvertstringfrompystdinstringpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      returns a string indicating the arc type.$^      $^      return self.reader.get.arctype              $^  $^    cpdef bool doneself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfreader.getarctype$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return result$^  $^    cpdef string arctypeself              $^      $^      arctypeself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.farreader.arctype pyxclineno pyxlineno pyxfilename 0 0$^  pyxpretendtoinitializepyxr$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader0arctypepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0farreader0arctype  n    arctypeselfnn    returns a string indicating the arc type.n    $^static pyobject pyxpw0pywrapfst0farreader0arctypepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextarctype wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader0arctypestruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader0arctypestruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextarctype 0$^  pyxxdecrefpyxr$^  pyxt0  pyxconvertpybytesstringtopystdinstringpyxf0pywrapfst0farreaderarctypepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.arctype pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.reader.get.arctype$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^static pyobject pyxpw0pywrapfst0farreader0donepyobject pyxvself cythonunused pyobject unused proto$^static bool pyxf0pywrapfst0farreaderdonestruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  bool pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  bool pyxt0$^  pyxrefnannysetupcontextdone 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsdone if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader0done $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyobjectistruepyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        true if the iterator is exhausted false otherwise.$^      $^      return self.reader.get.done              $^  $^    cpdef bool errorself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfreader.getdone$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return self.reader.get.arctype$^  $^    cpdef bool doneself              $^      $^      doneself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.farreader.done pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader0donepyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0farreader0done  n    doneselfnn    indicates whether the iterator is exhausted or not.nn    returnsn      true if the iterator is exhausted false otherwise.n    $^static pyobject pyxpw0pywrapfst0farreader0donepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextdone wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader0donestruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader0donestruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextdone 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyboolfromlongpyxf0pywrapfst0farreaderdonepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.done pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.reader.get.done$^  $^    cpdef bool errorself              $^      $^      errorself$^ $^$^static pyobject pyxpw0pywrapfst0farreader00errorpyobject pyxvself cythonunused pyobject unused proto$^static bool pyxf0pywrapfst0farreadererrorstruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  bool pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  bool pyxt0$^  pyxrefnannysetupcontexterror 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnserror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader00error $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyobjectistruepyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        true if the farreader is in an errorful state false otherwise.$^      $^      return self.reader.get.error              $^  $^    cpdef string fartypeself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfreader.geterror$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return self.reader.get.done$^  $^    cpdef bool errorself              $^      $^      errorself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.farreader.error pyxclineno pyxlineno pyxfilename 0 0$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00errorpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0farreader00error  n    errorselfnn    indicates whether the farreader has encountered an error.nn    returnsn      true if the farreader is in an errorful state false otherwise.n    $^static pyobject pyxpw0pywrapfst0farreader00errorpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontexterror wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00errorstruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00errorstruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontexterror 0$^  pyxxdecrefpyxr$^  pyxt0  pyxpyboolfromlongpyxf0pywrapfst0farreadererrorpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.error pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.reader.get.error$^  $^    cpdef string fartypeself              $^      return fst.getfartypestringself.reader.get.type$^  $^ $^$^static pyobject pyxpw0pywrapfst0farreader00fartypepyobject pyxvself cythonunused pyobject unused proto$^static stdstring pyxf0pywrapfst0farreaderfartypestruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  stdstring pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  stdstring pyxt0$^  pyxrefnannysetupcontextfartype 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsfartype if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader00fartype $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxconvertstringfrompystdinstringpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^  $^    cpdef string fartypeself$^      return fst.getfartypestringself.reader.get.type              $^  $^    cpdef bool findself key except $^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  fstgetfartypestringpyxvselfreader.gettype$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return self.reader.get.error$^  $^    cpdef string fartypeself              $^      return fst.getfartypestringself.reader.get.type$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.farreader.fartype pyxclineno pyxlineno pyxfilename 0 0$^  pyxpretendtoinitializepyxr$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00fartypepyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst0farreader00fartypepyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextfartype wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00fartypestruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00fartypestruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextfartype 0$^  pyxxdecrefpyxr$^  pyxt0  pyxconvertpybytesstringtopystdinstringpyxf0pywrapfst0farreaderfartypepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.fartype pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return fst.getfartypestringself.reader.get.type$^  $^    cpdef bool findself key except               $^      $^      findself key$^ $^$^static pyobject pyxpw0pywrapfst0farreader00findpyobject pyxvself pyobject pyxvkey proto$^static bool pyxf0pywrapfst0farreaderfindstruct pyxobj0pywrapfstfarreader pyxvself pyobject pyxvkey int pyxskipdispatch $^  bool pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  bool pyxt0$^  stdstring pyxt0$^  pyxrefnannysetupcontextfind 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsfind if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader00find $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxvkey if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxgotrefpyxt0$^       else $^        if cythonfastpycall$^        if pyfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxvkey$^          pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^         else$^        endif$^        if cythonfastpyccall$^        if pyxpyfastcfunctioncheckpyxt0 $^          pyobject pyxtemp0  pyxt0 pyxvkey$^          pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxxdecrefpyxt0 pyxt0  0$^          pyxgotrefpyxt0$^         else$^        endif$^        $^          pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^          pyxincrefpyxvkey$^          pyxgiverefpyxvkey$^          pytuplesetitempyxt0 00 pyxvkey$^          pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^          pyxgotrefpyxt0$^          pyxdecrefpyxt0 pyxt0  0$^        $^      $^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxpyobjectistruepyxt0 if unlikelypyxt0  bool0  pyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        true if the key was found false otherwise.$^      $^      return self.reader.get.findtostringkey              $^  $^    cpdef fst getfstself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxf0pywrapfsttostringpyxvkey null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxr  pyxvselfreader.getfindpyxt0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return fst.getfartypestringself.reader.get.type$^  $^    cpdef bool findself key except               $^      $^      findself key$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.find pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00findpyobject pyxvself pyobject pyxvkey proto$^static char pyxdoc0pywrapfst0farreader00find  n    findself keynn    sets the current position to the first entry greater than or equal to then    key a string and indicates whether or not a match was found.nn    argsn      key a string key.nn    returnsn      true if the key was found false otherwise.n    $^static pyobject pyxpw0pywrapfst0farreader00findpyobject pyxvself pyobject pyxvkey $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextfind wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00findstruct pyxobj0pywrapfstfarreader pyxvself pyobject pyxvkey$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00findstruct pyxobj0pywrapfstfarreader pyxvself pyobject pyxvkey $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  bool pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextfind 0$^  pyxxdecrefpyxr$^  pyxt0  pyxf0pywrapfst0farreaderfindpyxvself pyxvkey 0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxpyboolfromlongpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.find pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.reader.get.findtostringkey$^  $^    cpdef fst getfstself              $^      $^      getfstself$^ $^$^static pyobject pyxpw0pywrapfst0farreader00getfstpyobject pyxvself cythonunused pyobject unused proto$^static struct pyxobj0pywrapfstfst pyxf0pywrapfst0farreadergetfststruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  struct pyxobj0pywrapfstfst pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextgetfst 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsgetfst if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader00getfst $^      pyxxdecrefpyobject pyxr$^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      if likelypyxt0  pynone  likelypyxtypetestpyxt0 pyxptype0pywrapfstfst pyxerr0 0000 pyxl0error$^      pyxr  struct pyxobj0pywrapfstfst pyxt0$^      pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        a copy of the fst at the current position.$^      $^      return initxfstnew fst.fstclass              $^          derefself.reader.get.getfstclass$^  $^ $^  pyxxdecrefpyobject pyxr$^$^   pywrapfst.pyx0000$^      $^      return initxfstnew fst.fstclass$^          derefself.reader.get.getfstclass              $^  $^    cpdef string getkeyself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^$^   pywrapfst.pyx0000$^        a copy of the fst at the current position.$^      $^      return initxfstnew fst.fstclass              $^          derefself.reader.get.getfstclass$^  $^ $^  pyxt0  pyobject pyxf0pywrapfstinitxfstnew fstscriptfstclasspyxvselfreader.getgetfstclass if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  struct pyxobj0pywrapfstfst pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^      return self.reader.get.findtostringkey$^  $^    cpdef fst getfstself              $^      $^      getfstself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.getfst pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxl0$^  pyxxgiverefpyobject pyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00getfstpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0farreader00getfst  n    getfstselfnn    returns the fst at the current position.nn    returnsn      a copy of the fst at the current position.n    $^static pyobject pyxpw0pywrapfst0farreader00getfstpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextgetfst wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00getfststruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00getfststruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextgetfst 0$^  pyxxdecrefpyxr$^  pyxt0  pyobject pyxf0pywrapfst0farreadergetfstpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.getfst pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^          derefself.reader.get.getfstclass$^  $^    cpdef string getkeyself              $^      $^      getkeyself$^ $^$^static pyobject pyxpw0pywrapfst0farreader00getkeypyobject pyxvself cythonunused pyobject unused proto$^static stdstring pyxf0pywrapfst0farreadergetkeystruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  stdstring pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  stdstring pyxt0$^  pyxrefnannysetupcontextgetkey 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsgetkey if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader00getkey $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxt0  pyxconvertstringfrompystdinstringpyxt0 if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^      pyxdecrefpyxt0 pyxt0  0$^      pyxr  pyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^        the string key at the current position.$^      $^      return self.reader.get.getkey              $^  $^    cpdef void nextself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxr  pyxvselfreader.getgetkey$^  goto pyxl0$^$^   pywrapfst.pyx0000$^          derefself.reader.get.getfstclass$^  $^    cpdef string getkeyself              $^      $^      getkeyself$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.farreader.getkey pyxclineno pyxlineno pyxfilename 0 0$^  pyxpretendtoinitializepyxr$^  pyxl0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00getkeypyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0farreader00getkey  n    getkeyselfnn    returns the string key at the current position.nn    returnsn      the string key at the current position.n    $^static pyobject pyxpw0pywrapfst0farreader00getkeypyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextgetkey wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00getkeystruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00getkeystruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextgetkey 0$^  pyxxdecrefpyxr$^  pyxt0  pyxconvertpybytesstringtopystdinstringpyxf0pywrapfst0farreadergetkeypyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.getkey pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      return self.reader.get.getkey$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^static pyobject pyxpw0pywrapfst0farreader00nextpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst0farreadernextstruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsnext if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader00next $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      advances the iterator.$^      $^      self.reader.get.next              $^  $^    cpdef void resetself$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfreader.getnext$^$^   pywrapfst.pyx0000$^      return self.reader.get.getkey$^  $^    cpdef void nextself              $^      $^      nextself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.farreader.next pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00nextpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0farreader00next  n    nextselfnn    advances the iterator.n    $^static pyobject pyxpw0pywrapfst0farreader00nextpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextnext wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00nextstruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00nextstruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextnext 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst0farreadernextpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.next pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.reader.get.next$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^static pyobject pyxpw0pywrapfst0farreader00resetpyobject pyxvself cythonunused pyobject unused proto$^static void pyxf0pywrapfst0farreaderresetstruct pyxobj0pywrapfstfarreader pyxvself int pyxskipdispatch $^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^   check if called by wrapper $^  if unlikelypyxskipdispatch $^   check if overridden in python $^  else if unlikelypytypepyobject pyxvselftpdictoffset  0 $^    pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsreset if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pycfunctioncheckpyxt0  pycfunctiongetfunctionpyxt0  pycfunctionpyxpw0pywrapfst0farreader00reset $^      pyxincrefpyxt0$^      pyxt0  pyxt0 pyxt0  null$^      if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^        pyxt0  pymethodgetselfpyxt0$^        if likelypyxt0 $^          pyobject function  pymethodgetfunctionpyxt0$^          pyxincrefpyxt0$^          pyxincreffunction$^          pyxdecrefsetpyxt0 function$^        $^      $^      if pyxt0 $^        pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^        pyxdecrefpyxt0 pyxt0  0$^       else $^        pyxt0  pyxpyobjectcallnoargpyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      $^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      pyxdecrefpyxt0 pyxt0  0$^      goto pyxl0$^    $^    pyxdecrefpyxt0 pyxt0  0$^  $^$^   pywrapfst.pyx0000$^      resets the iterator to the initial position.$^      $^      self.reader.get.reset              $^  $^    def getitemself key$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxvselfreader.getreset$^$^   pywrapfst.pyx0000$^      self.reader.get.next$^  $^    cpdef void resetself              $^      $^      resetself$^ $^$^   function exit code $^  goto pyxl0$^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxwriteunraisablepywrapfst.farreader.reset pyxclineno pyxlineno pyxfilename 0 0$^  pyxl0$^  pyxrefnannyfinishcontext$^$^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00resetpyobject pyxvself cythonunused pyobject unused proto$^static char pyxdoc0pywrapfst0farreader00reset  n    resetselfnn    resets the iterator to the initial position.n    $^static pyobject pyxpw0pywrapfst0farreader00resetpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreset wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00resetstruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00resetstruct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreset 0$^  pyxxdecrefpyxr$^  pyxt0  pyxvoidtononepyxf0pywrapfst0farreaderresetpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.reset pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^      self.reader.get.reset$^  $^    def getitemself key              $^      cdef string ckey  tostringkey$^      if self.getkey  ckey or self.reader.get.findckey$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00getitempyobject pyxvself pyobject pyxvkey proto$^static pyobject pyxpw0pywrapfst0farreader00getitempyobject pyxvself pyobject pyxvkey $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextgetitem wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00getitemstruct pyxobj0pywrapfstfarreader pyxvself pyobject pyxvkey$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00getitemstruct pyxobj0pywrapfstfarreader pyxvself pyobject pyxvkey $^  stdstring pyxvckey$^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  int pyxt0$^  int pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextgetitem 0$^$^   pywrapfst.pyx0000$^  $^    def getitemself key$^      cdef string ckey  tostringkey              $^      if self.getkey  ckey or self.reader.get.findckey$^        return self.getfst$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvkey null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvckey  pyxt0$^$^   pywrapfst.pyx0000$^    def getitemself key$^      cdef string ckey  tostringkey$^      if self.getkey  ckey or self.reader.get.findckey              $^        return self.getfst$^      raise keyerrorkey$^ $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s getkey$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  struct pyxvtabstruct0pywrapfstfarreader pyxvselfpyxvtabgetkeypyxvself 0  pyxvckey  0$^  if pyxt0 $^   else $^    pyxt0  pyxt0$^    goto pyxl0boolbinopdone$^  $^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s reader$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxvselfreader.getfindpyxvckey  0$^  pyxt0  pyxt0$^  pyxl0boolbinopdone$^  if pyxt0 $^$^     pywrapfst.pyx0000$^      cdef string ckey  tostringkey$^      if self.getkey  ckey or self.reader.get.findckey$^        return self.getfst              $^      raise keyerrorkey$^  $^ $^    pyxxdecrefpyxr$^    if unlikelypyobject pyxvself  pynone $^      pyerrformatpyexcattributeerror nonetype object has no attribute .00s getfst$^      pyxerr0 0000 pyxl0error$^    $^    pyxt0  pyobject struct pyxvtabstruct0pywrapfstfarreader pyxvselfpyxvtabgetfstpyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxr  pyxt0$^    pyxt0  0$^    goto pyxl0$^$^     pywrapfst.pyx0000$^    def getitemself key$^      cdef string ckey  tostringkey$^      if self.getkey  ckey or self.reader.get.findckey              $^        return self.getfst$^      raise keyerrorkey$^ $^  $^$^   pywrapfst.pyx0000$^      if self.getkey  ckey or self.reader.get.findckey$^        return self.getfst$^      raise keyerrorkey              $^  $^  $^ $^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxincrefpyxvkey$^  pyxgiverefpyxvkey$^  pytuplesetitempyxt0 0 pyxvkey$^  pyxt0  pyxpyobjectcallpyxbuiltinkeyerror pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^      self.reader.get.reset$^  $^    def getitemself key              $^      cdef string ckey  tostringkey$^      if self.getkey  ckey or self.reader.get.findckey$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.getitem pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself              $^      raise typeerrorself.reader cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00reducecythonpyobject pyxvself cythonunused pyobject unused proto$^static pyobject pyxpw0pywrapfst0farreader00reducecythonpyobject pyxvself cythonunused pyobject unused $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextreducecython wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00reducecythonstruct pyxobj0pywrapfstfarreader pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00reducecythoncythonunused struct pyxobj0pywrapfstfarreader pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextreducecython 0$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.reader cannot be converted to a python object for pickling              $^  def setstatecythonself pyxstate$^      raise typeerrorself.reader cannot be converted to a python object for pickling$^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself              $^      raise typeerrorself.reader cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.reducecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ tree fragment0$^  def reducecythonself$^      raise typeerrorself.reader cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.reader cannot be converted to a python object for pickling$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farreader00setstatecythonpyobject pyxvself pyobject pyxvpyxstate proto$^static pyobject pyxpw0pywrapfst0farreader00setstatecythonpyobject pyxvself pyobject pyxvpyxstate $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextsetstatecython wrapper 0$^  pyxr  pyxpf0pywrapfst0farreader00setstatecythonstruct pyxobj0pywrapfstfarreader pyxvself pyobject pyxvpyxstate$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farreader00setstatecythoncythonunused struct pyxobj0pywrapfstfarreader pyxvself cythonunused pyobject pyxvpyxstate $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextsetstatecython 0$^$^   tree fragment0$^      raise typeerrorself.reader cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate$^      raise typeerrorself.reader cannot be converted to a python object for pickling              $^ $^  pyxt0  pyxpyobjectcallpyxbuiltintypeerror pyxtuple00 null if unlikelypyxt0 pyxerr0 0 pyxl0error$^  pyxgotrefpyxt0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0 pyxl0error$^$^   tree fragment0$^  def reducecythonself$^      raise typeerrorself.reader cannot be converted to a python object for pickling$^  def setstatecythonself pyxstate              $^      raise typeerrorself.reader cannot be converted to a python object for pickling$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farreader.setstatecython pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^    $^  $^    def initself              $^      raise fstdeletedconstructorerror$^          cannot construct .formatself.class.name$^ $^$^ python wrapper $^static int pyxpw0pywrapfst0farwriter0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds proto$^static int pyxpw0pywrapfst0farwriter0initpyobject pyxvself pyobject pyxargs pyobject pyxkwds $^  int pyxr$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextinit wrapper 0$^  if unlikelypytuplegetsizepyxargs  0 $^    pyxraiseargtupleinvalidinit 0 0 0 pytuplegetsizepyxargs return 0$^  if unlikelypyxkwds  unlikelypydictsizepyxkwds  0  unlikelypyxcheckkeywordstringspyxkwds init 0 return 0$^  pyxr  pyxpf0pywrapfst0farwriterinitstruct pyxobj0pywrapfstfarwriter pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static int pyxpf0pywrapfst0farwriterinitstruct pyxobj0pywrapfstfarwriter pyxvself $^  int pyxr$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextinit 0$^$^   pywrapfst.pyx0000$^  $^    def initself$^      raise fstdeletedconstructorerror              $^          cannot construct .formatself.class.name$^  $^ $^  pyxt0  pyxgetmoduleglobalnamepyxnsfstdeletedconstructorerror if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^$^   pywrapfst.pyx0000$^    def initself$^      raise fstdeletedconstructorerror$^          cannot construct .formatself.class.name              $^  $^    def reprself$^ $^  pyxt0  pyxpyobjectgetattrstrpyxkpscannotconstruct pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyobjectgetattrstrpyobject pyxvself pyxnsclass if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pyxpyobjectgetattrstrpyxt0 pyxnsname if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  if cythonunpackmethods  unlikelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^    $^  $^  if pyxt0 $^    pyxt0  pyxpyobjectcalloneargpyxt0 pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^   else $^    if cythonfastpycall$^    if pyfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    if cythonfastpyccall$^    if pyxpyfastcfunctioncheckpyxt0 $^      pyobject pyxtemp0  pyxt0 pyxt0$^      pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp00 00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxxdecrefpyxt0 pyxt0  0$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^     else$^    endif$^    $^      pyxt0  pytuplenew00 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^      pyxgiverefpyxt0$^      pytuplesetitempyxt0 00 pyxt0$^      pyxt0  0$^      pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^      pyxgotrefpyxt0$^      pyxdecrefpyxt0 pyxt0  0$^    $^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxraisepyxt0 0 0 0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^    $^  $^    def initself              $^      raise fstdeletedconstructorerror$^          cannot construct .formatself.class.name$^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farwriter.init pyxclineno pyxlineno pyxfilename$^  pyxr  0$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^          cannot construct .formatself.class.name$^  $^    def reprself              $^      return  farwriter at 0xx.formatself.fartype idself$^  $^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farwriter0reprpyobject pyxvself proto$^static pyobject pyxpw0pywrapfst0farwriter0reprpyobject pyxvself $^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextrepr wrapper 0$^  pyxr  pyxpf0pywrapfst0farwriter0reprstruct pyxobj0pywrapfstfarwriter pyxvself$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farwriter0reprstruct pyxobj0pywrapfstfarwriter pyxvself $^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  int pyxt0$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextrepr 0$^$^   pywrapfst.pyx0000$^  $^    def reprself$^      return  farwriter at 0xx.formatself.fartype idself              $^  $^    classmethod$^ $^  pyxxdecrefpyxr$^  pyxt0  pyxpyobjectgetattrstrpyxkpsfarwriterat0xx pyxnsformat if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  if unlikelypyobject pyxvself  pynone $^    pyerrformatpyexcattributeerror nonetype object has no attribute .00s fartype$^    pyxerr0 0000 pyxl0error$^  $^  pyxt0  pyxconvertpybytesstringtopystdinstringstruct pyxvtabstruct0pywrapfstfarwriter pyxvselfpyxvtabfartypepyxvself 0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxt0  pytuplenew0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxincrefpyobject pyxvself$^  pyxgiverefpyobject pyxvself$^  pytuplesetitempyxt0 0 pyobject pyxvself$^  pyxt0  pyxpyobjectcallpyxbuiltinid pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^  pyxgotrefpyxt0$^  pyxdecrefpyxt0 pyxt0  0$^  pyxt0  null$^  pyxt0  0$^  if cythonunpackmethods  likelypymethodcheckpyxt0 $^    pyxt0  pymethodgetselfpyxt0$^    if likelypyxt0 $^      pyobject function  pymethodgetfunctionpyxt0$^      pyxincrefpyxt0$^      pyxincreffunction$^      pyxdecrefsetpyxt0 function$^      pyxt0  0$^    $^  $^  if cythonfastpycall$^  if pyfunctioncheckpyxt0 $^    pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^    pyxt0  pyxpyfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxdecrefpyxt0 pyxt0  0$^   else$^  endif$^  if cythonfastpyccall$^  if pyxpyfastcfunctioncheckpyxt0 $^    pyobject pyxtemp0  pyxt0 pyxt0 pyxt0$^    pyxt0  pyxpycfunctionfastcallpyxt0 pyxtemp0pyxt0 0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxxdecrefpyxt0 pyxt0  0$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^    pyxdecrefpyxt0 pyxt0  0$^   else$^  endif$^  $^    pyxt0  pytuplenew0pyxt0 if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    if pyxt0 $^      pyxgiverefpyxt0 pytuplesetitempyxt0 0 pyxt0 pyxt0  null$^    $^    pyxgiverefpyxt0$^    pytuplesetitempyxt0 0pyxt0 pyxt0$^    pyxgiverefpyxt0$^    pytuplesetitempyxt0 0pyxt0 pyxt0$^    pyxt0  0$^    pyxt0  0$^    pyxt0  pyxpyobjectcallpyxt0 pyxt0 null if unlikelypyxt0 pyxerr0 0000 pyxl0error$^    pyxgotrefpyxt0$^    pyxdecrefpyxt0 pyxt0  0$^  $^  pyxdecrefpyxt0 pyxt0  0$^  pyxr  pyxt0$^  pyxt0  0$^  goto pyxl0$^$^   pywrapfst.pyx0000$^          cannot construct .formatself.class.name$^  $^    def reprself              $^      return  farwriter at 0xx.formatself.fartype idself$^  $^ $^$^   function exit code $^  pyxl0error$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxxdecrefpyxt0$^  pyxaddtracebackpywrapfst.farwriter.repr pyxclineno pyxlineno pyxfilename$^  pyxr  null$^  pyxl0$^  pyxxgiverefpyxr$^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^ pywrapfst.pyx0000$^  $^    classmethod$^    def createcls filename arctypebstandard fartypebdefault              $^      $^      farwriter.$^ $^$^ python wrapper $^static pyobject pyxpw0pywrapfst0farwriter0createpyobject pyxvcls pyobject pyxargs pyobject pyxkwds proto$^static char pyxdoc0pywrapfst0farwriter0create  n    farwriter.nn    creates a farwriter object.nn    this class method creates a farwriter given the desired output locationn    arc type and far type.nn    argsn      filename the string location for the output far files.n      arctype a string indicating the arc type.n      fartype a string indicating the far type one of fst stlistn          sttable sstable default.nn    returnsn      a new farwriter instance.nn    raisesn      fstioerror read failed.n    $^static pyobject pyxpw0pywrapfst0farwriter0createpyobject pyxvcls pyobject pyxargs pyobject pyxkwds $^  pyobject pyxvfilename  0$^  pyobject pyxvarctype  0$^  pyobject pyxvfartype  0$^  pyobject pyxr  0$^  pyxrefnannydeclarations$^  pyxrefnannysetupcontextcreate wrapper 0$^  $^    static pyobject pyxpyargnames  pyxnsfilenamepyxnsarctypepyxnsfartype0$^    pyobject values0  000$^    values0  pyobject pyxnbstandard$^    values0  pyobject pyxnbdefault$^    if unlikelypyxkwds $^      pyssizet kwargs$^      const pyssizet posargs  pytuplegetsizepyxargs$^      switch posargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 break$^        default goto pyxl0argtupleerror$^      $^      kwargs  pydictsizepyxkwds$^      switch posargs $^        case  0$^        if likelyvalues0  pydictgetitempyxkwds pyxnsfilename  0 kwargs$^        else goto pyxl0argtupleerror$^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsarctype$^          if value  values0  value kwargs $^        $^        cythonfallthrough$^        case  0$^        if kwargs  0 $^          pyobject value  pydictgetitempyxkwds pyxnsfartype$^          if value  values0  value kwargs $^        $^      $^      if unlikelykwargs  0 $^        if unlikelypyxparseoptionalkeywordspyxkwds pyxpyargnames 0 values posargs create  0 pyxerr0 0000 pyxl0error$^      $^     else $^      switch pytuplegetsizepyxargs $^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        cythonfallthrough$^        case  0 values0  pytuplegetitempyxargs 0$^        break$^        default goto pyxl0argtupleerror$^      $^    $^    pyxvfilename  values0$^    pyxvarctype  values0$^    pyxvfartype  values0$^  $^  goto pyxl0argumentunpackingdone$^  pyxl0argtupleerror$^  pyxraiseargtupleinvalidcreate 0 0 0 pytuplegetsizepyxargs pyxerr0 0000 pyxl0error$^  pyxl0error$^  pyxaddtracebackpywrapfst.farwriter.create pyxclineno pyxlineno pyxfilename$^  pyxrefnannyfinishcontext$^  return null$^  pyxl0argumentunpackingdone$^  pyxr  pyxpf0pywrapfst0farwriter0createpytypeobjectpyxvcls pyxvfilename pyxvarctype pyxvfartype$^$^   function exit code $^  pyxrefnannyfinishcontext$^  return pyxr$^$^$^static pyobject pyxpf0pywrapfst0farwriter0createcythonunused pytypeobject pyxvcls pyobject pyxvfilename pyobject pyxvarctype pyobject pyxvfartype $^  enum fstfartype pyxvft$^  fstscriptfarwriterclass pyxvtfar$^  struct pyxobj0pywrapfstfarwriter pyxvresult  0$^  pyobject pyxr  null$^  pyxrefnannydeclarations$^  stdstring pyxt0$^  stdstring pyxt0$^  int pyxt0$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyobject pyxt0  null$^  pyxrefnannysetupcontextcreate 0$^$^   pywrapfst.pyx0000$^        fstioerror read failed.$^      $^      cdef fst.fartype ft  fst.getfartypetostringfartype              $^      cdef fst.farwriterclass tfar  fst.farwriterclass.create$^          tostringfilename tostringarctype ft$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvfartype null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxvft  fstscriptgetfartypepyxt0$^$^   pywrapfst.pyx0000$^      cdef fst.fartype ft  fst.getfartypetostringfartype$^      cdef fst.farwriterclass tfar  fst.farwriterclass.create$^          tostringfilename tostringarctype ft              $^      if tfar  null$^        raise fstioerroropen failed r.formatfilename$^ $^  pyxt0  pyxf0pywrapfsttostringpyxvfilename null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^  pyxt0  pyxf0pywrapfsttostringpyxvarctype null if unlikelypyerroccurred pyxerr0 0000 pyxl0error$^$^   pywrapfst.pyx0000$^      $^      cdef fst.fartype ft  fst.getfartypetostringfartype$^      cdef fst.farwriterclass tfar  fst.farwriterclass.create              $^          tostringfilename tostringarctype ft$^      if tfar  null$^ $^  pyxvtfar  fstscriptfarwriterclasscreatepyxt0 pyxt0 pyxvft$^$^   pywrapfst.pyx0000$^      cdef fst.farwriterclass tfar  fst.farwriterclass.create$^          tostringfilename tostringarctype ft$^      if tfar  null              $^        raise fstioerroropen failed r.formatfilename$^      cdef farwriter result  farwriter.newfarwriter$^ $^  pyxt0  pyxvtfar  null  0$^  if pyxt0 $^$^     pywrapfst.pyx0000$